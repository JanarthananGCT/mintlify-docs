{
  "openapi": "3.0.1",
  "info": {
    "title": "API Documentation",
    "description": "---\n\n## **Introduction**\n\nSurveySparrow API allows you to integrate third party applications in your enterprise ecosystem and helps you to automate workflows like, sending a survey when a ticket is closed or a employee leaves the organisation.\n\n### Request & Response Format\nSurveySparrow API accepts HTTPS requests with JSON Arguments. The response will be in JSON format. Our Authentication is based on OAuth 2.0 and you can pass your access token over Authorization header as \"bearer token\"\n\n## **Authentication**\n\nSurveySparrow uses OAuth 2.0 for Authentication . You need to use the generated access token in request header as \"bearer token\" (-H \"Authorization: Bearer Your_ACCESS_TOKEN \")\n\n### Generate Access Token\n\nYou can Generate Access Token using the following steps:\n1. Login to your SurveySparrow account and go to Settings → Apps & Integrations.\n2. Create a Custom App.\n3. Enter Name, Description, select scope, and generate the access token.\n4. Copy and store the access token (Access token will be displayed only once and you may need to re-generate if you misplaced it).\n5. Save your app and you are good to start developing your custom app.\n\n## **Scopes**\n\nWhile creating an app you can define the scope or privilege for the API token to communicate with your surveysparrow account. Following are the available scopes and permissions currently supported in SurveySparrow API.\n\n| **Scope**                       | **Permission**                                           |\n|---------------------------------|----------------------------------------------------------|\n| View Contacts                   | List Contacts                                            |\n| Manage Contacts                 | Create Contacts, Update Contacts                         |\n| View Contact Lists              | List Contact Lists                                       |\n| Manage Contact List             | Create Contact List, Update Contact List                 |\n| View Employees                  | View your employees                                      |\n| Manage Employees                | Modify your employees, add new employees                 |\n| View Employee List              | View your employee list                                  |\n| Manage Employee List            | Modify your employee list, add new employee lists        |\n| View Survey                     | List Surveys                                             |\n| Manage Survey                   | Create and edit survey                                   |\n| View Responses                  | List Responses                                           |\n| Manage Share Survey             | Update Share                                             |\n| View Survey Settings            | View the survey settings you created                     |\n| View Survey Integrations        | View Survey Integrations for survey                      |\n| Manage Survey Settings          | Edit your survey settings                                |\n| View Question                   | View the question you created                            |\n| Manage Questions                | Create and edit questions                                |\n| View Variables                  | View the variables created for survey                    |\n| View Expressions                | View the expressions created for survey                  |\n| Manage Variables                | Create and delete survey variables                       |\n| View Themes                     | View your themes                                         |\n| Manage Responses                | Manage Responses                                         |\n| View Webhooks                   | View Webhooks of Survey                                  |\n| Manage Webhooks                 | Modify your webhooks, add new webhooks                   |\n| View Questions                  | View Questions in a Survey                               |\n| Manage Shares                   | Manage shares of a survey                                |\n| Manage Offline Devices          | Manage Offline Devices                                   |\n| View Workspace                  | View Your Workspace                                      |\n| Manage Workspace                | Manage your account workspace                            |\n| Manage 360 Invite               | Manage 360 invitees of Survey                            |\n| View 360 Invite                 | View 360 invite                                          |\n| View 360 Reports of Survey      | View 360 reports of Survey                               |\n| Manage Team                     | Manage teams in your account                             |\n| View Team                       | View Teams in your account                               |\n| View User                       | View User in your account                                |\n| Manage User                     | Manage user in your account                              |\n| View Targets                    | View Targets                                             |\n| View Audit Logs                 | View Audit Logs                                          |\n| Manage Audit Logs               | Manage Audit Logs                                        |\n| View Tickets                    | View Tickets in your account                             |\n| Manage Tickets                  | Create, Edit and Delete tickets in your account          |\n| View Ticket Comments            | View comments for tickets in account                     |\n| Manage Ticket Comments          | Manage comments for Tickets in account                   |\n| View Ticket Fields              | View the fields of Tickets in your account               |\n| Create Dashboards and Widgets   | Create dashboards and widgets for survey                 |\n| View Dashboards and Widgets     | View dashboards and widgets for survey                   |\n| View Reputation App Platforms   | View the app platforms for account in reputation         |\n| View Reputation Reviews         | View Reviews of Reputation for account                   |\n\n\n## **Error Handling**\n\nSurveySparrow uses standard HTTP status codes like 2xx for success and 4xx for failure . Please refer the following table for status codes.\n\n| **Status Code**           | **Permission**                                                              |\n|---------------------------|-----------------------------------------------------------------------------|\n| 200 OK                    | Request is successful                                                       |\n| 202 Accepted              | Request accepted but it is queued or processing                             |\n| 400 Bad Request           | Request has missing required parameters or validation errors                |\n| 401 Unauthorized          | Bad Token or missing token                                                  |\n| 403 Forbidden             | Access denied for the requested resource                                    |\n| 404 Not Found             | The requested resource doesn’t exist                                        |\n| 409 Conflict              | Request conflicts with another, trying to create already existing resource  |\n| 429 Too Many Requests     | Api request limit exceeded                                                  |\n| 500 Internal Server Error | Something went wrong in Surveysparrow                                       |\n\n\n\nSome of the error code above will give you a deeper level of information just like below\n\n\n| **Error Type**      | **Description**                                                            |\n|---------------------|----------------------------------------------------------------------------|\n| missing_scope       | Token doesn’t have the requested resource scope                            |\n| backend_error       | Error in Surveysparrow servers                                             |\n| already_exist       | The resource trying to create already exists                               |\n| permission_denied   | You don’t have the access rights for the requested resource                |\n| not_found           | The requested resource is not available in the system                      |\n| not_active          | Resource is not active now, so you can’t perform the operation             |\n| limit_exceeded      | You have reached your hourly quota                                         |\n| disabled            | The app or integration is disabled by the creator                          |\n| bad_token           | Due to any of the following reasons: Invalid token, Token expired, user revoked the access |\n\n## **Rate Limit**\n\nCurrently our API is rate limited based on the quota of the user on per hour, per day and per minute basis. Once you exceed this, API responds with an error code 429 (Too Many requests).\n\n## **Pagination**\n\nYou can use our pagination with limit and page parameter to navigate when your list exceed our default maximum number of results . When you exceed this you can paginate using Page params (Ex:- https://api.surveysparrow.com/v3/contacts?limit=100&page=2)\n\n__Note: To be passed as query parameter__\n\n| **Name**     | **Description**                     |\n|--------------|-------------------------------------|\n| limit        | No of results needed in a request   |\n| page         | Page No                             |\n\n__Note: For all GET calls you can use option params to paginate__",
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "https://app.surveysparrow.com/"
    }
  ],
  "tags": [],
  "paths": {
    "/v1/audit-logs": {
      "get": {
        "tags": ["audit_logs"],
        "summary": "List audit logs",
        "operationId": "getV1Auditlogs",
        "parameters": [
          {
            "name": "eventType",
            "in": "query",
            "schema": {
              "type": "string",
              "enum": [
                "SURVEY_CREATED",
                "SURVEY_EDITED",
                "SURVEY_DELETED",
                "THEME_ADDED",
                "THEME_EDITED",
                "THEME_DELETED",
                "USER_CREATED",
                "USER_DELETED",
                "USER_EDITED",
                "CONTACT_CREATED",
                "CONTACT_UPDATED",
                "CONTACT_DELETED",
                "CONTACT_PROPERTY_CREATED",
                "CONTACT_PROPERTY_EDITED",
                "CONTACT_PROPERTY_DELETED",
                "WORKSPACE_CREATED",
                "WORKSPACE_DELETED",
                "WORKSPACE_EDITED",
                "SYNC_DEVICES",
                "SURVEY_RESPONSE_IMPORT",
                "SURVEY_RESPONSE_DELETION",
                "SURVEY_CLOSED",
                "SURVEY_RESTORED",
                "SURVEY_OWNERSHIP_TRANSFER",
                "FOLDER_USER_ACCESS_GRANT",
                "FOLDER_USER_ACCESS_REMOVE",
                "FOLDER_TEAM_ACCESS_GRANT",
                "FOLDER_TEAM_ACCESS_REMOVE",
                "SURVEY_MOVED",
                "SURVEY_PASSWORD_CREATED",
                "SURVEY_PASSWORD_DELETED",
                "SURVEY_PASSWORD_EDITED",
                "QUESTION_CATALOG_CREATED",
                "QUESTION_CATALOG_DELETED",
                "LOGIN",
                "LOGOUT"
              ]
            }
          },
          {
            "name": "page",
            "in": "query",
            "schema": {
              "minimum": 1,
              "type": "number",
              "default": 1
            }
          },
          {
            "name": "maxResults",
            "in": "query",
            "schema": {
              "maximum": 500,
              "minimum": 1,
              "type": "number",
              "default": 100
            }
          },
          {
            "name": "user",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "startDate",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "endDate",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "Successful",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/v1/contactlist": {
      "get": {
        "tags": ["contact_list"],
        "summary": "List contact lists",
        "operationId": "getV1Contactlist",
        "responses": {
          "default": {
            "description": "Successful",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["contact_list"],
        "summary": "Create contact list",
        "operationId": "postV1Contactlist",
        "requestBody": {
          "content": {
            "*/*": {
              "schema": {
                "$ref": "#/components//schemas/Model55"
              }
            }
          },
          "required": false
        },
        "responses": {
          "default": {
            "description": "Successful",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "body"
      }
    },
    "/v1/contacts": {
      "get": {
        "tags": ["contacts"],
        "summary": " Get Contacts",
        "operationId": "getV1Contacts",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "description": "Custom Token generated from the App",
            "required": true,
            "schema": {
              "pattern": "/Bearer [^\\s]+/",
              "type": "string",
              "default": "Bearer <Token>"
            }
          },
          {
            "name": "maxResults",
            "in": "query",
            "schema": {
              "maximum": 100,
              "minimum": 1,
              "type": "number",
              "default": 50
            }
          },
          {
            "name": "page",
            "in": "query",
            "schema": {
              "type": "number",
              "default": 1
            }
          },
          {
            "name": "type",
            "in": "query",
            "description": "filters type of contact",
            "schema": {
              "type": "string",
              "enum": ["unsubscribed", "active", "bounced"]
            }
          },
          {
            "name": "search",
            "in": "query",
            "description": "search string which will search all the properties of a contact for a matching value",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components//schemas/Model2"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["contacts"],
        "summary": "Create contact",
        "operationId": "postV1Contacts",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "description": "Custom Token generated from the App",
            "required": true,
            "schema": {
              "pattern": "/Bearer [^\\s]+/",
              "type": "string",
              "default": "Bearer <Token>"
            }
          }
        ],
        "requestBody": {
          "content": {
            "*/*": {
              "schema": {
                "$ref": "#/components//schemas/Model57"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "Successful",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components//schemas/Model59"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "body"
      }
    },
    "/v1/roles": {
      "get": {
        "tags": ["roles"],
        "summary": "List roles",
        "operationId": "getV1Roles",
        "responses": {
          "default": {
            "description": "Successful",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/v1/surveys": {
      "get": {
        "tags": ["survey"],
        "summary": "Get surveys",
        "operationId": "getV1Surveys",
        "parameters": [
          {
            "name": "maxResults",
            "in": "query",
            "schema": {
              "maximum": 100,
              "minimum": 1,
              "type": "number",
              "default": 50
            }
          },
          {
            "name": "page",
            "in": "query",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "surveyTypes",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "archived",
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "default": {
            "description": "Successful",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["survey"],
        "summary": "Create survey",
        "operationId": "postV1Surveys",
        "requestBody": {
          "content": {
            "*/*": {
              "schema": {
                "$ref": "#/components//schemas/Model66"
              }
            }
          },
          "required": false
        },
        "responses": {
          "default": {
            "description": "Successful",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "body"
      }
    },
    "/v1/surveythemes": {
      "get": {
        "tags": ["survey"],
        "summary": "Get public themes for a Survey",
        "operationId": "getV1Surveythemes",
        "parameters": [
          {
            "name": "surveyType",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "Conversational",
                "Poll",
                "ClassicForm",
                "Kiosk",
                "OfflineApp",
                "NPS",
                "NPSChat",
                "CES",
                "CESChat",
                "CSAT",
                "CSATChat",
                "Employee360"
              ]
            }
          }
        ],
        "responses": {
          "default": {
            "description": "Successful",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/v1/targets": {
      "get": {
        "tags": ["targets"],
        "summary": "List targets",
        "operationId": "getV1Targets",
        "parameters": [
          {
            "name": "maxResults",
            "in": "query",
            "schema": {
              "maximum": 200,
              "minimum": 1,
              "type": "number",
              "default": 50
            }
          },
          {
            "name": "page",
            "in": "query",
            "schema": {
              "minimum": 1,
              "type": "number"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "Successful",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/v1/teams": {
      "get": {
        "tags": ["teams"],
        "summary": "List teams",
        "operationId": "getV1Teams",
        "responses": {
          "default": {
            "description": "Successful",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["teams"],
        "summary": "Create team",
        "operationId": "postV1Teams",
        "requestBody": {
          "content": {
            "*/*": {
              "schema": {
                "$ref": "#/components//schemas/Model67"
              }
            }
          },
          "required": false
        },
        "responses": {
          "default": {
            "description": "Successful",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "body"
      }
    },
    "/v1/users": {
      "get": {
        "tags": ["users"],
        "summary": "List users",
        "operationId": "getV1Users",
        "responses": {
          "default": {
            "description": "Successful",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["users"],
        "summary": "Create user",
        "operationId": "postV1Users",
        "requestBody": {
          "content": {
            "*/*": {
              "schema": {
                "$ref": "#/components//schemas/Model68"
              }
            }
          },
          "required": false
        },
        "responses": {
          "default": {
            "description": "Successful",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "body"
      }
    },
    "/v1/webhooks": {
      "get": {
        "tags": ["webhooks"],
        "summary": "List webhooks",
        "operationId": "getV1Webhooks",
        "parameters": [
          {
            "name": "maxResults",
            "in": "query",
            "schema": {
              "maximum": 100,
              "minimum": 1,
              "type": "number",
              "default": 50
            }
          },
          {
            "name": "page",
            "in": "query",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "Successful",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["webhooks"],
        "summary": "Create webhook",
        "operationId": "postV1Webhooks",
        "requestBody": {
          "content": {
            "*/*": {
              "schema": {
                "$ref": "#/components//schemas/Model70"
              }
            }
          },
          "required": false
        },
        "responses": {
          "default": {
            "description": "Successful",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "body"
      }
    },
    "/v1/workspaces": {
      "get": {
        "tags": ["workspaces"],
        "summary": "List workspaces",
        "operationId": "getV1Workspaces",
        "parameters": [
          {
            "name": "maxResults",
            "in": "query",
            "schema": {
              "maximum": 100,
              "minimum": 1,
              "type": "number",
              "default": 50
            }
          },
          {
            "name": "page",
            "in": "query",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "Successful",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["workspaces"],
        "summary": "Create workspace",
        "operationId": "postV1Workspaces",
        "requestBody": {
          "content": {
            "*/*": {
              "schema": {
                "$ref": "#/components//schemas/Model71"
              }
            }
          },
          "required": false
        },
        "responses": {
          "default": {
            "description": "Successful",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "body"
      }
    },
    "/v3/audit_logs": {
      "get": {
        "tags": ["audit_logs", "v3"],
        "summary": "List audit logs",
        "operationId": "getV3Audit_logs",
        "parameters": [
          {
            "name": "event_type",
            "in": "query",
            "description": "type of audit logs",
            "schema": {
              "type": "string",
              "enum": [
                "SURVEY_CREATED",
                "SURVEY_EDITED",
                "SURVEY_DELETED",
                "THEME_ADDED",
                "THEME_EDITED",
                "THEME_DELETED",
                "USER_CREATED",
                "USER_DELETED",
                "USER_EDITED",
                "CONTACT_CREATED",
                "CONTACT_UPDATED",
                "CONTACT_DELETED",
                "CONTACT_PROPERTY_CREATED",
                "CONTACT_PROPERTY_EDITED",
                "CONTACT_PROPERTY_DELETED",
                "WORKSPACE_CREATED",
                "WORKSPACE_DELETED",
                "WORKSPACE_EDITED",
                "SYNC_DEVICES",
                "SURVEY_RESPONSE_IMPORT",
                "SURVEY_RESPONSE_DELETION",
                "SURVEY_CLOSED",
                "SURVEY_RESTORED",
                "SURVEY_OWNERSHIP_TRANSFER",
                "FOLDER_USER_ACCESS_GRANT",
                "FOLDER_USER_ACCESS_REMOVE",
                "FOLDER_TEAM_ACCESS_GRANT",
                "FOLDER_TEAM_ACCESS_REMOVE",
                "SURVEY_MOVED",
                "SURVEY_PASSWORD_CREATED",
                "SURVEY_PASSWORD_DELETED",
                "SURVEY_PASSWORD_EDITED",
                "QUESTION_CATALOG_CREATED",
                "QUESTION_CATALOG_DELETED",
                "LOGIN",
                "LOGOUT"
              ]
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "The page number to start searching audit logs. Default page number is 1",
            "schema": {
              "minimum": 1,
              "type": "number",
              "default": 1
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "The maximum number of audit logs response per page. Defaults is 100 if not provided. Maximum allowed value is 500.",
            "schema": {
              "maximum": 500,
              "minimum": 1,
              "type": "number",
              "default": 100
            }
          },
          {
            "name": "start_date",
            "in": "query",
            "description": "Start date of data range",
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "end_date",
            "in": "query",
            "description": "End date of data range",
            "schema": {
              "type": "string",
              "format": "date"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components//schemas/Model3"
                }
              }
            }
          }
        }
      }
    },
    "/v3/channels": {
      "get": {
        "tags": ["channels"],
        "summary": "Get all channels",
        "operationId": "getV3Channels",
        "parameters": [
          {
            "name": "survey_id",
            "in": "query",
            "required": true,
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "schema": {
              "maximum": 100,
              "minimum": 1,
              "type": "number",
              "default": 50
            }
          },
          {
            "name": "page",
            "in": "query",
            "schema": {
              "minimum": 1,
              "type": "number"
            }
          },
          {
            "name": "type",
            "in": "query",
            "schema": {
              "type": "string",
              "enum": [
                "EMAIL",
                "LINK",
                "EMBED",
                "QR_CODE",
                "SMS",
                "WHATSAPP",
                "KIOSK",
                "SOCIAL_GOOGLE",
                "SOCIAL_TWITTER",
                "SOCIAL_FACEBOOK",
                "OFFLINE",
                "EMAIL_EMBED",
                "INAPP",
                "MOBILE_SDK",
                "SYSTEM",
                "SLACK",
                "TEAMS",
                "INTERCOM",
                "PORTAL",
                "SPOTCHECK"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/getChannelsSchema"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["channels"],
        "summary": "Create a channel",
        "description": "schedule, relative_schedule only required when mode is RECURRING, RELATIVE_RECURRING respectively and sms, email, link properties only required when type is SMS, EMAIL, LINK and animation_direction can be provided when type is OFFLINE",
        "operationId": "postV3Channels",
        "requestBody": {
          "content": {
            "*/*": {
              "schema": {
                "$ref": "#/components//schemas/Model80"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "Successful",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components//schemas/Model27"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "body"
      }
    },
    "/v3/contact_lists": {
      "get": {
        "tags": ["contact_lists", "v3"],
        "summary": "Get all contact lists",
        "operationId": "getV3Contact_lists",
        "responses": {
          "200": {
            "description": "Successful",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/getContactListsSchema"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["contact_lists", "v3"],
        "summary": "Create a contact list",
        "operationId": "postV3Contact_lists",
        "requestBody": {
          "content": {
            "*/*": {
              "schema": {
                "$ref": "#/components//schemas/Model81"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "Successful",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/contactListResponseSchema"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "body"
      }
    },
    "/v3/contact_properties": {
      "get": {
        "tags": ["contact_properties"],
        "summary": "Get all contact properties",
        "operationId": "getV3Contact_properties",
        "responses": {
          "200": {
            "description": "Successful",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/getContactPropertiesContactPropertiesSchema"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["contact_properties"],
        "summary": "Create a contact property",
        "operationId": "postV3Contact_properties",
        "requestBody": {
          "content": {
            "*/*": {
              "schema": {
                "$ref": "#/components//schemas/Model82"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "Successful",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/createContactPropertySchema"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "body"
      }
    },
    "/v3/contacts": {
      "get": {
        "tags": ["contacts", "v3"],
        "summary": "Get all Contacts",
        "operationId": "getV3Contacts",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "description": "Custom Token generated from the App",
            "required": true,
            "schema": {
              "pattern": "/Bearer [^\\s]+/",
              "type": "string",
              "default": "Bearer <Token>"
            }
          },
          {
            "name": "contact_list_id",
            "in": "query",
            "description": "Contact List Id",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "type",
            "in": "query",
            "description": "Filters type of contact",
            "schema": {
              "type": "string",
              "enum": ["unsubscribed", "active", "bounced"]
            }
          },
          {
            "name": "search",
            "in": "query",
            "description": "Search string which will search all the properties of a contact for a matching value",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of records you would like in a request",
            "schema": {
              "maximum": 50,
              "minimum": 1,
              "type": "number",
              "default": 50
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page of results",
            "schema": {
              "minimum": 1,
              "type": "number",
              "default": 1
            }
          },
          {
            "name": "contact_type",
            "in": "query",
            "description": "Type of contact",
            "schema": {
              "type": "string",
              "enum": ["contact", "employee"]
            }
          },
          {
            "name": "created_date.gte",
            "in": "query",
            "description": "Filter contacts created after the given date",
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "created_date.lte",
            "in": "query",
            "description": "Filter contacts created before the given date",
            "schema": {
              "type": "string",
              "format": "date"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/getContactsSchema"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["contacts", "v3"],
        "summary": "Create a contact",
        "operationId": "postV3Contacts",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "description": "Custom Token generated from the App",
            "required": true,
            "schema": {
              "pattern": "/Bearer [^\\s]+/",
              "type": "string",
              "default": "Bearer <Token>"
            }
          }
        ],
        "requestBody": {
          "content": {
            "*/*": {
              "schema": {
                "$ref": "#/components/schemas/createContactSchema"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "Successful",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components//schemas/Model83"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "body"
      }
    },
    "/v3/email_themes": {
      "get": {
        "tags": ["email_theme"],
        "summary": "Get email themes",
        "operationId": "getV3Email_themes",
        "responses": {
          "200": {
            "description": "Successful",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/emailThemeResponseSchema"
                }
              }
            }
          }
        }
      }
    },
    "/v3/expressions": {
      "get": {
        "tags": ["expressions", "v3"],
        "summary": "Get all survey expressions",
        "operationId": "getV3Expressions",
        "parameters": [
          {
            "name": "survey_id",
            "in": "query",
            "description": "Id of Survey",
            "required": true,
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Record limit per request; default is 50, maximum is 100.",
            "schema": {
              "maximum": 100,
              "minimum": 1,
              "type": "number",
              "default": 50
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page of results",
            "schema": {
              "minimum": 1,
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/getAllExpressionSchema"
                }
              }
            }
          }
        }
      }
    },
    "/v3/languages": {
      "get": {
        "tags": ["translation", "v3"],
        "summary": "Get all languages available for translation",
        "operationId": "getV3Languages",
        "responses": {
          "200": {
            "description": "Successful",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components//schemas/Model9"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components//schemas/Model10"
                }
              }
            }
          },
          "402": {
            "description": "Payment Required",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components//schemas/Model11"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components//schemas/Model12"
                }
              }
            }
          }
        }
      }
    },
    "/v3/metrics": {
      "get": {
        "tags": ["nps", "v3"],
        "summary": "Get metrics",
        "operationId": "getV3Metrics",
        "parameters": [
          {
            "name": "type",
            "in": "query",
            "description": "Value should be one of NPS",
            "required": true,
            "schema": {
              "type": "string",
              "enum": ["CES", "CSAT", "NPS"]
            }
          },
          {
            "name": "survey_id",
            "in": "query",
            "description": "If survey_id is not passed, metrics for all CX surveys in the account will be fetched",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "date.gte",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "date.lte",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "Successful",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/v3/questions": {
      "get": {
        "tags": ["questions", "v3"],
        "summary": "Get all survey questions",
        "operationId": "getV3Questions",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "schema": {
              "maximum": 100,
              "minimum": 1,
              "type": "number",
              "default": 50
            }
          },
          {
            "name": "page",
            "in": "query",
            "schema": {
              "minimum": 1,
              "type": "number",
              "default": 1
            }
          },
          {
            "name": "tag_name",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "survey_id",
            "in": "query",
            "description": "Id of Survey",
            "required": true,
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "language_label",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/getQuestionsSchema"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["questions", "v3"],
        "summary": "Create a question",
        "operationId": "postV3Questions",
        "requestBody": {
          "content": {
            "*/*": {
              "schema": {
                "$ref": "#/components//schemas/Model100"
              }
            }
          },
          "required": false
        },
        "responses": {
          "default": {
            "description": "Successful",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "body"
      }
    },
    "/v3/reminders": {
      "get": {
        "tags": ["reminder"],
        "summary": "List Channel reminders",
        "description": "Only applicable for Classic, CX and Chat surveys via EMAIL, SMS channels",
        "operationId": "getV3Reminders",
        "parameters": [
          {
            "name": "survey_id",
            "in": "query",
            "description": "Id of the survey",
            "required": true,
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "channel_id",
            "in": "query",
            "description": "Id of the channel",
            "required": true,
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "schema": {
              "maximum": 100,
              "minimum": 1,
              "type": "number",
              "default": 50
            }
          },
          {
            "name": "page",
            "in": "query",
            "schema": {
              "minimum": 1,
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/getRemindersSchema"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["reminder"],
        "summary": "Create Reminder for a channel",
        "description": "Only applicable for Classic, CX and Chat surveys via EMAIL, SMS channels",
        "operationId": "postV3Reminders",
        "requestBody": {
          "content": {
            "*/*": {
              "schema": {
                "$ref": "#/components//schemas/Model102"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "Successful",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/getReminderSchema"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "body"
      }
    },
    "/v3/reports": {
      "get": {
        "tags": ["reports", "v3"],
        "summary": "Get responses report public link",
        "operationId": "getV3Reports",
        "parameters": [
          {
            "name": "survey_id",
            "in": "query",
            "description": "ID of the survey",
            "required": true,
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "Successful",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/v3/response_properties": {
      "get": {
        "tags": ["response", "v3"],
        "summary": "Get response properties",
        "operationId": "getV3Response_properties",
        "responses": {
          "default": {
            "description": "Successful",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/v3/responses": {
      "get": {
        "tags": ["response", "v3"],
        "summary": "Get all responses",
        "operationId": "getV3Responses",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "schema": {
              "maximum": 1000,
              "minimum": 1,
              "type": "number",
              "default": 50
            }
          },
          {
            "name": "survey_id",
            "in": "query",
            "required": true,
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "contact_id",
            "in": "query",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "contacts",
            "in": "query",
            "description": "Filter using contact properties. Custom contact properties are not supported. Encode parameters when using special characters.",
            "schema": {
              "type": "object"
            }
          },
          {
            "name": "variables",
            "in": "query",
            "description": "Filter using custom variables. Encode parameters when using special characters. Provide the date values in either MM-DD-YYYY or YYYY-MM-DD format.",
            "schema": {
              "type": "object"
            }
          },
          {
            "name": "page",
            "in": "query",
            "schema": {
              "minimum": 1,
              "type": "number"
            }
          },
          {
            "name": "date.gte",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "date.lte",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "created_date.gte",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "created_date.lte",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "state",
            "in": "query",
            "schema": {
              "type": "string",
              "enum": ["started", "completed", "all"]
            }
          },
          {
            "name": "order_by",
            "in": "query",
            "schema": {
              "type": "string",
              "default": "completedTime",
              "enum": ["startTime", "id", "completedTime"]
            }
          },
          {
            "name": "order",
            "in": "query",
            "schema": {
              "type": "string",
              "default": "DESC",
              "enum": ["ASC", "DESC"],
              "x-convert": {
                "uppercase": true
              }
            },
            "x-convert": {
              "uppercase": true
            }
          },
          {
            "name": "preserve_format",
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/getResponsesSchema"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["response"],
        "summary": "Create a response",
        "operationId": "postV3Responses",
        "requestBody": {
          "content": {
            "*/*": {
              "schema": {
                "$ref": "#/components/schemas/completeRequestSchema"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "Successful",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/getCompletedResponseResponse"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "body"
      }
    },
    "/v3/roles": {
      "get": {
        "tags": ["roles", "v3"],
        "summary": "Get all roles",
        "operationId": "getV3Roles",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "Number of records you would like in a request",
            "schema": {
              "maximum": 100,
              "minimum": 1,
              "type": "number",
              "default": 50
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page of results",
            "schema": {
              "minimum": 1,
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/getRolesSchema"
                }
              }
            }
          }
        }
      }
    },
    "/v3/survey_folders": {
      "get": {
        "tags": ["survey_folder"],
        "summary": "Get all survey folders",
        "operationId": "getV3Survey_folders",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "schema": {
              "maximum": 100,
              "minimum": 1,
              "type": "number",
              "default": 50
            }
          },
          {
            "name": "page",
            "in": "query",
            "schema": {
              "minimum": 1,
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/getSurveyFoldersResponseSchema"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["survey_folder"],
        "summary": "Create a survey folder",
        "operationId": "postV3Survey_folders",
        "requestBody": {
          "content": {
            "*/*": {
              "schema": {
                "$ref": "#/components//schemas/Model71"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "Successful",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/getSurveyFolderResponseSchema"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "body"
      }
    },
    "/v3/surveys": {
      "get": {
        "tags": ["survey", "v3"],
        "summary": "Get all surveys",
        "operationId": "getV3Surveys",
        "parameters": [
          {
            "name": "survey_type",
            "in": "query",
            "description": "Type of survey",
            "schema": {
              "type": "string",
              "enum": [
                "Conversational",
                "ClassicForm",
                "Kiosk",
                "OfflineApp",
                "NPS",
                "NPSChat",
                "CES",
                "CESChat",
                "CSAT",
                "CSATChat",
                "Employee360"
              ]
            }
          },
          {
            "name": "archived",
            "in": "query",
            "description": "Is the survey archived",
            "schema": {
              "type": "boolean",
              "default": false
            }
          },
          {
            "name": "survey_folder_id",
            "in": "query",
            "description": "Survey folder Id of the survey",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "created_date.gte",
            "in": "query",
            "description": "Survey created date greater than or equal to",
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "created_date.lte",
            "in": "query",
            "description": "Survey created date less than or equal to",
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "updated_date.gte",
            "in": "query",
            "description": "Survey updated date greater than or equal to",
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "updated_date.lte",
            "in": "query",
            "description": "Survey updated date less than or equal to",
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of records you would like in a request",
            "schema": {
              "maximum": 100,
              "minimum": 1,
              "type": "number",
              "default": 50
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page of results",
            "schema": {
              "minimum": 1,
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/getSurveysSchema"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["survey", "v3"],
        "summary": "Create a survey",
        "operationId": "postV3Surveys",
        "requestBody": {
          "content": {
            "*/*": {
              "schema": {
                "$ref": "#/components/schemas/createSurveySchema"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "Successful",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/getSurveySchema"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "body"
      }
    },
    "/v3/targets": {
      "get": {
        "tags": ["targets", "v3"],
        "summary": "List targets",
        "operationId": "getV3Targets",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "Number of records you would like in a request",
            "schema": {
              "maximum": 200,
              "minimum": 1,
              "type": "number",
              "default": 50
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page of results",
            "schema": {
              "minimum": 1,
              "type": "number",
              "default": 1
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/getTargetsResponseSchema"
                }
              }
            }
          }
        }
      }
    },
    "/v3/teams": {
      "get": {
        "tags": ["teams", "v3"],
        "summary": "Get all teams",
        "operationId": "getV3Teams",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "Number of records you would like in a request",
            "schema": {
              "maximum": 100,
              "minimum": 1,
              "type": "number",
              "default": 50
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page of results",
            "schema": {
              "minimum": 1,
              "type": "number"
            }
          },
          {
            "name": "type",
            "in": "query",
            "description": "Type of team",
            "schema": {
              "type": "string",
              "enum": ["SURVEY", "TICKET"]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/getTeamsSchema"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["teams", "v3"],
        "summary": "Create a team",
        "operationId": "postV3Teams",
        "requestBody": {
          "content": {
            "*/*": {
              "schema": {
                "$ref": "#/components//schemas/Model110"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "Successful",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/createTeamSchema"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "body"
      }
    },
    "/v3/ticket_fields": {
      "get": {
        "tags": ["ticket_fields", "v3"],
        "summary": "Get all ticket fields",
        "operationId": "getV3Ticket_fields",
        "parameters": [
          {
            "name": "created_date.gte",
            "in": "query",
            "description": "Ticket field created date greater than or equal to. Should be in the format YYYY-MM-DDTHH:MM:SS",
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "created_date.lte",
            "in": "query",
            "description": "Ticket field created date less than or equal to. Should be in the format YYYY-MM-DDTHH:MM:SS",
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "updated_date.gte",
            "in": "query",
            "description": "Ticket field updated date greater than or equal to. Should be in the format YYYY-MM-DDTHH:MM:SS",
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "updated_date.lte",
            "in": "query",
            "description": "Ticket field updated date less than or equal to. Should be in the format YYYY-MM-DDTHH:MM:SS",
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Record limit per request; default is 50, maximum is 100.",
            "schema": {
              "maximum": 100,
              "minimum": 1,
              "type": "number",
              "default": 50
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page of results",
            "schema": {
              "minimum": 1,
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components//schemas/Model18"
                }
              }
            }
          }
        }
      }
    },
    "/v3/tickets": {
      "get": {
        "tags": ["tickets", "v3"],
        "summary": "Get all tickets",
        "operationId": "getV3Tickets",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "Record limit per request; default is 50, maximum is 100.",
            "schema": {
              "maximum": 100,
              "minimum": 1,
              "type": "number",
              "default": 50
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page of results",
            "schema": {
              "minimum": 1,
              "type": "number"
            }
          },
          {
            "name": "requester_id",
            "in": "query",
            "description": "Ticket requester's contact id",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "assignee_id",
            "in": "query",
            "description": "Ticket agent's user id",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "team_id",
            "in": "query",
            "description": "Ticket team",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "priority",
            "in": "query",
            "description": "Ticket priority",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "status",
            "in": "query",
            "description": "Ticket status",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "created_date.gte",
            "in": "query",
            "description": "Ticket created date greater than or equal to. Should be in the format YYYY-MM-DDTHH:MM:SS",
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "created_date.lte",
            "in": "query",
            "description": "Ticket created date less than or equal to. Should be in the format YYYY-MM-DDTHH:MM:SS",
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "updated_date.gte",
            "in": "query",
            "description": "Ticket updated date greater than or equal to. Should be in the format YYYY-MM-DDTHH:MM:SS",
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "updated_date.lte",
            "in": "query",
            "description": "Ticket updated date less than or equal to. Should be in the format YYYY-MM-DDTHH:MM:SS",
            "schema": {
              "type": "string",
              "format": "date"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/getTicketsSchema"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["tickets", "v3"],
        "summary": "Create a ticket",
        "operationId": "postV3Tickets",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/createTicketSchema"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "Successful",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/getTicketSchema"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "body"
      }
    },
    "/v3/users": {
      "get": {
        "tags": ["users", "v3"],
        "summary": "Get all users",
        "operationId": "getV3Users",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "number of records to be fetched",
            "schema": {
              "maximum": 50,
              "minimum": 1,
              "type": "number",
              "default": 50
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page of the contacts",
            "schema": {
              "minimum": 1,
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/getUsersSchema"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["users", "v3"],
        "summary": "Create user",
        "operationId": "postV3Users",
        "requestBody": {
          "content": {
            "*/*": {
              "schema": {
                "$ref": "#/components//schemas/Model116"
              }
            }
          },
          "required": false
        },
        "responses": {
          "default": {
            "description": "Successful",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "body"
      }
    },
    "/v3/variables": {
      "get": {
        "tags": ["variables", "v3"],
        "summary": "Get all survey variables",
        "operationId": "getV3Variables",
        "parameters": [
          {
            "name": "survey_id",
            "in": "query",
            "description": "Id of Survey",
            "required": true,
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of records you would like in a request",
            "schema": {
              "maximum": 100,
              "minimum": 1,
              "type": "number",
              "default": 50
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page of results",
            "schema": {
              "minimum": 1,
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/getAllVariablesSchema"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["variables", "v3"],
        "summary": "Create a survey variable",
        "operationId": "postV3Variables",
        "requestBody": {
          "content": {
            "*/*": {
              "schema": {
                "$ref": "#/components/schemas/createVariablesSchema"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "Successful",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/createVariableResponseSchema"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "body"
      }
    },
    "/v3/webhooks": {
      "get": {
        "tags": ["webhooks", "v3"],
        "summary": "Get all webhooks",
        "operationId": "getV3Webhooks",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "Maximum results per page",
            "schema": {
              "maximum": 100,
              "minimum": 1,
              "type": "number",
              "default": 50
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page number in pagination",
            "schema": {
              "minimum": 1,
              "type": "number"
            }
          },
          {
            "name": "survey_id",
            "in": "query",
            "description": "Id of Survey",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/getwebhooksSchema"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["webhooks", "v3"],
        "summary": "Create a webhook",
        "operationId": "postV3Webhooks",
        "requestBody": {
          "content": {
            "*/*": {
              "schema": {
                "$ref": "#/components//schemas/Model118"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "Successful",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/webhookResponseSchema"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "body"
      }
    },
    "/v1/audit-logs/events": {
      "get": {
        "tags": ["audit_logs"],
        "summary": "List subscribed events",
        "operationId": "getV1AuditlogsEvents",
        "parameters": [
          {
            "name": "eventType",
            "in": "query",
            "schema": {
              "type": "string",
              "enum": [
                "SURVEY_CREATED",
                "SURVEY_EDITED",
                "SURVEY_DELETED",
                "THEME_ADDED",
                "THEME_EDITED",
                "THEME_DELETED",
                "USER_CREATED",
                "USER_DELETED",
                "USER_EDITED",
                "CONTACT_CREATED",
                "CONTACT_UPDATED",
                "CONTACT_DELETED",
                "CONTACT_PROPERTY_CREATED",
                "CONTACT_PROPERTY_EDITED",
                "CONTACT_PROPERTY_DELETED",
                "WORKSPACE_CREATED",
                "WORKSPACE_DELETED",
                "WORKSPACE_EDITED",
                "SYNC_DEVICES",
                "SURVEY_RESPONSE_IMPORT",
                "SURVEY_RESPONSE_DELETION",
                "SURVEY_CLOSED",
                "SURVEY_RESTORED",
                "SURVEY_OWNERSHIP_TRANSFER",
                "FOLDER_USER_ACCESS_GRANT",
                "FOLDER_USER_ACCESS_REMOVE",
                "FOLDER_TEAM_ACCESS_GRANT",
                "FOLDER_TEAM_ACCESS_REMOVE",
                "SURVEY_MOVED",
                "SURVEY_PASSWORD_CREATED",
                "SURVEY_PASSWORD_DELETED",
                "SURVEY_PASSWORD_EDITED",
                "QUESTION_CATALOG_CREATED",
                "QUESTION_CATALOG_DELETED",
                "LOGIN",
                "LOGOUT"
              ]
            }
          },
          {
            "name": "page",
            "in": "query",
            "schema": {
              "minimum": 1,
              "type": "number",
              "default": 1
            }
          },
          {
            "name": "maxResults",
            "in": "query",
            "schema": {
              "maximum": 100,
              "minimum": 1,
              "type": "number",
              "default": 50
            }
          }
        ],
        "responses": {
          "default": {
            "description": "Successful",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/v1/audit-logs/{id}": {
      "get": {
        "tags": ["audit_logs"],
        "summary": "Get audit log",
        "operationId": "getV1AuditlogsId",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "Successful",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/v1/contacts/properties": {
      "get": {
        "tags": ["contacts"],
        "summary": "List contact properties",
        "operationId": "getV1ContactsProperties",
        "responses": {
          "default": {
            "description": "Successful",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["contacts"],
        "summary": "Create contact property",
        "operationId": "postV1ContactsProperties",
        "requestBody": {
          "content": {
            "*/*": {
              "schema": {
                "$ref": "#/components//schemas/Model82"
              }
            }
          },
          "required": false
        },
        "responses": {
          "default": {
            "description": "Successful",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "body"
      }
    },
    "/v1/contacts/{id}": {
      "get": {
        "tags": ["contacts"],
        "summary": "Get contact",
        "operationId": "getV1ContactsId",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "description": "Custom Token generated from the App",
            "required": true,
            "schema": {
              "pattern": "/Bearer [^\\s]+/",
              "type": "string",
              "default": "Bearer <Token>"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "contact id of a particular contact",
            "required": true,
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components//schemas/Model24"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": ["contacts"],
        "summary": "Update contact",
        "operationId": "putV1ContactsId",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "description": "Custom Token generated from the App",
            "required": true,
            "schema": {
              "pattern": "/Bearer [^\\s]+/",
              "type": "string",
              "default": "Bearer <Token>"
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "number"
            }
          }
        ],
        "requestBody": {
          "content": {
            "*/*": {
              "schema": {
                "$ref": "#/components//schemas/Model197"
              }
            }
          },
          "required": false
        },
        "responses": {
          "204": {
            "description": "No Content",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/properties"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "body"
      },
      "delete": {
        "tags": ["contacts"],
        "summary": "Delete contact",
        "operationId": "deleteV1ContactsId",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "description": "Custom Token generated from the App",
            "required": true,
            "schema": {
              "pattern": "/Bearer [^\\s]+/",
              "type": "string",
              "default": "Bearer <Token>"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "ID of the contact to be deleted",
            "required": true,
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/properties"
                }
              }
            }
          }
        }
      }
    },
    "/v1/surveys/{id}": {
      "get": {
        "tags": ["survey"],
        "summary": "Get survey",
        "operationId": "getV1SurveysId",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "reportShareToken",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "Successful",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": ["survey"],
        "summary": "Update survey details",
        "operationId": "putV1SurveysId",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "number"
            }
          }
        ],
        "requestBody": {
          "content": {
            "*/*": {
              "schema": {
                "$ref": "#/components//schemas/Model200"
              }
            }
          },
          "required": false
        },
        "responses": {
          "default": {
            "description": "Successful",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "body"
      }
    },
    "/v1/users/{id}": {
      "get": {
        "tags": ["users"],
        "summary": "Get user",
        "operationId": "getV1UsersId",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "Successful",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": ["users"],
        "summary": "Update user",
        "operationId": "putV1UsersId",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "number"
            }
          }
        ],
        "requestBody": {
          "content": {
            "*/*": {
              "schema": {
                "$ref": "#/components//schemas/Model201"
              }
            }
          },
          "required": false
        },
        "responses": {
          "default": {
            "description": "Successful",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "body"
      },
      "delete": {
        "tags": ["users"],
        "summary": "Delete user",
        "operationId": "deleteV1UsersId",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "Successful",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/v1/workspaces/{id}": {
      "get": {
        "tags": ["workspaces"],
        "summary": "Get workspace",
        "operationId": "getV1WorkspacesId",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "Successful",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": ["workspaces"],
        "summary": "Update workspace",
        "operationId": "putV1WorkspacesId",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "number"
            }
          }
        ],
        "requestBody": {
          "content": {
            "*/*": {
              "schema": {
                "$ref": "#/components//schemas/Model203"
              }
            }
          },
          "required": false
        },
        "responses": {
          "default": {
            "description": "Successful",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "body"
      },
      "delete": {
        "tags": ["workspaces"],
        "summary": "Delete workspace",
        "operationId": "deleteV1WorkspacesId",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "Successful",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/v3/audit_logs/events": {
      "get": {
        "tags": ["audit_logs", "v3"],
        "summary": "List subscribed events",
        "operationId": "getV3Audit_logsEvents",
        "parameters": [
          {
            "name": "event_type",
            "in": "query",
            "description": "Type of the event",
            "schema": {
              "type": "string",
              "enum": [
                "SURVEY_CREATED",
                "SURVEY_EDITED",
                "SURVEY_DELETED",
                "THEME_ADDED",
                "THEME_EDITED",
                "THEME_DELETED",
                "USER_CREATED",
                "USER_DELETED",
                "USER_EDITED",
                "CONTACT_CREATED",
                "CONTACT_UPDATED",
                "CONTACT_DELETED",
                "CONTACT_PROPERTY_CREATED",
                "CONTACT_PROPERTY_EDITED",
                "CONTACT_PROPERTY_DELETED",
                "WORKSPACE_CREATED",
                "WORKSPACE_DELETED",
                "WORKSPACE_EDITED",
                "SYNC_DEVICES",
                "SURVEY_RESPONSE_IMPORT",
                "SURVEY_RESPONSE_DELETION",
                "SURVEY_CLOSED",
                "SURVEY_RESTORED",
                "SURVEY_OWNERSHIP_TRANSFER",
                "FOLDER_USER_ACCESS_GRANT",
                "FOLDER_USER_ACCESS_REMOVE",
                "FOLDER_TEAM_ACCESS_GRANT",
                "FOLDER_TEAM_ACCESS_REMOVE",
                "SURVEY_MOVED",
                "SURVEY_PASSWORD_CREATED",
                "SURVEY_PASSWORD_DELETED",
                "SURVEY_PASSWORD_EDITED",
                "QUESTION_CATALOG_CREATED",
                "QUESTION_CATALOG_DELETED",
                "LOGIN",
                "LOGOUT"
              ]
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "The page number to start searching audit log event. Default page number is 1",
            "schema": {
              "minimum": 1,
              "type": "number",
              "default": 1
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "The maximum number of audit log event response per page. Defaults is 50 if not provided. Maximum allowed value is 100.",
            "schema": {
              "maximum": 100,
              "minimum": 1,
              "type": "number",
              "default": 50
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components//schemas/Model26"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["audit_logs", "v3"],
        "summary": "Create subscribed event",
        "operationId": "postV3Audit_logsEvents",
        "requestBody": {
          "content": {
            "*/*": {
              "schema": {
                "$ref": "#/components/schemas/createAuditLogEventSchema"
              }
            }
          },
          "required": false
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components//schemas/Model123"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "body"
      }
    },
    "/v3/audit_logs/{id}": {
      "get": {
        "tags": ["audit_logs", "v3"],
        "summary": "Get audit log",
        "operationId": "getV3Audit_logsId",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of audit log",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "Successful",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/v3/channels/{id}": {
      "get": {
        "tags": ["channels"],
        "summary": "Get a channel",
        "operationId": "getV3ChannelsId",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of the channel",
            "required": true,
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "survey_id",
            "in": "query",
            "required": true,
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components//schemas/Model27"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": ["channels"],
        "summary": "Update a channel",
        "description": "Supported only for LINK, SMS, EMAIL and OFFLINE channels. schedule, relative_schedule only required when mode is RECURRING, RELATIVE_RECURRING respectively and sms, email, link properties only required when type is SMS, EMAIL, LINK and animation_direction can be provided when type is OFFLINE",
        "operationId": "putV3ChannelsId",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of the channel",
            "required": true,
            "schema": {
              "type": "number"
            }
          }
        ],
        "requestBody": {
          "content": {
            "*/*": {
              "schema": {
                "$ref": "#/components//schemas/Model204"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "Successful",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components//schemas/Model27"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "body"
      },
      "delete": {
        "tags": ["channels"],
        "summary": "Delete a channel",
        "operationId": "deleteV3ChannelsId",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of the channel",
            "required": true,
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "survey_id",
            "in": "query",
            "description": "Id of the survey",
            "required": true,
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "Successful",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/v3/contact_lists/{id}": {
      "get": {
        "tags": ["contact_lists", "v3"],
        "summary": "Get a contact list",
        "operationId": "getV3Contact_listsId",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/contactListResponseSchema"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": ["contact_lists", "v3"],
        "summary": "Delete a contact list",
        "operationId": "deleteV3Contact_listsId",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "Successful",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": ["contact_lists", "v3"],
        "summary": "Update a contact list",
        "operationId": "patchV3Contact_listsId",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "number"
            }
          }
        ],
        "requestBody": {
          "content": {
            "*/*": {
              "schema": {
                "$ref": "#/components//schemas/Model241"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "Successful",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/contactListResponseSchema"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "body"
      }
    },
    "/v3/contacts/{id}": {
      "get": {
        "tags": ["contacts", "v3"],
        "summary": "Get a contact",
        "operationId": "getV3ContactsId",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "description": "Custom Token generated from the App",
            "required": true,
            "schema": {
              "pattern": "/Bearer [^\\s]+/",
              "type": "string",
              "default": "Bearer <Token>"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "contact id of a particular contact",
            "required": true,
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "Successful",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": ["contacts", "v3"],
        "summary": "Update a contact",
        "operationId": "putV3ContactsId",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "description": "Custom Token generated from the App",
            "required": true,
            "schema": {
              "pattern": "/Bearer [^\\s]+/",
              "type": "string",
              "default": "Bearer <Token>"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "ID of the contact to be updated",
            "required": true,
            "schema": {
              "type": "number"
            }
          }
        ],
        "requestBody": {
          "content": {
            "*/*": {
              "schema": {
                "$ref": "#/components/schemas/updateContactSchema"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "Successful",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components//schemas/Model206"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "body"
      },
      "delete": {
        "tags": ["contacts", "v3"],
        "summary": "Delete a contact",
        "operationId": "deleteV3ContactsId",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "description": "Custom Token generated from the App",
            "required": true,
            "schema": {
              "pattern": "/Bearer [^\\s]+/",
              "type": "string",
              "default": "Bearer <Token>"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "ID of the contact to be deleted",
            "required": true,
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "Successful",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/v3/metrics/responses": {
      "get": {
        "tags": ["nps", "v3"],
        "summary": "List respones based on metrics of CX surveys",
        "operationId": "getV3MetricsResponses",
        "parameters": [
          {
            "name": "date.gte",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "date.lte",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Maximum results a page can have",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page Number",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "survey_id",
            "in": "query",
            "description": "Id of the Survey",
            "required": true,
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "type",
            "in": "query",
            "description": "Value should be one of CX metric type",
            "required": true,
            "schema": {
              "type": "string",
              "default": "NPS",
              "enum": ["CES", "CSAT", "NPS"]
            }
          },
          {
            "name": "category",
            "in": "query",
            "description": "Metric category based survey type: NPS (detractors, passives, promoters), CES (lowEfforts, highEfforts, neutral), CSAT (satisfied, neutral, dissatisfied)",
            "schema": {
              "type": "string",
              "default": "Promoters",
              "enum": ["Promoters", "Passives", "Detractors"],
              "x-alternatives": [
                {
                  "type": "string",
                  "description": "Metric category based survey type: NPS (detractors, passives, promoters), CES (lowEfforts, highEfforts, neutral), CSAT (satisfied, neutral, dissatisfied)",
                  "default": "Promoters",
                  "enum": ["Promoters", "Passives", "Detractors"]
                },
                {
                  "type": "string",
                  "description": "Metric category based survey type: NPS (detractors, passives, promoters), CES (lowEfforts, highEfforts, neutral), CSAT (satisfied, neutral, dissatisfied)",
                  "default": "Low Effort",
                  "enum": [
                    "LowEffort",
                    "Neutral",
                    "HighEffort",
                    "Promoters",
                    "Passives",
                    "Detractors"
                  ]
                },
                {
                  "type": "string",
                  "description": "Metric category based survey type: NPS (detractors, passives, promoters), CES (lowEfforts, highEfforts, neutral), CSAT (satisfied, neutral, dissatisfied)",
                  "default": "Satisfied",
                  "enum": [
                    "Satisfied",
                    "Neutral",
                    "Dissatisfied",
                    "Promoters",
                    "Passives",
                    "Detractors"
                  ]
                }
              ]
            },
            "x-alternatives": [
              {
                "type": "string",
                "description": "Metric category based survey type: NPS (detractors, passives, promoters), CES (lowEfforts, highEfforts, neutral), CSAT (satisfied, neutral, dissatisfied)",
                "default": "Promoters",
                "enum": ["Promoters", "Passives", "Detractors"]
              },
              {
                "type": "string",
                "description": "Metric category based survey type: NPS (detractors, passives, promoters), CES (lowEfforts, highEfforts, neutral), CSAT (satisfied, neutral, dissatisfied)",
                "default": "Low Effort",
                "enum": [
                  "LowEffort",
                  "Neutral",
                  "HighEffort",
                  "Promoters",
                  "Passives",
                  "Detractors"
                ]
              },
              {
                "type": "string",
                "description": "Metric category based survey type: NPS (detractors, passives, promoters), CES (lowEfforts, highEfforts, neutral), CSAT (satisfied, neutral, dissatisfied)",
                "default": "Satisfied",
                "enum": [
                  "Satisfied",
                  "Neutral",
                  "Dissatisfied",
                  "Promoters",
                  "Passives",
                  "Detractors"
                ]
              }
            ]
          }
        ],
        "responses": {
          "default": {
            "description": "Successful",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/v3/reminders/{id}": {
      "get": {
        "tags": ["reminder"],
        "summary": "Get a Channel reminder",
        "description": "Only applicable for Classic, CX and Chat surveys via EMAIL, SMS channels",
        "operationId": "getV3RemindersId",
        "parameters": [
          {
            "name": "survey_id",
            "in": "query",
            "description": "Id of the survey",
            "required": true,
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "channel_id",
            "in": "query",
            "description": "Id of the channel",
            "required": true,
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/getReminderSchema"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": ["reminder"],
        "summary": "Delete a channel reminder",
        "description": "Only applicable for Classic, CX and Chat surveys via EMAIL, SMS channels",
        "operationId": "deleteV3RemindersId",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of the channel",
            "required": true,
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "survey_id",
            "in": "query",
            "description": "Id of the survey",
            "required": true,
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "channel_id",
            "in": "query",
            "description": "Id of the channel",
            "required": true,
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "Successful",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/v3/reports/question": {
      "get": {
        "tags": ["reports", "v3"],
        "summary": "Get report of the question in a survey",
        "operationId": "getV3ReportsQuestion",
        "parameters": [
          {
            "name": "survey_id",
            "in": "query",
            "description": "ID of the survey",
            "required": true,
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "question_id",
            "in": "query",
            "description": "ID of the question",
            "required": true,
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "Successful",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/v3/reputation/app_platforms": {
      "get": {
        "tags": ["reputation_app_platforms", "v3"],
        "summary": "Get all app platforms",
        "operationId": "getV3ReputationApp_platforms",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "Page of results",
            "schema": {
              "minimum": 1,
              "type": "number",
              "default": 1
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of records you would like in a request",
            "schema": {
              "maximum": 50,
              "minimum": 1,
              "type": "number",
              "default": 50
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/getAppPlatformsSchema"
                }
              }
            }
          }
        }
      }
    },
    "/v3/reputation/platforms": {
      "get": {
        "tags": ["reputation_platforms", "v3"],
        "summary": "Get all platforms",
        "operationId": "getV3ReputationPlatforms",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "Number of records you would like in a request",
            "schema": {
              "maximum": 100,
              "minimum": 1,
              "type": "number",
              "default": 50
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page of results",
            "schema": {
              "minimum": 1,
              "type": "number",
              "default": 1
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/getPlatformsSchema"
                }
              }
            }
          }
        }
      }
    },
    "/v3/reputation/reviews": {
      "get": {
        "tags": ["reputation_reviews", "v3"],
        "summary": "Get all reviews",
        "operationId": "getV3ReputationReviews",
        "parameters": [
          {
            "name": "app_platform_id",
            "in": "query",
            "description": "Id of AppPlatform",
            "required": true,
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "rating.lte",
            "in": "query",
            "description": "Rating greater than filer is optional",
            "schema": {
              "maximum": 5,
              "minimum": 1,
              "type": "number"
            }
          },
          {
            "name": "rating.gte",
            "in": "query",
            "description": "Rating less than filter is optional",
            "schema": {
              "maximum": 5,
              "minimum": 1,
              "type": "number"
            }
          },
          {
            "name": "review_date.lte",
            "in": "query",
            "description": "less than filter is optional",
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "review_date.gte",
            "in": "query",
            "description": "greater than filer is optional",
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of records you would like in a request",
            "schema": {
              "maximum": 50,
              "minimum": 1,
              "type": "number",
              "default": 50
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page of results",
            "schema": {
              "minimum": 1,
              "type": "number",
              "default": 1
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/getReviewsSchema"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["reputation_reviews", "v3"],
        "summary": "Import a review for a custom location",
        "operationId": "postV3ReputationReviews",
        "parameters": [
          {
            "name": "custom_app_platform_id",
            "in": "query",
            "required": true,
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "Successful",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/v3/responses/{id}": {
      "get": {
        "tags": ["response", "v3"],
        "summary": "Get a response",
        "operationId": "getV3ResponsesId",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of response",
            "required": true,
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "survey_id",
            "in": "query",
            "required": true,
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "preserve_format",
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components//schemas/Model28"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": ["response"],
        "summary": "Update a response",
        "operationId": "putV3ResponsesId",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the response",
            "required": true,
            "schema": {
              "type": "number"
            }
          }
        ],
        "requestBody": {
          "content": {
            "*/*": {
              "schema": {
                "$ref": "#/components/schemas/updateRequestSchema"
              }
            }
          },
          "required": false
        },
        "responses": {
          "default": {
            "description": "Successful",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "body"
      },
      "delete": {
        "tags": ["response"],
        "summary": "Delete a response",
        "operationId": "deleteV3ResponsesId",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "survey_id",
            "in": "query",
            "required": true,
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "delete_quota",
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "default": {
            "description": "Successful",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/v3/survey/approvers": {
      "get": {
        "tags": ["employee_360", "v3"],
        "summary": "List approvers",
        "operationId": "getV3SurveyApprovers",
        "parameters": [
          {
            "name": "survey_id",
            "in": "query",
            "description": "Id of the survey",
            "required": true,
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "schema": {
              "maximum": 100,
              "minimum": 1,
              "type": "number",
              "default": 50
            }
          },
          {
            "name": "page",
            "in": "query",
            "schema": {
              "minimum": 1,
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components//schemas/Model31"
                }
              }
            }
          }
        }
      }
    },
    "/v3/survey/relations": {
      "get": {
        "tags": ["employee_360", "v3"],
        "summary": "List Relations",
        "operationId": "getV3SurveyRelations",
        "parameters": [
          {
            "name": "survey_id",
            "in": "query",
            "description": "Id of the survey",
            "required": true,
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components//schemas/Model34"
                }
              }
            }
          }
        }
      }
    },
    "/v3/survey/subjects": {
      "get": {
        "tags": ["employee_360", "v3"],
        "summary": "List subjects",
        "operationId": "getV3SurveySubjects",
        "parameters": [
          {
            "name": "survey_id",
            "in": "query",
            "description": "Id of the survey",
            "required": true,
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "schema": {
              "maximum": 100,
              "minimum": 1,
              "type": "number",
              "default": 50
            }
          },
          {
            "name": "page",
            "in": "query",
            "schema": {
              "minimum": 1,
              "type": "number"
            }
          },
          {
            "name": "email",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components//schemas/Model38"
                }
              }
            }
          }
        }
      }
    },
    "/v3/survey_folders/{id}": {
      "get": {
        "tags": ["survey_folder"],
        "summary": "Get a survey folder",
        "operationId": "getV3Survey_foldersId",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/getSurveyFolderResponseSchema"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": ["survey_folder"],
        "summary": "Delete a survey folder",
        "operationId": "deleteV3Survey_foldersId",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/properties"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": ["survey_folder"],
        "summary": "Update a survey folder",
        "operationId": "patchV3Survey_foldersId",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "number"
            }
          }
        ],
        "requestBody": {
          "content": {
            "*/*": {
              "schema": {
                "$ref": "#/components//schemas/Model203"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "Successful",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/getSurveyFolderResponseSchema"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "body"
      }
    },
    "/v3/surveys/{id}": {
      "get": {
        "tags": ["survey", "v3"],
        "summary": "Get a survey",
        "operationId": "getV3SurveysId",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of Survey",
            "required": true,
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/getSurveySchema"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": ["survey", "v3"],
        "summary": "Update a survey",
        "operationId": "patchV3SurveysId",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "number"
            }
          }
        ],
        "requestBody": {
          "content": {
            "*/*": {
              "schema": {
                "$ref": "#/components//schemas/Model242"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "Successful",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/updateVariablesSchema"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "body"
      }
    },
    "/v3/ticket_fields/{id}": {
      "get": {
        "tags": ["ticket_fields", "v3"],
        "summary": "Get a ticket field",
        "operationId": "getV3Ticket_fieldsId",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Ticket field ID",
            "required": true,
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/getTicketFieldSchema"
                }
              }
            }
          }
        }
      }
    },
    "/v3/tickets/{id}": {
      "get": {
        "tags": ["tickets", "v3"],
        "summary": "Get a ticket",
        "operationId": "getV3TicketsId",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Ticket ID",
            "required": true,
            "schema": {
              "minimum": 1,
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/getTicketSchema"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": ["tickets", "v3"],
        "summary": "Update a ticket",
        "operationId": "putV3TicketsId",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Ticket ID",
            "required": true,
            "schema": {
              "type": "number"
            }
          }
        ],
        "requestBody": {
          "content": {
            "*/*": {
              "schema": {
                "$ref": "#/components/schemas/editTicketSchema"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "Successful",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/getTicketSchema"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "body"
      },
      "delete": {
        "tags": ["tickets", "v3"],
        "summary": "Delete a ticket",
        "operationId": "deleteV3TicketsId",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Ticket ID",
            "required": true,
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "Successful",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/v3/translation/export": {
      "get": {
        "tags": ["translation", "v3"],
        "summary": "Get the specific language excel file",
        "description": "This API generates an Excel file in the specified language. The download link will expire in 60 seconds.",
        "operationId": "getV3TranslationExport",
        "parameters": [
          {
            "name": "survey_id",
            "in": "query",
            "description": "Survey ID",
            "required": true,
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "language_code",
            "in": "query",
            "description": "Language code",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "include_labels",
            "in": "query",
            "description": "Include labels in the file",
            "schema": {
              "type": "boolean",
              "default": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components//schemas/Model40"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components//schemas/Model10"
                }
              }
            }
          },
          "402": {
            "description": "Payment Required",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components//schemas/Model11"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components//schemas/Model12"
                }
              }
            }
          }
        }
      }
    },
    "/v3/users/{id}": {
      "get": {
        "tags": ["users", "v3"],
        "summary": "Get a user",
        "operationId": "getV3UsersId",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/getUserSchema"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": ["users", "v3"],
        "summary": "Delete a user",
        "operationId": "deleteV3UsersId",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "Successful",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": ["users", "v3"],
        "summary": "Update a user",
        "operationId": "patchV3UsersId",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "number"
            }
          }
        ],
        "requestBody": {
          "content": {
            "*/*": {
              "schema": {
                "$ref": "#/components//schemas/Model243"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "Successful",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/getUserSchema"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "body"
      }
    },
    "/v1/ces/{survey_id}/responses": {
      "get": {
        "tags": ["ces"],
        "summary": "List survey responses",
        "operationId": "getV1CesSurvey_idResponses",
        "parameters": [
          {
            "name": "survey_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "date.gte",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "date.lte",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "maxResults",
            "in": "query",
            "schema": {
              "maximum": 2000,
              "minimum": 1,
              "type": "number",
              "default": 100
            }
          },
          {
            "name": "page",
            "in": "query",
            "schema": {
              "minimum": 1,
              "type": "number",
              "default": 1
            }
          },
          {
            "name": "npsChannelId",
            "in": "query",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "format",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "Successful",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/v1/ces/{survey_id}/metrics": {
      "get": {
        "tags": ["ces"],
        "summary": "Get CES metrics",
        "operationId": "getV1CesSurvey_idMetrics",
        "parameters": [
          {
            "name": "survey_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "date.gte",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "date.lte",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "Successful",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/v1/ces/{surveyId}/shares": {
      "get": {
        "tags": ["ces"],
        "summary": "List CES channels",
        "operationId": "getV1CesSurveyidShares",
        "parameters": [
          {
            "name": "surveyId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "maxResults",
            "in": "query",
            "schema": {
              "maximum": 200,
              "minimum": 1,
              "type": "number",
              "default": 100
            }
          },
          {
            "name": "page",
            "in": "query",
            "schema": {
              "minimum": 1,
              "type": "number"
            }
          },
          {
            "name": "type",
            "in": "query",
            "schema": {
              "type": "string",
              "enum": [
                "EMAIL",
                "SMS",
                "SYSTEM",
                "LINK",
                "INAPP",
                "MOBILE_SDK",
                "EMAIL_EMBED",
                "QR_CODE",
                "SLACK",
                "TEAMS",
                "WHATSAPP",
                "OFFLINE",
                "SPOTCHECK"
              ]
            }
          },
          {
            "name": "mode",
            "in": "query",
            "schema": {
              "type": "string",
              "enum": [
                "BLAST",
                "RECURRING",
                "RELATIVE_RECURRING",
                "TEST",
                "LINK",
                "INTERCOM",
                "INAPP",
                "MOBILE_SDK",
                "EMAIL_EMBED",
                "QR_CODE",
                "WHATSAPP",
                "OFFLINE",
                "SPOTCHECK"
              ]
            }
          }
        ],
        "responses": {
          "default": {
            "description": "Successful",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/v1/contactlist/{id}/contacts": {
      "get": {
        "tags": ["contact_list"],
        "summary": "List contacts in a list",
        "operationId": "getV1ContactlistIdContacts",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "maxResults",
            "in": "query",
            "schema": {
              "maximum": 100,
              "minimum": 1,
              "type": "number",
              "default": 50
            }
          },
          {
            "name": "page",
            "in": "query",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "Successful",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["contacts"],
        "summary": "Create/Add Contacts to a Custom Label",
        "operationId": "postV1ContactlistIdContacts",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "description": "Custom Token generated from the App",
            "required": true,
            "schema": {
              "pattern": "/Bearer [^\\s]+/",
              "type": "string",
              "default": "Bearer <Token>"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "Id of a contact list",
            "required": true,
            "schema": {
              "type": "number"
            }
          }
        ],
        "requestBody": {
          "content": {
            "*/*": {
              "schema": {
                "$ref": "#/components//schemas/Model155"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "Successful",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components//schemas/Model156"
                }
              }
            }
          },
          "202": {
            "description": "Accepted",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components//schemas/Model153"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "body"
      }
    },
    "/v1/contacts/{id}/shares": {
      "get": {
        "tags": ["contacts"],
        "summary": "Get all shares of a contact",
        "operationId": "getV1ContactsIdShares",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "description": "Custom Token generated from the App",
            "required": true,
            "schema": {
              "pattern": "/Bearer [^\\s]+/",
              "type": "string",
              "default": "Bearer <Token>"
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "page",
            "in": "query",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components//schemas/Model44"
                }
              }
            }
          }
        }
      }
    },
    "/v1/csat/{survey_id}/responses": {
      "get": {
        "tags": ["csat"],
        "summary": "List survey responses",
        "operationId": "getV1CsatSurvey_idResponses",
        "parameters": [
          {
            "name": "survey_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "date.gte",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "date.lte",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "maxResults",
            "in": "query",
            "schema": {
              "maximum": 2000,
              "minimum": 1,
              "type": "number",
              "default": 100
            }
          },
          {
            "name": "page",
            "in": "query",
            "schema": {
              "minimum": 1,
              "type": "number",
              "default": 1
            }
          },
          {
            "name": "npsChannelId",
            "in": "query",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "format",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "Successful",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/v1/csat/{survey_id}/metrics": {
      "get": {
        "tags": ["csat"],
        "summary": "Get csat metrics",
        "operationId": "getV1CsatSurvey_idMetrics",
        "parameters": [
          {
            "name": "survey_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "date.gte",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "date.lte",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "Successful",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/v1/csat/{surveyId}/shares": {
      "get": {
        "tags": ["csat"],
        "summary": "List csat channels",
        "operationId": "getV1CsatSurveyidShares",
        "parameters": [
          {
            "name": "surveyId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "maxResults",
            "in": "query",
            "schema": {
              "maximum": 200,
              "minimum": 1,
              "type": "number",
              "default": 100
            }
          },
          {
            "name": "page",
            "in": "query",
            "schema": {
              "minimum": 1,
              "type": "number"
            }
          },
          {
            "name": "type",
            "in": "query",
            "schema": {
              "type": "string",
              "enum": [
                "EMAIL",
                "SMS",
                "SYSTEM",
                "LINK",
                "INAPP",
                "MOBILE_SDK",
                "EMAIL_EMBED",
                "QR_CODE",
                "SLACK",
                "TEAMS",
                "WHATSAPP",
                "OFFLINE",
                "SPOTCHECK"
              ]
            }
          },
          {
            "name": "mode",
            "in": "query",
            "schema": {
              "type": "string",
              "enum": [
                "BLAST",
                "RECURRING",
                "RELATIVE_RECURRING",
                "TEST",
                "LINK",
                "INTERCOM",
                "INAPP",
                "MOBILE_SDK",
                "EMAIL_EMBED",
                "QR_CODE",
                "WHATSAPP",
                "OFFLINE",
                "SPOTCHECK"
              ]
            }
          }
        ],
        "responses": {
          "default": {
            "description": "Successful",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/v1/nps/{surveyId}/shares": {
      "get": {
        "tags": ["nps"],
        "summary": "List NPS channels",
        "operationId": "getV1NpsSurveyidShares",
        "parameters": [
          {
            "name": "surveyId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "maxResults",
            "in": "query",
            "schema": {
              "maximum": 200,
              "minimum": 1,
              "type": "number",
              "default": 100
            }
          },
          {
            "name": "page",
            "in": "query",
            "schema": {
              "minimum": 1,
              "type": "number"
            }
          },
          {
            "name": "type",
            "in": "query",
            "schema": {
              "type": "string",
              "enum": [
                "EMAIL",
                "SMS",
                "SYSTEM",
                "LINK",
                "INAPP",
                "MOBILE_SDK",
                "EMAIL_EMBED",
                "QR_CODE",
                "SLACK",
                "TEAMS",
                "WHATSAPP",
                "OFFLINE",
                "SPOTCHECK"
              ]
            }
          },
          {
            "name": "mode",
            "in": "query",
            "schema": {
              "type": "string",
              "enum": [
                "BLAST",
                "RECURRING",
                "RELATIVE_RECURRING",
                "TEST",
                "LINK",
                "INTERCOM",
                "INAPP",
                "MOBILE_SDK",
                "EMAIL_EMBED",
                "QR_CODE",
                "WHATSAPP",
                "OFFLINE",
                "SPOTCHECK"
              ]
            }
          }
        ],
        "responses": {
          "default": {
            "description": "Successful",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/v1/nps/{survey_id}/metrics": {
      "get": {
        "tags": ["nps"],
        "summary": "Get NPS metrics",
        "operationId": "getV1NpsSurvey_idMetrics",
        "parameters": [
          {
            "name": "survey_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "date.gte",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "date.lte",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "Successful",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/v1/nps/{survey_id}/responses": {
      "get": {
        "tags": ["nps"],
        "summary": "List survey responses",
        "operationId": "getV1NpsSurvey_idResponses",
        "parameters": [
          {
            "name": "survey_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "date.gte",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "date.lte",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "maxResults",
            "in": "query",
            "schema": {
              "maximum": 2000,
              "minimum": 1,
              "type": "number",
              "default": 100
            }
          },
          {
            "name": "page",
            "in": "query",
            "schema": {
              "minimum": 1,
              "type": "number",
              "default": 1
            }
          },
          {
            "name": "npsChannelId",
            "in": "query",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "format",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "Successful",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/v1/survey/{surveyId}/integrations": {
      "get": {
        "tags": ["survey", "integrations"],
        "summary": "Get survey integrations",
        "operationId": "getV1SurveySurveyidIntegrations",
        "responses": {
          "default": {
            "description": "Successful",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/v1/survey/{surveyId}/subjects": {
      "get": {
        "tags": ["employee_360"],
        "summary": "List subjects",
        "operationId": "getV1SurveySurveyidSubjects",
        "parameters": [
          {
            "name": "surveyId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "pageNo",
            "in": "query",
            "schema": {
              "minimum": 1,
              "type": "number"
            }
          },
          {
            "name": "pageLimit",
            "in": "query",
            "schema": {
              "maximum": 500,
              "minimum": 1,
              "type": "number"
            }
          },
          {
            "name": "email",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "Successful",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/v1/survey/{surveyId}/approvers": {
      "get": {
        "tags": ["employee_360"],
        "summary": "List approvers",
        "operationId": "getV1SurveySurveyidApprovers",
        "parameters": [
          {
            "name": "surveyId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "pageNo",
            "in": "query",
            "schema": {
              "minimum": 1,
              "type": "number"
            }
          },
          {
            "name": "pageLimit",
            "in": "query",
            "schema": {
              "maximum": 500,
              "minimum": 1,
              "type": "number"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "Successful",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/v1/surveys/{id}/variables": {
      "get": {
        "tags": ["survey"],
        "summary": "List survey variables",
        "operationId": "getV1SurveysIdVariables",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "Successful",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["survey"],
        "summary": "Create survey variable",
        "operationId": "postV1SurveysIdVariables",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "number"
            }
          }
        ],
        "requestBody": {
          "content": {
            "*/*": {
              "schema": {
                "$ref": "#/components/schemas/variableSchema"
              }
            }
          },
          "required": false,
          "x-alternatives": [
            {
              "$ref": "#/x-alt-definitions/Model 14"
            },
            {
              "$ref": "#/x-alt-definitions/Model 15",
              "type": "array"
            }
          ]
        },
        "responses": {
          "default": {
            "description": "Successful",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "body"
      }
    },
    "/v1/surveys/{survey_id}/shares": {
      "get": {
        "tags": ["share"],
        "summary": "List all shares",
        "operationId": "getV1SurveysSurvey_idShares",
        "parameters": [
          {
            "name": "survey_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "maxResults",
            "in": "query",
            "schema": {
              "maximum": 100,
              "minimum": 1,
              "type": "number",
              "default": 50
            }
          },
          {
            "name": "page",
            "in": "query",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "type",
            "in": "query",
            "schema": {
              "type": "string",
              "enum": [
                "EMAIL",
                "LINK",
                "EMBED",
                "QR_CODE",
                "SMS",
                "WHATSAPP",
                "KIOSK",
                "SOCIAL_GOOGLE",
                "SOCIAL_TWITTER",
                "SOCIAL_FACEBOOK",
                "OFFLINE",
                "EMAIL_EMBED",
                "INAPP",
                "MOBILE_SDK",
                "SYSTEM",
                "SLACK",
                "TEAMS",
                "INTERCOM",
                "PORTAL",
                "SPOTCHECK"
              ]
            }
          }
        ],
        "responses": {
          "default": {
            "description": "Successful",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/v1/surveys/{survey_id}/submissions": {
      "get": {
        "tags": ["survey"],
        "summary": "Get survey responses",
        "operationId": "getV1SurveysSurvey_idSubmissions",
        "parameters": [
          {
            "name": "survey_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "maxResults",
            "in": "query",
            "schema": {
              "maximum": 100,
              "minimum": 1,
              "type": "number",
              "default": 50
            }
          },
          {
            "name": "page",
            "in": "query",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "date.gte",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "date.lte",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "state",
            "in": "query",
            "schema": {
              "type": "string",
              "enum": ["started", "completed", "all"]
            }
          },
          {
            "name": "order_by",
            "in": "query",
            "schema": {
              "type": "string",
              "default": "completedTime",
              "enum": ["startTime", "id", "completedTime"]
            }
          },
          {
            "name": "order",
            "in": "query",
            "schema": {
              "type": "string",
              "default": "DESC",
              "enum": ["ASC", "DESC"],
              "x-convert": {
                "uppercase": true
              }
            },
            "x-convert": {
              "uppercase": true
            }
          }
        ],
        "responses": {
          "default": {
            "description": "Successful",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/v1/surveys/{id}/questions": {
      "get": {
        "tags": ["survey"],
        "summary": "Get survey questions",
        "operationId": "getV1SurveysIdQuestions",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "maxResults",
            "in": "query",
            "schema": {
              "maximum": 100,
              "minimum": 1,
              "type": "number",
              "default": 50
            }
          },
          {
            "name": "page",
            "in": "query",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "tagName",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "Successful",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["public"],
        "operationId": "postV1SurveysIdQuestions",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "Successful",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/v1/surveys/{id}/settings": {
      "get": {
        "tags": ["survey"],
        "summary": "Get Survey settings",
        "operationId": "getV1SurveysIdSettings",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "Successful",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": ["survey"],
        "summary": "Update Survey settings",
        "operationId": "putV1SurveysIdSettings",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "number"
            }
          }
        ],
        "requestBody": {
          "content": {
            "*/*": {
              "schema": {
                "$ref": "#/components//schemas/Model219"
              }
            }
          },
          "required": false
        },
        "responses": {
          "default": {
            "description": "Successful",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "body"
      }
    },
    "/v1/surveys/{survey_id}/webhooks": {
      "get": {
        "tags": ["webhooks"],
        "summary": "List survey webhooks",
        "operationId": "getV1SurveysSurvey_idWebhooks",
        "parameters": [
          {
            "name": "survey_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "maxResults",
            "in": "query",
            "schema": {
              "maximum": 100,
              "minimum": 1,
              "type": "number",
              "default": 50
            }
          },
          {
            "name": "page",
            "in": "query",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "Successful",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/v3/contacts/status/{token}": {
      "get": {
        "tags": ["contacts", "v3"],
        "summary": "Batch contact creation status",
        "operationId": "getV3ContactsStatusToken",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "description": "Custom Token generated from the App",
            "required": true,
            "schema": {
              "pattern": "/Bearer [^\\s]+/",
              "type": "string",
              "default": "Bearer <Token>"
            }
          },
          {
            "name": "token",
            "in": "path",
            "description": "Token to get the batch contact creation status",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "Successful",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/v3/reputation/app_platforms/{id}": {
      "get": {
        "tags": ["reputation_app_platforms", "v3"],
        "summary": "Get a app platform",
        "operationId": "getV3ReputationApp_platformsId",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of AppPlatform",
            "required": true,
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/getAppPlatformSchema"
                }
              }
            }
          }
        }
      }
    },
    "/v3/reputation/platforms/{id}": {
      "get": {
        "tags": ["reputation_platforms", "v3"],
        "summary": "Get a platform",
        "operationId": "getV3ReputationPlatformsId",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of Platform",
            "required": true,
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/getPlatformSchema"
                }
              }
            }
          }
        }
      }
    },
    "/v3/reputation/reviews/{id}": {
      "get": {
        "tags": ["reputation_reviews", "v3"],
        "summary": "Get a review",
        "operationId": "getV3ReputationReviewsId",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of Review",
            "required": true,
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "app_platform_id",
            "in": "query",
            "required": true,
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/getReviewSchema"
                }
              }
            }
          }
        }
      }
    },
    "/v3/responses/status/{token}": {
      "get": {
        "tags": ["response"],
        "summary": "Batch response creation status",
        "operationId": "getV3ResponsesStatusToken",
        "parameters": [
          {
            "name": "token",
            "in": "path",
            "description": "The unique identifier of the job",
            "required": true,
            "schema": {
              "type": "string",
              "x-format": {
                "guid": true
              }
            },
            "x-format": {
              "guid": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/JobStatusResponseSchema"
                }
              }
            }
          }
        }
      }
    },
    "/v3/survey/subject/evaluators": {
      "get": {
        "tags": ["employee_360", "v3"],
        "summary": "List subject evaluators",
        "operationId": "getV3SurveySubjectEvaluators",
        "parameters": [
          {
            "name": "survey_id",
            "in": "query",
            "description": "Id of the survey",
            "required": true,
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "subject_id",
            "in": "query",
            "description": "Id of the subject",
            "required": true,
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "schema": {
              "maximum": 100,
              "minimum": 1,
              "type": "number",
              "default": 50
            }
          },
          {
            "name": "page",
            "in": "query",
            "schema": {
              "minimum": 1,
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components//schemas/Model47"
                }
              }
            }
          }
        }
      }
    },
    "/v3/survey/subject/report": {
      "get": {
        "tags": ["employee_360"],
        "summary": "Get subject report",
        "operationId": "getV3SurveySubjectReport",
        "parameters": [
          {
            "name": "survey_id",
            "in": "query",
            "description": "Id of the survey",
            "required": true,
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "subject_id",
            "in": "query",
            "description": "Id of the subject",
            "required": true,
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "Successful",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/v3/tickets/{id}/comments": {
      "get": {
        "tags": ["ticket_comments", "v3"],
        "summary": "Get all ticket comments",
        "operationId": "getV3TicketsIdComments",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Ticket ID",
            "required": true,
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "private",
            "in": "query",
            "description": "Comment visibility; true for private, false for public visibility.",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Record limit per request; default is 50, maximum is 100.",
            "schema": {
              "maximum": 100,
              "minimum": 1,
              "type": "number",
              "default": 50
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page of results",
            "schema": {
              "minimum": 1,
              "type": "number"
            }
          },
          {
            "name": "created_date.gte",
            "in": "query",
            "description": "Comment created date greater than or equal to. Should be in the format YYYY-MM-DDTHH:MM:SS",
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "created_date.lte",
            "in": "query",
            "description": "Comment created date less than or equal to. Should be in the format YYYY-MM-DDTHH:MM:SS",
            "schema": {
              "type": "string",
              "format": "date"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components//schemas/Model49"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["ticket_comments", "v3"],
        "summary": "Create a comment",
        "operationId": "postV3TicketsIdComments",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Ticket ID",
            "required": true,
            "schema": {
              "type": "number"
            }
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components//schemas/Model185"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "Successful",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/TicketCommentSchema"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "body"
      }
    },
    "/v1/ces/{surveyId}/shares/{channelId}": {
      "get": {
        "tags": ["ces"],
        "summary": "Get CES Channel",
        "operationId": "getV1CesSurveyidSharesChannelid",
        "parameters": [
          {
            "name": "surveyId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "channelId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "Successful",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/v1/ces/{survey_id}/responses/highEffort": {
      "get": {
        "tags": ["ces"],
        "summary": "List HighEffort",
        "operationId": "getV1CesSurvey_idResponsesHigheffort",
        "parameters": [
          {
            "name": "survey_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "date.gte",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "date.lte",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "maxResults",
            "in": "query",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "page",
            "in": "query",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "Successful",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/v1/ces/{survey_id}/responses/lowEffort": {
      "get": {
        "tags": ["ces"],
        "summary": "List lowEffort",
        "operationId": "getV1CesSurvey_idResponsesLoweffort",
        "parameters": [
          {
            "name": "survey_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "date.gte",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "date.lte",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "maxResults",
            "in": "query",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "page",
            "in": "query",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "Successful",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/v1/ces/{survey_id}/responses/neutral": {
      "get": {
        "tags": ["ces"],
        "summary": "List Neutral",
        "operationId": "getV1CesSurvey_idResponsesNeutral",
        "parameters": [
          {
            "name": "survey_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "date.gte",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "date.lte",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "maxResults",
            "in": "query",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "page",
            "in": "query",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "Successful",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/v1/ces/{survey_id}/submissions/{nps_submission_id}": {
      "get": {
        "tags": ["ces"],
        "summary": "Get response of an CES survey submission",
        "operationId": "getV1CesSurvey_idSubmissionsNps_submission_id",
        "parameters": [
          {
            "name": "nps_submission_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "survey_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "Successful",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/v1/csat/{surveyId}/shares/{channelId}": {
      "get": {
        "tags": ["csat"],
        "summary": "Get CSAT Channel",
        "operationId": "getV1CsatSurveyidSharesChannelid",
        "parameters": [
          {
            "name": "surveyId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "channelId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "Successful",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/v1/csat/{survey_id}/responses/dissatisfied": {
      "get": {
        "tags": ["csat"],
        "summary": "List Dissatisfied",
        "operationId": "getV1CsatSurvey_idResponsesDissatisfied",
        "parameters": [
          {
            "name": "survey_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "date.gte",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "date.lte",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "maxResults",
            "in": "query",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "page",
            "in": "query",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "Successful",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/v1/csat/{survey_id}/responses/satisfied": {
      "get": {
        "tags": ["csat"],
        "summary": "List Satisfied",
        "operationId": "getV1CsatSurvey_idResponsesSatisfied",
        "parameters": [
          {
            "name": "survey_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "date.gte",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "date.lte",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "maxResults",
            "in": "query",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "page",
            "in": "query",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "Successful",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/v1/csat/{survey_id}/responses/neutral": {
      "get": {
        "tags": ["csat"],
        "summary": "List Neutral",
        "operationId": "getV1CsatSurvey_idResponsesNeutral",
        "parameters": [
          {
            "name": "survey_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "date.gte",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "date.lte",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "maxResults",
            "in": "query",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "page",
            "in": "query",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "Successful",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/v1/csat/{survey_id}/submissions/{nps_submission_id}": {
      "get": {
        "tags": ["csat"],
        "summary": "Get response of an csat survey submission",
        "operationId": "getV1CsatSurvey_idSubmissionsNps_submission_id",
        "parameters": [
          {
            "name": "nps_submission_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "survey_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "Successful",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/v1/nps/{survey_id}/responses/passives": {
      "get": {
        "tags": ["nps"],
        "summary": "List passives",
        "operationId": "getV1NpsSurvey_idResponsesPassives",
        "parameters": [
          {
            "name": "survey_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "date.gte",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "date.lte",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "maxResults",
            "in": "query",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "page",
            "in": "query",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "Successful",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/v1/nps/{survey_id}/responses/promoters": {
      "get": {
        "tags": ["nps"],
        "summary": "List promoters",
        "operationId": "getV1NpsSurvey_idResponsesPromoters",
        "parameters": [
          {
            "name": "survey_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "date.gte",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "date.lte",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "maxResults",
            "in": "query",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "page",
            "in": "query",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "Successful",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/v1/nps/{survey_id}/responses/detractors": {
      "get": {
        "tags": ["nps"],
        "summary": "List detractors",
        "operationId": "getV1NpsSurvey_idResponsesDetractors",
        "parameters": [
          {
            "name": "survey_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "date.gte",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "date.lte",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "maxResults",
            "in": "query",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "page",
            "in": "query",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "Successful",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/v1/nps/{surveyId}/shares/{channelId}": {
      "get": {
        "tags": ["nps"],
        "summary": "Get NPS Channel",
        "operationId": "getV1NpsSurveyidSharesChannelid",
        "parameters": [
          {
            "name": "surveyId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "channelId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "Successful",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/v1/surveys/{survey_id}/shares/{share_id}": {
      "get": {
        "tags": ["share"],
        "summary": "Get share details",
        "operationId": "getV1SurveysSurvey_idSharesShare_id",
        "parameters": [
          {
            "name": "survey_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "share_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "Successful",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/v1/surveys/{survey_id}/report/link": {
      "get": {
        "tags": ["reports"],
        "summary": "Get responses report public link",
        "operationId": "getV1SurveysSurvey_idReportLink",
        "parameters": [
          {
            "name": "survey_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "report_id",
            "in": "query",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "Successful",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/v1/surveys/{survey_id}/submissions/{id}": {
      "get": {
        "tags": ["survey"],
        "summary": "Get survey response",
        "operationId": "getV1SurveysSurvey_idSubmissionsId",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "survey_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "Successful",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": ["survey"],
        "summary": "Delete survey response",
        "operationId": "deleteV1SurveysSurvey_idSubmissionsId",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "survey_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "Successful",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/v3/tickets/batch/status/{token}": {
      "get": {
        "tags": ["tickets", "v3"],
        "summary": "Batch ticket creation status",
        "operationId": "getV3TicketsBatchStatusToken",
        "parameters": [
          {
            "name": "token",
            "in": "path",
            "description": "Token to get the batch ticket creation status",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components//schemas/Model52"
                }
              }
            }
          }
        }
      }
    },
    "/v1/ces/{surveyId}/shares/{channelId}/reminders": {
      "get": {
        "tags": ["ces"],
        "summary": "List CES reminders",
        "operationId": "getV1CesSurveyidSharesChannelidReminders",
        "parameters": [
          {
            "name": "surveyId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "channelId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "page",
            "in": "query",
            "schema": {
              "minimum": 1,
              "type": "number",
              "default": 1
            }
          },
          {
            "name": "maxResults",
            "in": "query",
            "schema": {
              "maximum": 100,
              "minimum": 1,
              "type": "number",
              "default": 50
            }
          }
        ],
        "responses": {
          "404": {
            "description": "Not Found",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components//schemas/Model53"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["ces"],
        "summary": "Create reminder",
        "operationId": "postV1CesSurveyidSharesChannelidReminders",
        "parameters": [
          {
            "name": "surveyId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "channelId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "number"
            }
          }
        ],
        "requestBody": {
          "content": {
            "*/*": {
              "schema": {
                "$ref": "#/components//schemas/Model143"
              }
            }
          },
          "required": false
        },
        "responses": {
          "404": {
            "description": "Not Found",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components//schemas/Model53"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "body"
      }
    },
    "/v1/ces/{surveyId}/shares/{channelId}/triggers": {
      "get": {
        "tags": ["ces"],
        "summary": "Get CES Channel triggers",
        "operationId": "getV1CesSurveyidSharesChannelidTriggers",
        "parameters": [
          {
            "name": "surveyId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "channelId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "page",
            "in": "query",
            "schema": {
              "minimum": 1,
              "type": "number",
              "default": 1
            }
          },
          {
            "name": "opened",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "blocked",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "throttled",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "maxResults",
            "in": "query",
            "schema": {
              "maximum": 100,
              "minimum": 1,
              "type": "number",
              "default": 50
            }
          }
        ],
        "responses": {
          "default": {
            "description": "Successful",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/v1/csat/{surveyId}/shares/{channelId}/reminders": {
      "get": {
        "tags": ["csat"],
        "summary": "List csat reminders",
        "operationId": "getV1CsatSurveyidSharesChannelidReminders",
        "parameters": [
          {
            "name": "surveyId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "channelId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "page",
            "in": "query",
            "schema": {
              "minimum": 1,
              "type": "number",
              "default": 1
            }
          },
          {
            "name": "maxResults",
            "in": "query",
            "schema": {
              "maximum": 100,
              "minimum": 1,
              "type": "number",
              "default": 50
            }
          }
        ],
        "responses": {
          "404": {
            "description": "Not Found",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components//schemas/Model53"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["csat"],
        "summary": "Create reminder",
        "operationId": "postV1CsatSurveyidSharesChannelidReminders",
        "parameters": [
          {
            "name": "surveyId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "channelId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "number"
            }
          }
        ],
        "requestBody": {
          "content": {
            "*/*": {
              "schema": {
                "$ref": "#/components//schemas/Model143"
              }
            }
          },
          "required": false
        },
        "responses": {
          "404": {
            "description": "Not Found",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components//schemas/Model53"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "body"
      }
    },
    "/v1/csat/{surveyId}/shares/{channelId}/triggers": {
      "get": {
        "tags": ["csat"],
        "summary": "Get csat Channel triggers",
        "operationId": "getV1CsatSurveyidSharesChannelidTriggers",
        "parameters": [
          {
            "name": "surveyId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "channelId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "page",
            "in": "query",
            "schema": {
              "minimum": 1,
              "type": "number",
              "default": 1
            }
          },
          {
            "name": "opened",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "blocked",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "throttled",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "maxResults",
            "in": "query",
            "schema": {
              "maximum": 100,
              "minimum": 1,
              "type": "number",
              "default": 50
            }
          }
        ],
        "responses": {
          "default": {
            "description": "Successful",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/v1/nps/{surveyId}/shares/{channelId}/triggers": {
      "get": {
        "tags": ["nps"],
        "summary": "Get NPS Channel triggers",
        "operationId": "getV1NpsSurveyidSharesChannelidTriggers",
        "parameters": [
          {
            "name": "surveyId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "channelId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "page",
            "in": "query",
            "schema": {
              "minimum": 1,
              "type": "number",
              "default": 1
            }
          },
          {
            "name": "opened",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "blocked",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "throttled",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "maxResults",
            "in": "query",
            "schema": {
              "maximum": 100,
              "minimum": 1,
              "type": "number",
              "default": 50
            }
          }
        ],
        "responses": {
          "default": {
            "description": "Successful",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/v1/nps/{surveyId}/shares/{channelId}/reminders": {
      "get": {
        "tags": ["nps"],
        "summary": "List NPS reminders",
        "operationId": "getV1NpsSurveyidSharesChannelidReminders",
        "parameters": [
          {
            "name": "surveyId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "channelId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "page",
            "in": "query",
            "schema": {
              "minimum": 1,
              "type": "number",
              "default": 1
            }
          },
          {
            "name": "maxResults",
            "in": "query",
            "schema": {
              "maximum": 100,
              "minimum": 1,
              "type": "number",
              "default": 50
            }
          }
        ],
        "responses": {
          "404": {
            "description": "Not Found",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components//schemas/Model53"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["nps"],
        "summary": "Create reminder",
        "operationId": "postV1NpsSurveyidSharesChannelidReminders",
        "parameters": [
          {
            "name": "surveyId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "channelId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "number"
            }
          }
        ],
        "requestBody": {
          "content": {
            "*/*": {
              "schema": {
                "$ref": "#/components//schemas/Model161"
              }
            }
          },
          "required": false
        },
        "responses": {
          "404": {
            "description": "Not Found",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components//schemas/Model53"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "body"
      }
    },
    "/v1/survey/{surveyId}/subject/{subjectId}/evaluators": {
      "get": {
        "tags": ["employee_360"],
        "summary": "List subject evaluators",
        "operationId": "getV1SurveySurveyidSubjectSubjectidEvaluators",
        "parameters": [
          {
            "name": "surveyId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "subjectId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "pageNo",
            "in": "query",
            "schema": {
              "minimum": 1,
              "type": "number"
            }
          },
          {
            "name": "pageLimit",
            "in": "query",
            "schema": {
              "maximum": 500,
              "minimum": 1,
              "type": "number"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "Successful",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/v1/survey/{surveyId}/subject/{subjectId}/report": {
      "get": {
        "tags": ["employee_360"],
        "summary": "Get subject report",
        "operationId": "getV1SurveySurveyidSubjectSubjectidReport",
        "parameters": [
          {
            "name": "surveyId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "subjectId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "Successful",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/v1/ces": {
      "post": {
        "tags": ["ces"],
        "summary": "Creates CES Survey",
        "operationId": "postV1Ces",
        "requestBody": {
          "content": {
            "*/*": {
              "schema": {
                "$ref": "#/components//schemas/Model54"
              }
            }
          },
          "required": false
        },
        "responses": {
          "default": {
            "description": "Successful",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "body"
      }
    },
    "/v1/csat": {
      "post": {
        "tags": ["csat"],
        "summary": "Creates csat Survey",
        "operationId": "postV1Csat",
        "requestBody": {
          "content": {
            "*/*": {
              "schema": {
                "$ref": "#/components//schemas/Model61"
              }
            }
          },
          "required": false
        },
        "responses": {
          "default": {
            "description": "Successful",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "body"
      }
    },
    "/v1/nps": {
      "post": {
        "tags": ["nps"],
        "summary": "Creates NPS Survey",
        "operationId": "postV1Nps",
        "requestBody": {
          "content": {
            "*/*": {
              "schema": {
                "$ref": "#/components//schemas/Model63"
              }
            }
          },
          "required": false
        },
        "responses": {
          "default": {
            "description": "Successful",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "body"
      }
    },
    "/v1/signup": {
      "post": {
        "tags": ["accounts"],
        "summary": "Create account",
        "operationId": "postV1Signup",
        "requestBody": {
          "content": {
            "*/*": {
              "schema": {
                "$ref": "#/components//schemas/Model64"
              }
            }
          },
          "required": false
        },
        "responses": {
          "default": {
            "description": "Successful",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "body"
      }
    },
    "/v3/language": {
      "post": {
        "tags": ["translation", "v3"],
        "summary": "Create new custom language",
        "description": "This API creates a new custom language for the account",
        "operationId": "postV3Language",
        "requestBody": {
          "content": {
            "*/*": {
              "schema": {
                "$ref": "#/components//schemas/Model84"
              }
            }
          },
          "required": false
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components//schemas/Model86"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components//schemas/Model10"
                }
              }
            }
          },
          "402": {
            "description": "Payment Required",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components//schemas/Model11"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components//schemas/Model12"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "body"
      }
    },
    "/v3/sections": {
      "post": {
        "tags": ["survey", "v3"],
        "summary": "Create survey section",
        "operationId": "postV3Sections",
        "requestBody": {
          "content": {
            "*/*": {
              "schema": {
                "$ref": "#/components//schemas/Model109"
              }
            }
          },
          "required": false
        },
        "responses": {
          "default": {
            "description": "Successful",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "body"
      }
    },
    "/v3/translation": {
      "put": {
        "tags": ["translation", "v3"],
        "summary": "Update translation",
        "operationId": "putV3Translation",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components//schemas/Model194"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "Successful",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components//schemas/Model196"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components//schemas/Model10"
                }
              }
            }
          },
          "402": {
            "description": "Payment Required",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components//schemas/Model11"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components//schemas/Model12"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "body"
      },
      "post": {
        "tags": ["translation", "v3"],
        "summary": "Create new translation in a survey",
        "operationId": "postV3Translation",
        "requestBody": {
          "content": {
            "*/*": {
              "schema": {
                "$ref": "#/components//schemas/Model111"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "Successful",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components//schemas/Model115"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components//schemas/Model10"
                }
              }
            }
          },
          "402": {
            "description": "Payment Required",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components//schemas/Model11"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components//schemas/Model12"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "body"
      },
      "delete": {
        "tags": ["translation", "v3"],
        "summary": "Delete translation",
        "operationId": "deleteV3Translation",
        "requestBody": {
          "content": {
            "*/*": {
              "schema": {
                "$ref": "#/components//schemas/Model234"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "Successful",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components//schemas/Model236"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components//schemas/Model10"
                }
              }
            }
          },
          "402": {
            "description": "Payment Required",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components//schemas/Model11"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components//schemas/Model12"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "body"
      }
    },
    "/v3/channels/create_unique_links": {
      "post": {
        "tags": ["channels"],
        "summary": "Create unique survey links",
        "operationId": "postV3ChannelsCreate_unique_links",
        "requestBody": {
          "content": {
            "*/*": {
              "schema": {
                "$ref": "#/components/schemas/createUniQueShareLinkSchema"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "Successful",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/getUniQueShareLinkResponse"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "body"
      }
    },
    "/v3/contacts/batch": {
      "post": {
        "tags": ["contacts", "v3"],
        "summary": "Create contacts",
        "operationId": "postV3ContactsBatch",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "description": "Custom Token generated from the App",
            "required": true,
            "schema": {
              "pattern": "/Bearer [^\\s]+/",
              "type": "string",
              "default": "Bearer <Token>"
            }
          }
        ],
        "requestBody": {
          "content": {
            "*/*": {
              "schema": {
                "$ref": "#/components/schemas/createBulkContact"
              }
            }
          },
          "required": false
        },
        "responses": {
          "202": {
            "description": "Accepted",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components//schemas/Model128"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "body"
      }
    },
    "/v3/responses/batch": {
      "post": {
        "tags": ["response"],
        "summary": "Batch create responses",
        "operationId": "postV3ResponsesBatch",
        "requestBody": {
          "content": {
            "*/*": {
              "schema": {
                "$ref": "#/components/schemas/BatchImportRequestSchema"
              }
            }
          },
          "required": false
        },
        "responses": {
          "202": {
            "description": "Accepted",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/BatchImportResponseSchema"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "body"
      }
    },
    "/v3/responses/new": {
      "post": {
        "tags": ["response"],
        "summary": "Start a new response",
        "description": "Partial submission settings for the survey must be enabled to use this endpoint",
        "operationId": "postV3ResponsesNew",
        "requestBody": {
          "content": {
            "*/*": {
              "schema": {
                "$ref": "#/components/schemas/startResponseSchema"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "Successful",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/getStartResponseResponse"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "body"
      }
    },
    "/v3/survey/invite": {
      "post": {
        "tags": ["employee_360"],
        "summary": "Create invite",
        "operationId": "postV3SurveyInvite",
        "parameters": [
          {
            "name": "survey_id",
            "in": "query",
            "required": true,
            "schema": {
              "type": "number"
            }
          }
        ],
        "requestBody": {
          "content": {
            "*/*": {
              "schema": {
                "$ref": "#/components//schemas/Model133"
              }
            }
          },
          "required": false
        },
        "responses": {
          "default": {
            "description": "Successful",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "body"
      }
    },
    "/v3/tickets/batch": {
      "post": {
        "tags": ["tickets", "v3"],
        "summary": "Create tickets in batch",
        "operationId": "postV3TicketsBatch",
        "requestBody": {
          "content": {
            "*/*": {
              "schema": {
                "$ref": "#/components/schemas/createTicketInBatch"
              }
            }
          },
          "required": false
        },
        "responses": {
          "202": {
            "description": "Accepted",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components//schemas/Model134"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "body"
      }
    },
    "/v3/variables/batch": {
      "post": {
        "tags": ["variables", "v3"],
        "summary": "Create survey variables",
        "operationId": "postV3VariablesBatch",
        "requestBody": {
          "content": {
            "*/*": {
              "schema": {
                "$ref": "#/components/schemas/createBulkVariablesSchema"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "Successful",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/createVariablesResponseSchema"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "body"
      }
    },
    "/v1/audit-logs/events/subscribe": {
      "post": {
        "tags": ["audit_logs"],
        "summary": "Create subscribed event",
        "operationId": "postV1AuditlogsEventsSubscribe",
        "requestBody": {
          "content": {
            "*/*": {
              "schema": {
                "$ref": "#/components//schemas/Model137"
              }
            }
          },
          "required": false
        },
        "responses": {
          "default": {
            "description": "Successful",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "body"
      }
    },
    "/v1/ces/{survey_id}/email": {
      "post": {
        "tags": ["ces"],
        "summary": "Create CES Email channel",
        "operationId": "postV1CesSurvey_idEmail",
        "parameters": [
          {
            "name": "survey_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "number"
            }
          }
        ],
        "requestBody": {
          "content": {
            "*/*": {
              "schema": {
                "$ref": "#/components//schemas/Model145"
              }
            }
          },
          "required": false
        },
        "responses": {
          "default": {
            "description": "Successful",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "body"
      }
    },
    "/v1/ces/{survey_id}/sms": {
      "post": {
        "tags": ["ces"],
        "summary": "Create SMS share",
        "operationId": "postV1CesSurvey_idSms",
        "parameters": [
          {
            "name": "survey_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "number"
            }
          }
        ],
        "requestBody": {
          "content": {
            "*/*": {
              "schema": {
                "$ref": "#/components//schemas/Model149"
              }
            }
          },
          "required": false
        },
        "responses": {
          "default": {
            "description": "Successful",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "body"
      }
    },
    "/v1/contactlist/active/contacts": {
      "post": {
        "tags": ["contacts"],
        "summary": "Create multiple contacts",
        "operationId": "postV1ContactlistActiveContacts",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "description": "Custom Token generated from the App",
            "required": true,
            "schema": {
              "pattern": "/Bearer [^\\s]+/",
              "type": "string",
              "default": "Bearer <Token>"
            }
          }
        ],
        "requestBody": {
          "content": {
            "*/*": {
              "schema": {
                "$ref": "#/components//schemas/Model151"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "Successful",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components//schemas/Model152"
                }
              }
            }
          },
          "202": {
            "description": "Accepted",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components//schemas/Model153"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "body"
      }
    },
    "/v1/csat/{survey_id}/email": {
      "post": {
        "tags": ["csat"],
        "summary": "Create csat Email channel",
        "operationId": "postV1CsatSurvey_idEmail",
        "parameters": [
          {
            "name": "survey_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "number"
            }
          }
        ],
        "requestBody": {
          "content": {
            "*/*": {
              "schema": {
                "$ref": "#/components//schemas/Model157"
              }
            }
          },
          "required": false
        },
        "responses": {
          "default": {
            "description": "Successful",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "body"
      }
    },
    "/v1/csat/{survey_id}/sms": {
      "post": {
        "tags": ["csat"],
        "summary": "Create SMS share",
        "operationId": "postV1CsatSurvey_idSms",
        "parameters": [
          {
            "name": "survey_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "number"
            }
          }
        ],
        "requestBody": {
          "content": {
            "*/*": {
              "schema": {
                "$ref": "#/components//schemas/Model149"
              }
            }
          },
          "required": false
        },
        "responses": {
          "default": {
            "description": "Successful",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "body"
      }
    },
    "/v1/kiosk/{deviceId}/submissions": {
      "post": {
        "tags": ["kiosk", "v1"],
        "summary": "Create Kiosk Submissions",
        "operationId": "postV1KioskDeviceidSubmissions",
        "requestBody": {
          "content": {
            "*/*": {
              "schema": {
                "$ref": "#/components//schemas/Model159"
              }
            }
          },
          "required": false
        },
        "responses": {
          "default": {
            "description": "Successful",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "body"
      }
    },
    "/v1/nps/{survey_id}/sms": {
      "post": {
        "tags": ["nps"],
        "summary": "Create SMS share",
        "operationId": "postV1NpsSurvey_idSms",
        "parameters": [
          {
            "name": "survey_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "number"
            }
          }
        ],
        "requestBody": {
          "content": {
            "*/*": {
              "schema": {
                "$ref": "#/components//schemas/Model149"
              }
            }
          },
          "required": false
        },
        "responses": {
          "default": {
            "description": "Successful",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "body"
      }
    },
    "/v1/nps/{survey_id}/email": {
      "post": {
        "tags": ["nps"],
        "summary": "Create NPS Email channel",
        "operationId": "postV1NpsSurvey_idEmail",
        "parameters": [
          {
            "name": "survey_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "number"
            }
          }
        ],
        "requestBody": {
          "content": {
            "*/*": {
              "schema": {
                "$ref": "#/components//schemas/Model163"
              }
            }
          },
          "required": false
        },
        "responses": {
          "default": {
            "description": "Successful",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "body"
      }
    },
    "/v1/sections/{id}/questions": {
      "post": {
        "tags": ["survey"],
        "summary": "Create question",
        "operationId": "postV1SectionsIdQuestions",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "Successful",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/v1/shares/email/{share_id}": {
      "post": {
        "tags": ["share"],
        "summary": "Create email share",
        "operationId": "postV1SharesEmailShare_id",
        "parameters": [
          {
            "name": "share_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "number"
            }
          }
        ],
        "requestBody": {
          "content": {
            "*/*": {
              "schema": {
                "$ref": "#/components//schemas/Model165"
              }
            }
          },
          "required": false
        },
        "responses": {
          "default": {
            "description": "Successful",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "body"
      }
    },
    "/v1/survey/{surveyId}/invite": {
      "post": {
        "tags": ["employee_360"],
        "summary": "Create invite",
        "operationId": "postV1SurveySurveyidInvite",
        "parameters": [
          {
            "name": "surveyId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "number"
            }
          }
        ],
        "requestBody": {
          "content": {
            "*/*": {
              "schema": {
                "$ref": "#/components//schemas/Model170"
              }
            }
          },
          "required": false
        },
        "responses": {
          "default": {
            "description": "Successful",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "body"
      }
    },
    "/v1/surveys/{id}/clone": {
      "post": {
        "tags": ["survey"],
        "summary": "Clone survey",
        "operationId": "postV1SurveysIdClone",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "number"
            }
          }
        ],
        "requestBody": {
          "content": {
            "*/*": {
              "schema": {
                "$ref": "#/components//schemas/Model171"
              }
            }
          },
          "required": false
        },
        "responses": {
          "default": {
            "description": "Successful",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "body"
      }
    },
    "/v1/surveys/{id}/sections": {
      "post": {
        "tags": ["survey"],
        "summary": "Create a section",
        "operationId": "postV1SurveysIdSections",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "number"
            }
          }
        ],
        "requestBody": {
          "content": {
            "*/*": {
              "schema": {
                "$ref": "#/components//schemas/Model182"
              }
            }
          },
          "required": false,
          "x-alternatives": [
            {
              "$ref": "#/x-alt-definitions/Model 22"
            },
            {
              "$ref": "#/x-alt-definitions/Model 23",
              "type": "array"
            }
          ]
        },
        "responses": {
          "default": {
            "description": "Successful",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "body"
      }
    },
    "/v3/channels/{id}/clone": {
      "post": {
        "tags": ["channels"],
        "summary": "Clone a channel",
        "operationId": "postV3ChannelsIdClone",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of the channel",
            "required": true,
            "schema": {
              "type": "number"
            }
          }
        ],
        "requestBody": {
          "content": {
            "*/*": {
              "schema": {
                "$ref": "#/components//schemas/Model183"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "Successful",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components//schemas/Model27"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "body"
      }
    },
    "/v3/channels/{id}/summary": {
      "post": {
        "tags": ["channels"],
        "summary": "Get channel analytics metrics",
        "operationId": "postV3ChannelsIdSummary",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of the channel",
            "required": true,
            "schema": {
              "type": "number"
            }
          }
        ],
        "requestBody": {
          "content": {
            "*/*": {
              "schema": {
                "$ref": "#/components//schemas/Model183"
              }
            }
          },
          "required": false
        },
        "responses": {
          "default": {
            "description": "Successful",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "body"
      }
    },
    "/v3/surveys/{id}/clone": {
      "post": {
        "tags": ["survey", "v3"],
        "summary": "Clone a survey",
        "operationId": "postV3SurveysIdClone",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of Survey",
            "required": true,
            "schema": {
              "type": "number"
            }
          }
        ],
        "requestBody": {
          "content": {
            "*/*": {
              "schema": {
                "$ref": "#/components//schemas/Model184"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "Successful",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/getSurveySchema"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "body"
      }
    },
    "/v1/ces/{survey_id}/sms/{id}": {
      "post": {
        "tags": ["ces"],
        "summary": "Share existing SMS Share",
        "operationId": "postV1CesSurvey_idSmsId",
        "parameters": [
          {
            "name": "survey_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "number"
            }
          }
        ],
        "requestBody": {
          "content": {
            "*/*": {
              "schema": {
                "$ref": "#/components//schemas/Model186"
              }
            }
          },
          "required": false
        },
        "responses": {
          "default": {
            "description": "Successful",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "body"
      }
    },
    "/v1/ces/{survey_id}/email/{channel_id}": {
      "post": {
        "tags": ["ces"],
        "summary": "Send CES channel Blast",
        "operationId": "postV1CesSurvey_idEmailChannel_id",
        "parameters": [
          {
            "name": "survey_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "channel_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "number"
            }
          }
        ],
        "requestBody": {
          "content": {
            "*/*": {
              "schema": {
                "$ref": "#/components//schemas/Model187"
              }
            }
          },
          "required": false
        },
        "responses": {
          "default": {
            "description": "Successful",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "body"
      }
    },
    "/v1/csat/{survey_id}/sms/{id}": {
      "post": {
        "tags": ["csat"],
        "summary": "Share existing SMS Share",
        "operationId": "postV1CsatSurvey_idSmsId",
        "parameters": [
          {
            "name": "survey_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "number"
            }
          }
        ],
        "requestBody": {
          "content": {
            "*/*": {
              "schema": {
                "$ref": "#/components//schemas/Model186"
              }
            }
          },
          "required": false
        },
        "responses": {
          "default": {
            "description": "Successful",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "body"
      }
    },
    "/v1/csat/{survey_id}/email/{channel_id}": {
      "post": {
        "tags": ["csat"],
        "summary": "Send csat channel Blast",
        "operationId": "postV1CsatSurvey_idEmailChannel_id",
        "parameters": [
          {
            "name": "survey_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "channel_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "number"
            }
          }
        ],
        "requestBody": {
          "content": {
            "*/*": {
              "schema": {
                "$ref": "#/components//schemas/Model187"
              }
            }
          },
          "required": false
        },
        "responses": {
          "default": {
            "description": "Successful",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "body"
      }
    },
    "/v1/nps/{survey_id}/email/{channel_id}": {
      "post": {
        "tags": ["nps"],
        "summary": "Send NPS channel Blast",
        "operationId": "postV1NpsSurvey_idEmailChannel_id",
        "parameters": [
          {
            "name": "survey_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "channel_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "number"
            }
          }
        ],
        "requestBody": {
          "content": {
            "*/*": {
              "schema": {
                "$ref": "#/components//schemas/Model187"
              }
            }
          },
          "required": false
        },
        "responses": {
          "default": {
            "description": "Successful",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "body"
      }
    },
    "/v1/nps/{survey_id}/sms/{id}": {
      "post": {
        "tags": ["nps"],
        "summary": "Share existing SMS Share",
        "operationId": "postV1NpsSurvey_idSmsId",
        "parameters": [
          {
            "name": "survey_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "number"
            }
          }
        ],
        "requestBody": {
          "content": {
            "*/*": {
              "schema": {
                "$ref": "#/components//schemas/Model186"
              }
            }
          },
          "required": false
        },
        "responses": {
          "default": {
            "description": "Successful",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "body"
      }
    },
    "/v1/surveys/{survey_id}/submission/start": {
      "post": {
        "tags": ["submissions"],
        "summary": "Start submission",
        "operationId": "postV1SurveysSurvey_idSubmissionStart",
        "parameters": [
          {
            "name": "survey_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "number"
            }
          }
        ],
        "requestBody": {
          "content": {
            "*/*": {
              "schema": {
                "$ref": "#/components//schemas/Model188"
              }
            }
          },
          "required": false
        },
        "responses": {
          "default": {
            "description": "Successful",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "body"
      }
    },
    "/v1/surveys/{survey_id}/share/link": {
      "post": {
        "tags": ["share"],
        "summary": "Create link share for Survey",
        "operationId": "postV1SurveysSurvey_idShareLink",
        "parameters": [
          {
            "name": "survey_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "Successful",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/v2/survey/{surveyId}/shares/email/{share_id}": {
      "post": {
        "tags": ["share"],
        "summary": "Trigger email share V2",
        "operationId": "postV2SurveySurveyidSharesEmailShare_id",
        "parameters": [
          {
            "name": "share_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "surveyId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "number"
            }
          }
        ],
        "requestBody": {
          "content": {
            "*/*": {
              "schema": {
                "$ref": "#/components//schemas/Model192"
              }
            }
          },
          "required": false
        },
        "responses": {
          "default": {
            "description": "Successful",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "body"
      }
    },
    "/v1/survey/{survey_id}/channels/{channel_id}/contacts/survey-link": {
      "post": {
        "tags": ["share"],
        "summary": "Unique survey link for each contact",
        "operationId": "postV1SurveySurvey_idChannelsChannel_idContactsSurveylink",
        "parameters": [
          {
            "name": "survey_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "channel_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "number"
            }
          }
        ],
        "requestBody": {
          "content": {
            "*/*": {
              "schema": {
                "$ref": "#/components//schemas/Model193"
              }
            }
          },
          "required": false
        },
        "responses": {
          "default": {
            "description": "Successful",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "body"
      }
    },
    "/v1/contactlist/{id}": {
      "put": {
        "tags": ["contact_list"],
        "summary": "Update contact list",
        "operationId": "putV1ContactlistId",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "number"
            }
          }
        ],
        "requestBody": {
          "content": {
            "*/*": {
              "schema": {
                "$ref": "#/components//schemas/Model55"
              }
            }
          },
          "required": false
        },
        "responses": {
          "default": {
            "description": "Successful",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "body"
      },
      "delete": {
        "tags": ["contact_list"],
        "summary": "Delete contact list",
        "operationId": "deleteV1ContactlistId",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "Successful",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/v1/webhooks/{id}": {
      "put": {
        "tags": ["webhooks"],
        "summary": "Update webhook",
        "operationId": "putV1WebhooksId",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "number"
            }
          }
        ],
        "requestBody": {
          "content": {
            "*/*": {
              "schema": {
                "$ref": "#/components//schemas/Model202"
              }
            }
          },
          "required": false
        },
        "responses": {
          "default": {
            "description": "Successful",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "body"
      },
      "delete": {
        "tags": ["webhooks"],
        "summary": "Delete webhook",
        "operationId": "deleteV1WebhooksId",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "Successful",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/v3/questions/{question_id}": {
      "put": {
        "tags": ["questions", "v3"],
        "summary": "Update a question",
        "operationId": "putV3QuestionsQuestion_id",
        "parameters": [
          {
            "name": "question_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "number"
            }
          }
        ],
        "requestBody": {
          "content": {
            "*/*": {
              "schema": {
                "$ref": "#/components//schemas/Model214"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "Successful",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/updateQuestionSchema"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "body"
      },
      "delete": {
        "tags": ["questions", "v3"],
        "summary": "Delete a question",
        "operationId": "deleteV3QuestionsQuestion_id",
        "parameters": [
          {
            "name": "question_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/properties"
                }
              }
            }
          }
        }
      }
    },
    "/v3/sections/{section_id}": {
      "put": {
        "tags": ["survey", "v3"],
        "summary": "Update survey section",
        "operationId": "putV3SectionsSection_id",
        "parameters": [
          {
            "name": "section_id",
            "in": "path",
            "description": "Id of Section",
            "required": true,
            "schema": {
              "type": "number"
            }
          }
        ],
        "requestBody": {
          "content": {
            "*/*": {
              "schema": {
                "$ref": "#/components//schemas/Model215"
              }
            }
          },
          "required": false
        },
        "responses": {
          "default": {
            "description": "Successful",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "body"
      },
      "delete": {
        "tags": ["survey"],
        "summary": "Delete a section",
        "operationId": "deleteV3SectionsSection_id",
        "parameters": [
          {
            "name": "section_id",
            "in": "path",
            "description": "Id of Section",
            "required": true,
            "schema": {
              "type": "number"
            }
          }
        ],
        "requestBody": {
          "content": {
            "*/*": {
              "schema": {
                "$ref": "#/components//schemas/Model237"
              }
            }
          },
          "required": false
        },
        "responses": {
          "default": {
            "description": "Successful",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "body"
      }
    },
    "/v3/webhooks/{id}": {
      "put": {
        "tags": ["webhooks", "v3"],
        "summary": "Update a webhook",
        "operationId": "putV3WebhooksId",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "number"
            }
          }
        ],
        "requestBody": {
          "content": {
            "*/*": {
              "schema": {
                "$ref": "#/components//schemas/Model217"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "Successful",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/webhookResponseSchema"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "body"
      },
      "delete": {
        "tags": ["webhooks", "v3"],
        "summary": "Delete a webhook",
        "operationId": "deleteV3WebhooksId",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/properties"
                }
              }
            }
          }
        }
      }
    },
    "/v1/contacts/properties/{id}": {
      "put": {
        "tags": ["contacts"],
        "summary": "Update contact property",
        "operationId": "putV1ContactsPropertiesId",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "number"
            }
          }
        ],
        "requestBody": {
          "content": {
            "*/*": {
              "schema": {
                "$ref": "#/components//schemas/Model218"
              }
            }
          },
          "required": false
        },
        "responses": {
          "default": {
            "description": "Successful",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "body"
      },
      "delete": {
        "tags": ["contacts"],
        "summary": "Delete contact property",
        "operationId": "deleteV1ContactsPropertiesId",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "Successful",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/v3/responses/{response_id}/complete": {
      "put": {
        "tags": ["response"],
        "summary": "Complete response",
        "operationId": "putV3ResponsesResponse_idComplete",
        "parameters": [
          {
            "name": "response_id",
            "in": "path",
            "description": "ID of the response",
            "required": true,
            "schema": {
              "type": "number"
            }
          }
        ],
        "requestBody": {
          "content": {
            "*/*": {
              "schema": {
                "$ref": "#/components//schemas/Model220"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "Successful",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/getCompleteResponse"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "body"
      }
    },
    "/v3/responses/{response_id}/update": {
      "put": {
        "tags": ["response"],
        "summary": "Add answers for response",
        "operationId": "putV3ResponsesResponse_idUpdate",
        "parameters": [
          {
            "name": "response_id",
            "in": "path",
            "description": "ID of the response",
            "required": true,
            "schema": {
              "type": "number"
            }
          }
        ],
        "requestBody": {
          "content": {
            "*/*": {
              "schema": {
                "$ref": "#/components//schemas/Model222"
              }
            }
          },
          "required": false
        },
        "responses": {
          "default": {
            "description": "Successful",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "body"
      }
    },
    "/v3/survey/subject/updateinvite": {
      "put": {
        "tags": ["employee_360"],
        "summary": "Update invite",
        "operationId": "putV3SurveySubjectUpdateinvite",
        "parameters": [
          {
            "name": "survey_id",
            "in": "query",
            "required": true,
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "subject_id",
            "in": "query",
            "required": true,
            "schema": {
              "type": "number"
            }
          }
        ],
        "requestBody": {
          "content": {
            "*/*": {
              "schema": {
                "$ref": "#/components//schemas/Model223"
              }
            }
          },
          "required": false
        },
        "responses": {
          "default": {
            "description": "Successful",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "body"
      }
    },
    "/v1/surveys/{id}/questions/{question_id}": {
      "put": {
        "tags": ["survey"],
        "summary": "Update question",
        "operationId": "putV1SurveysIdQuestionsQuestion_id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "question_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "number"
            }
          }
        ],
        "requestBody": {
          "content": {
            "*/*": {
              "schema": {
                "$ref": "#/components//schemas/Model226"
              }
            }
          },
          "required": false
        },
        "responses": {
          "default": {
            "description": "Successful",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "body"
      },
      "delete": {
        "tags": ["survey"],
        "summary": "Delete question",
        "operationId": "deleteV1SurveysIdQuestionsQuestion_id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "question_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "Successful",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/v1/surveys/{id}/sections/{section_id}": {
      "put": {
        "tags": ["survey"],
        "summary": "Update survey section",
        "operationId": "putV1SurveysIdSectionsSection_id",
        "parameters": [
          {
            "name": "section_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "number"
            }
          }
        ],
        "requestBody": {
          "content": {
            "*/*": {
              "schema": {
                "$ref": "#/components//schemas/Model228"
              }
            }
          },
          "required": false
        },
        "responses": {
          "default": {
            "description": "Successful",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "body"
      },
      "delete": {
        "tags": ["survey"],
        "summary": "Delete a section",
        "operationId": "deleteV1SurveysIdSectionsSection_id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "section_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "Successful",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/v1/survey/{surveyId}/subject/{subjectId}/invite": {
      "put": {
        "tags": ["employee_360"],
        "summary": "Update invite",
        "operationId": "putV1SurveySurveyidSubjectSubjectidInvite",
        "parameters": [
          {
            "name": "surveyId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "subjectId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "number"
            }
          }
        ],
        "requestBody": {
          "content": {
            "*/*": {
              "schema": {
                "$ref": "#/components//schemas/Model229"
              }
            }
          },
          "required": false
        },
        "responses": {
          "default": {
            "description": "Successful",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "body"
      }
    },
    "/v1/survey/{surveyId}/shares/sms/{channelId}": {
      "put": {
        "tags": ["share"],
        "summary": "Update SMS share",
        "operationId": "putV1SurveySurveyidSharesSmsChannelid",
        "parameters": [
          {
            "name": "surveyId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "channelId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "number"
            }
          }
        ],
        "requestBody": {
          "content": {
            "*/*": {
              "schema": {
                "$ref": "#/components//schemas/Model230"
              }
            }
          },
          "required": false
        },
        "responses": {
          "default": {
            "description": "Successful",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "body"
      }
    },
    "/v1/survey/{survey_id}/submissions/{submission_id}/complete": {
      "put": {
        "tags": ["submissions"],
        "summary": "Complete submission",
        "operationId": "putV1SurveySurvey_idSubmissionsSubmission_idComplete",
        "parameters": [
          {
            "name": "survey_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "submission_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "Successful",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/v2/survey/{surveyId}/shares/sms/{channelId}": {
      "put": {
        "tags": ["share"],
        "summary": "Update SMS survey V2",
        "operationId": "putV2SurveySurveyidSharesSmsChannelid",
        "parameters": [
          {
            "name": "surveyId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "channelId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "number"
            }
          }
        ],
        "requestBody": {
          "content": {
            "*/*": {
              "schema": {
                "$ref": "#/components//schemas/Model233"
              }
            }
          },
          "required": false
        },
        "responses": {
          "default": {
            "description": "Successful",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "body"
      }
    },
    "/v1/delete": {
      "delete": {
        "tags": ["accounts"],
        "summary": "Delete account",
        "operationId": "deleteV1Delete",
        "responses": {
          "default": {
            "description": "Successful",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/v1/submissions/{id}": {
      "delete": {
        "tags": ["survey"],
        "summary": "Delete survey response",
        "operationId": "deleteV1SubmissionsId",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "survey_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "Successful",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/v3/contact_properties/{id}": {
      "delete": {
        "tags": ["contact_properties"],
        "summary": "Delete a contact property",
        "operationId": "deleteV3Contact_propertiesId",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/properties"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": ["contact_properties"],
        "summary": "Update a contact property",
        "operationId": "patchV3Contact_propertiesId",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "number"
            }
          }
        ],
        "requestBody": {
          "content": {
            "*/*": {
              "schema": {
                "$ref": "#/components//schemas/Model218"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "Successful",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/createContactPropertySchema"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "body"
      }
    },
    "/v3/variables/{variable_id}": {
      "delete": {
        "tags": ["variables", "v3"],
        "summary": "Delete a survey variable",
        "operationId": "deleteV3VariablesVariable_id",
        "parameters": [
          {
            "name": "variable_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "Successful",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/v1/audit-logs/events/{id}": {
      "delete": {
        "tags": ["audit_logs"],
        "summary": "Delete subscribed event",
        "operationId": "deleteV1AuditlogsEventsId",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "Successful",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/v3/audit_logs/events/{id}": {
      "delete": {
        "tags": ["audit_logs", "v3"],
        "summary": "Delete subscribed event",
        "operationId": "deleteV3Audit_logsEventsId",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of event to be deleted",
            "required": true,
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "Successful",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/v1/surveys/{id}/variables/{variable_id}": {
      "delete": {
        "tags": ["survey"],
        "summary": "Delete survey variable",
        "operationId": "deleteV1SurveysIdVariablesVariable_id",
        "parameters": [
          {
            "name": "variable_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "Successful",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/v1/ces/{surveyId}/shares/{channelId}/reminders/{reminderId}": {
      "delete": {
        "tags": ["ces"],
        "summary": "Delete CES reminder",
        "operationId": "deleteV1CesSurveyidSharesChannelidRemindersReminderid",
        "parameters": [
          {
            "name": "surveyId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "channelId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "reminderId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components//schemas/Model238"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components//schemas/Model239"
                }
              }
            }
          }
        }
      }
    },
    "/v1/csat/{surveyId}/shares/{channelId}/reminders/{reminderId}": {
      "delete": {
        "tags": ["csat"],
        "summary": "Delete csat reminder",
        "operationId": "deleteV1CsatSurveyidSharesChannelidRemindersReminderid",
        "parameters": [
          {
            "name": "surveyId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "channelId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "reminderId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components//schemas/Model240"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components//schemas/Model239"
                }
              }
            }
          }
        }
      }
    },
    "/v1/nps/{surveyId}/shares/{channelId}/reminders/{reminderId}": {
      "delete": {
        "tags": ["nps"],
        "summary": "Delete NPS reminder",
        "operationId": "deleteV1NpsSurveyidSharesChannelidRemindersReminderid",
        "parameters": [
          {
            "name": "surveyId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "channelId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "reminderId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components//schemas/Model238"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components//schemas/Model239"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Model 1": {
        "required": ["active", "id", "unsubscribed"],
        "type": "object",
        "properties": {
          "id": {
            "type": "number",
            "description": "ID of the contact"
          },
          "name": {
            "type": "string",
            "description": "Full Name of contact",
            "example": "Jane Doe"
          },
          "email": {
            "type": "string",
            "description": "Email of contact",
            "example": "janedoe@surveysparrow.com",
            "x-format": {
              "email": true
            }
          },
          "active": {
            "type": "boolean",
            "description": "if true, indicates the contact will actively receive email and sms shares",
            "example": true
          },
          "unsubscribed": {
            "type": "boolean",
            "description": "if true, indicates that the contact is unsubscribed from receiving emails",
            "example": false
          },
          "phone": {
            "type": "string",
            "description": "Phone number of the contact",
            "example": "91234567833"
          },
          "mobile": {
            "type": "string",
            "description": "Mobile number of the contact",
            "example": "1653452783"
          },
          "jobTitle": {
            "type": "string",
            "description": "Job Title of the contact",
            "example": "Manager"
          }
        }
      },
      "contacts": {
        "type": "array",
        "items": {
          "$ref": "#/components//schemas/Model1"
        }
      },
      "Model 2": {
        "required": ["hasNextPage"],
        "type": "object",
        "properties": {
          "contacts": {
            "$ref": "#/components/schemas/contacts"
          },
          "hasNextPage": {
            "type": "boolean",
            "example": false
          }
        }
      },
      "list": {
        "type": "array",
        "description": "List of all audit logs",
        "example": [
          {
            "object": "survey",
            "survey": {
              "id": 1,
              "name": "Untitled"
            },
            "id": "8190da50-1405",
            "event": "SURVEY_CREATED",
            "operation": "Create",
            "device": "COMPUTER",
            "ipAddress": "127.0.0.1",
            "time": "2023-06-26T09:40:10.018Z",
            "actor": {
              "id": 1,
              "email": "test@test.com",
              "name": "test"
            },
            "message": "test has created a new survey Untitled"
          }
        ],
        "items": {
          "type": "string"
        }
      },
      "Model 3": {
        "required": ["count", "list"],
        "type": "object",
        "properties": {
          "has_next_page": {
            "type": "boolean",
            "description": "More items in the collection?",
            "example": true
          },
          "count": {
            "type": "number",
            "description": "Total count of audit logs.",
            "example": 10
          },
          "list": {
            "$ref": "#/components/schemas/list"
          }
        }
      },
      "properties": {
        "type": "object"
      },
      "channelSchema": {
        "type": "object",
        "properties": {
          "id": {
            "type": "number",
            "description": "Id of channel",
            "example": 1
          },
          "name": {
            "type": "string",
            "description": "Name of channel",
            "example": "Email share 1"
          },
          "status": {
            "type": "string",
            "description": "Status of the share",
            "example": "ACTIVE"
          },
          "type": {
            "type": "string",
            "description": "Type of channel",
            "example": "EMAIL"
          },
          "properties": {
            "$ref": "#/components/schemas/properties"
          }
        }
      },
      "getChannelsChannelsSchema": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/channelSchema"
        }
      },
      "getChannelsSchema": {
        "type": "object",
        "properties": {
          "has_next_page": {
            "type": "boolean",
            "description": "More items in the collection?",
            "example": true
          },
          "data": {
            "$ref": "#/components/schemas/getChannelsChannelsSchema"
          }
        }
      },
      "contactListSchema": {
        "type": "object",
        "properties": {
          "id": {
            "type": "number",
            "example": 1
          },
          "name": {
            "type": "string",
            "example": "Contact List 1"
          },
          "description": {
            "type": "string",
            "example": "Subscribed Contacts"
          }
        }
      },
      "getContactListsContactListSchema": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/contactListSchema"
        }
      },
      "getContactListsSchema": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/getContactListsContactListSchema"
          }
        }
      },
      "contactPropertySchema": {
        "type": "object",
        "properties": {
          "id": {
            "type": "number",
            "description": "ID of contact property",
            "example": 1
          },
          "name": {
            "type": "string",
            "description": "Name of contact property",
            "example": "date"
          },
          "label": {
            "type": "string",
            "description": "Label of contact property",
            "example": "Date"
          },
          "type": {
            "type": "string",
            "description": "Type of contact property",
            "example": "DATE"
          },
          "description": {
            "type": "string",
            "description": "Description about contact property",
            "example": "Date of joining field"
          },
          "contact_property_group_id": {
            "type": "number",
            "description": "ID of contact property group, contact property belongs to",
            "example": 1
          },
          "group": {
            "type": "string",
            "description": "Name of contact property group, contact property belongs to",
            "example": "Group name"
          }
        }
      },
      "getcontactPropertiesSchema": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/contactPropertySchema"
        }
      },
      "getContactPropertiesContactPropertiesSchema": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/getcontactPropertiesSchema"
          }
        }
      },
      "getContactSchema": {
        "type": "array",
        "items": {
          "type": "string"
        }
      },
      "getContactsSchema": {
        "type": "object",
        "properties": {
          "has_next_page": {
            "type": "boolean",
            "example": true
          },
          "data": {
            "$ref": "#/components/schemas/getContactSchema"
          }
        }
      },
      "Model 4": {
        "type": "object",
        "properties": {
          "id": {
            "type": "number"
          },
          "name": {
            "type": "string"
          },
          "created_at": {
            "type": "string",
            "format": "date"
          },
          "updated_at": {
            "type": "string",
            "format": "date"
          },
          "properties": {
            "$ref": "#/components/schemas/properties"
          },
          "is_public": {
            "type": "boolean"
          }
        }
      },
      "data": {
        "type": "array",
        "items": {
          "$ref": "#/components//schemas/Model4"
        }
      },
      "emailThemeResponseSchema": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/data"
          }
        }
      },
      "expressionResponseSchema": {
        "required": ["name", "representation"],
        "type": "object",
        "properties": {
          "id": {
            "type": "number"
          },
          "name": {
            "type": "string"
          },
          "representation": {
            "$ref": "#/components/schemas/getContactSchema"
          }
        }
      },
      "Model 5": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/expressionResponseSchema"
        }
      },
      "getAllExpressionSchema": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components//schemas/Model5"
          },
          "has_next_page": {
            "type": "boolean"
          }
        }
      },
      "Model 6": {
        "required": ["code", "flag", "label", "name"],
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "description": "Language code",
            "example": "en"
          },
          "name": {
            "type": "string",
            "description": "Language name",
            "example": "English"
          },
          "label": {
            "type": "string",
            "description": "Language label",
            "example": "eng"
          },
          "flag": {
            "type": "string",
            "description": "Language flag",
            "example": "GB"
          }
        }
      },
      "standardLanguages": {
        "type": "array",
        "description": "Array of languages",
        "items": {
          "$ref": "#/components//schemas/Model6"
        }
      },
      "Model 7": {
        "required": ["code", "label", "name"],
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "description": "Language code",
            "example": "ssl"
          },
          "name": {
            "type": "string",
            "description": "Language name",
            "example": "SurveySparrow Language"
          },
          "label": {
            "type": "string",
            "description": "Language label",
            "example": "ssl"
          }
        }
      },
      "customLanguages": {
        "type": "array",
        "description": "Array of custom languages",
        "items": {
          "$ref": "#/components//schemas/Model7"
        }
      },
      "Model 8": {
        "required": ["customLanguages", "standardLanguages"],
        "type": "object",
        "properties": {
          "standardLanguages": {
            "$ref": "#/components/schemas/standardLanguages"
          },
          "customLanguages": {
            "$ref": "#/components/schemas/customLanguages"
          }
        }
      },
      "Model 9": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components//schemas/Model8"
          }
        }
      },
      "Model 10": {
        "required": ["error"],
        "type": "object",
        "properties": {
          "error": {
            "type": "string",
            "description": "Error message",
            "example": "Bad request"
          }
        }
      },
      "Model 11": {
        "required": ["error"],
        "type": "object",
        "properties": {
          "error": {
            "type": "string",
            "description": "Error message",
            "example": "Payment required"
          }
        }
      },
      "Model 12": {
        "required": ["error"],
        "type": "object",
        "properties": {
          "error": {
            "type": "string",
            "description": "Error message",
            "example": "Not found"
          }
        }
      },
      "questionSchema": {
        "type": "object",
        "properties": {
          "id": {
            "type": "number",
            "example": 1
          },
          "type": {
            "type": "string",
            "description": "Question type",
            "example": "TextInput"
          },
          "position": {
            "type": "string",
            "description": "Position of question",
            "example": "2.000000000000000"
          },
          "hasDisplayLogic": {
            "type": "boolean",
            "description": "Whether the question has display logic",
            "example": false
          },
          "properties": {
            "$ref": "#/components/schemas/properties"
          },
          "survey_id": {
            "type": "number",
            "description": "Id of the Survey",
            "example": 2
          },
          "section_id": {
            "type": "number",
            "description": "Id of the section question is part of",
            "example": 3
          },
          "account_id": {
            "type": "number",
            "description": "Account Id",
            "example": 2
          },
          "parent_question_id": {
            "type": "number",
            "description": "If question is a subquestion, parent_question_id will be the Id of the parent question",
            "example": 3
          }
        }
      },
      "questionsQuestionSchema": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/questionSchema"
        }
      },
      "getQuestionsSchema": {
        "type": "object",
        "properties": {
          "has_next_page": {
            "type": "boolean",
            "description": "More questions in the survey",
            "example": true
          },
          "data": {
            "$ref": "#/components/schemas/questionsQuestionSchema"
          }
        }
      },
      "reminderSchema": {
        "required": [
          "account_id",
          "after_days",
          "created_at",
          "frequency",
          "id",
          "sent_count",
          "subject",
          "survey_id",
          "type",
          "updated_at"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "number",
            "description": "Id of reminder",
            "example": 1
          },
          "subject": {
            "type": "string",
            "description": "Subject of reminder",
            "example": "Your feedback matters!"
          },
          "frequency": {
            "type": "string",
            "description": "Frequency of reminder",
            "example": "Days",
            "enum": ["Days", "Weeks", "Months"]
          },
          "type": {
            "type": "string",
            "description": "Type of reminder",
            "enum": ["NOT_RESPONDED", "PARTIALLY_RESPONDED"]
          },
          "after_days": {
            "type": "number"
          },
          "sent_count": {
            "type": "number"
          },
          "created_at": {
            "type": "string",
            "format": "date"
          },
          "updated_at": {
            "type": "string",
            "format": "date"
          },
          "survey_id": {
            "type": "number",
            "description": "Id of Survey",
            "example": 1
          },
          "account_id": {
            "type": "number",
            "description": "Id of Account",
            "example": 1
          },
          "message": {
            "type": "string",
            "description": "Return a message when Partial Respondents reminder type is created without turning on partial submissions in the survey settings"
          }
        }
      },
      "Model 13": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/reminderSchema"
        }
      },
      "getRemindersSchema": {
        "type": "object",
        "properties": {
          "has_next_page": {
            "type": "boolean",
            "description": "More items in the collection?",
            "example": true
          },
          "data": {
            "$ref": "#/components//schemas/Model13"
          }
        }
      },
      "question_tags": {
        "type": "array",
        "description": "Question tags",
        "items": {
          "type": "string"
        }
      },
      "Model 14": {
        "type": "object",
        "properties": {
          "question": {
            "type": "string",
            "example": "How likely are you to recommend our Product to friends?"
          },
          "question_tags": {
            "$ref": "#/components/schemas/question_tags"
          },
          "question_id": {
            "type": "number",
            "x-alternatives": [
              {
                "type": "number"
              },
              {
                "type": "string"
              }
            ]
          },
          "skipped": {
            "type": "boolean",
            "description": "Is the question skipped?",
            "example": false
          }
        }
      },
      "responsesAnswersSchema": {
        "type": "array",
        "items": {
          "$ref": "#/components//schemas/Model14"
        }
      },
      "responsesChannelSchema": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Name of the share",
            "example": "Email share 1"
          },
          "type": {
            "type": "string",
            "description": "Type of channel",
            "example": "EMAIL"
          },
          "status": {
            "type": "string",
            "description": "Status of channel",
            "example": "ACTIVE"
          }
        }
      },
      "Model 15": {
        "type": "object",
        "properties": {
          "id": {
            "type": "number",
            "description": "Id of response",
            "example": 1
          },
          "survey_id": {
            "type": "number",
            "description": "Id of Survey",
            "example": 2
          },
          "contact_id": {
            "type": "number"
          },
          "completed": {
            "type": "string",
            "description": "Status of the submission"
          },
          "channel_id": {
            "type": "number",
            "description": "Id of channel",
            "example": 3
          },
          "language": {
            "type": "string",
            "description": "Language of the response",
            "example": "en"
          },
          "completed_time": {
            "type": "string",
            "description": "Time at which response completed",
            "format": "date"
          },
          "answers": {
            "$ref": "#/components/schemas/responsesAnswersSchema"
          },
          "channel": {
            "$ref": "#/components/schemas/responsesChannelSchema"
          }
        }
      },
      "responsesSchema": {
        "type": "array",
        "items": {
          "$ref": "#/components//schemas/Model15"
        }
      },
      "getResponsesSchema": {
        "type": "object",
        "properties": {
          "has_next_page": {
            "type": "boolean",
            "example": true
          },
          "data": {
            "$ref": "#/components/schemas/responsesSchema"
          }
        }
      },
      "roleSchema": {
        "type": "object",
        "properties": {
          "id": {
            "type": "number",
            "description": "Role id",
            "example": 1
          },
          "name": {
            "type": "string",
            "description": "Role name",
            "example": "ACCOUNT_OWNER"
          },
          "label": {
            "type": "string",
            "description": "Role name",
            "example": "Account Owner"
          },
          "description": {
            "type": "string",
            "description": "Role description",
            "example": "Has Permissions over Everything."
          },
          "account_id": {
            "type": "number",
            "description": "Account Id",
            "example": 2
          },
          "created_at": {
            "type": "string",
            "format": "date"
          },
          "updated_at": {
            "type": "string",
            "format": "date"
          },
          "deleted_at": {
            "type": "string",
            "format": "date"
          }
        }
      },
      "rolesRoleSchema": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/roleSchema"
        }
      },
      "getRolesSchema": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/rolesRoleSchema"
          },
          "has_next_page": {
            "type": "boolean",
            "example": true
          }
        }
      },
      "teams": {
        "type": "array",
        "items": {
          "type": "number"
        }
      },
      "Model 16": {
        "type": "object",
        "properties": {
          "id": {
            "type": "number",
            "example": 1
          },
          "name": {
            "type": "string",
            "example": "My First Survey"
          },
          "surveType": {
            "type": "string"
          }
        }
      },
      "surveys": {
        "type": "array",
        "items": {
          "$ref": "#/components//schemas/Model16"
        }
      },
      "surveyFolderSchema": {
        "type": "object",
        "properties": {
          "id": {
            "type": "number",
            "example": 1
          },
          "name": {
            "maxLength": 100,
            "type": "string",
            "example": "General"
          },
          "description": {
            "maxLength": 200,
            "type": "string",
            "example": "The general Workspace"
          },
          "auto_created": {
            "type": "boolean"
          },
          "visibility": {
            "type": "string",
            "enum": ["ALL", "PRIVATE"]
          },
          "teams": {
            "$ref": "#/components/schemas/teams"
          },
          "surveys": {
            "$ref": "#/components/schemas/surveys"
          }
        }
      },
      "Model 17": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/surveyFolderSchema"
        }
      },
      "getSurveyFoldersResponseSchema": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components//schemas/Model17"
          }
        }
      },
      "surveySchema": {
        "type": "object",
        "properties": {
          "id": {
            "type": "number",
            "example": 1
          },
          "name": {
            "type": "string",
            "example": "Employee Satisfaction Survey"
          },
          "archived": {
            "type": "boolean",
            "example": false
          },
          "survey_type": {
            "type": "string",
            "example": "Conversational"
          },
          "created_at": {
            "type": "string",
            "format": "date"
          },
          "updated_at": {
            "type": "string",
            "format": "date"
          },
          "survey_folder_id": {
            "type": "number",
            "example": 10000034
          },
          "survey_folder_name": {
            "type": "string",
            "example": "General"
          }
        }
      },
      "getSurveysSurveySchema": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/surveySchema"
        }
      },
      "getSurveysSchema": {
        "type": "object",
        "properties": {
          "has_next_page": {
            "type": "boolean",
            "example": true
          },
          "data": {
            "$ref": "#/components/schemas/getSurveysSurveySchema"
          }
        }
      },
      "targetSchema": {
        "type": "object",
        "properties": {
          "targets": {
            "$ref": "#/components/schemas/getContactSchema"
          },
          "page": {
            "type": "number",
            "example": 1
          },
          "count": {
            "type": "number",
            "example": 1
          },
          "has_next_page": {
            "type": "boolean",
            "example": false
          }
        }
      },
      "getTargetsResponseSchema": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/targetSchema"
          }
        }
      },
      "teamSchema": {
        "type": "object",
        "properties": {
          "id": {
            "type": "number",
            "description": "Team id",
            "example": 1
          },
          "name": {
            "type": "string",
            "description": "Team name",
            "example": "Avengers"
          },
          "description": {
            "type": "string",
            "description": "Team description",
            "example": "Avengers team"
          },
          "type": {
            "type": "string",
            "description": "Type of team",
            "example": "SURVEY"
          },
          "account_id": {
            "type": "number",
            "description": "Account Id",
            "example": 2
          },
          "business_hour_id": {
            "type": "number"
          },
          "round_robin_enabled": {
            "type": "boolean",
            "description": "Round robin enabled",
            "example": true
          },
          "created_at": {
            "type": "string",
            "format": "date"
          },
          "updated_at": {
            "type": "string",
            "format": "date"
          },
          "deleted_at": {
            "type": "string",
            "format": "date"
          }
        }
      },
      "teamsTeamSchema": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/teamSchema"
        }
      },
      "getTeamsSchema": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/teamsTeamSchema"
          },
          "has_next_page": {
            "type": "boolean",
            "example": true
          }
        }
      },
      "ticketField": {
        "type": "object",
        "properties": {
          "id": {
            "type": "number",
            "description": "Ticket field ID",
            "example": 1
          },
          "name": {
            "type": "string",
            "description": "Ticket field name",
            "example": "Custom field 1"
          },
          "description": {
            "type": "string",
            "description": "Ticket field description"
          },
          "internal_name": {
            "type": "string",
            "description": "Ticket field internal name",
            "example": "Custom_field_1"
          },
          "type": {
            "type": "string",
            "description": "Ticket field type",
            "example": "Dropdown"
          },
          "is_default": {
            "type": "boolean",
            "example": true
          },
          "mandatory": {
            "type": "boolean",
            "example": true
          },
          "options": {
            "$ref": "#/components/schemas/getContactSchema"
          },
          "created_at": {
            "type": "string",
            "format": "date"
          },
          "updated_at": {
            "type": "string",
            "format": "date"
          }
        }
      },
      "getTicketFieldsSchema": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/ticketField"
        }
      },
      "Model 18": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/getTicketFieldsSchema"
          },
          "has_next_page": {
            "type": "boolean",
            "example": true
          }
        }
      },
      "ticketSchema": {
        "type": "object",
        "properties": {
          "id": {
            "type": "number",
            "description": "Ticket id",
            "example": 1
          },
          "requester": {
            "$ref": "#/components/schemas/properties"
          },
          "subject": {
            "maxLength": 200,
            "type": "string",
            "description": "Ticket subject",
            "example": "Ticket 1"
          },
          "description": {
            "type": "string",
            "description": "Ticket description",
            "example": "Ticket 1 description"
          },
          "description_html": {
            "type": "string",
            "description": "Ticket description",
            "example": "Ticket 1 description"
          },
          "priority": {
            "$ref": "#/components/schemas/properties"
          },
          "status": {
            "$ref": "#/components/schemas/properties"
          },
          "custom_fields": {
            "$ref": "#/components/schemas/properties"
          },
          "source": {
            "$ref": "#/components/schemas/properties"
          },
          "agent": {
            "$ref": "#/components/schemas/properties"
          },
          "team": {
            "$ref": "#/components/schemas/properties"
          },
          "created_at": {
            "type": "string",
            "format": "date"
          },
          "updated_at": {
            "type": "string",
            "format": "date"
          },
          "deleted_at": {
            "type": "string",
            "format": "date"
          },
          "first_response_due": {
            "type": "string",
            "format": "date"
          },
          "resolution_due": {
            "type": "string",
            "format": "date"
          }
        }
      },
      "ticketsSchema": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/ticketSchema"
        }
      },
      "getTicketsSchema": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/ticketsSchema"
          },
          "has_next_page": {
            "type": "boolean",
            "example": true
          }
        }
      },
      "userSchema": {
        "type": "object",
        "properties": {
          "id": {
            "type": "number",
            "description": "User Id",
            "example": 1
          },
          "name": {
            "type": "string",
            "description": "User name",
            "example": "Jane Doe"
          },
          "email": {
            "type": "string",
            "description": "User email",
            "example": "johndoe@example.com"
          },
          "phone": {
            "type": "string",
            "description": "User phone number",
            "example": "+1384843"
          },
          "admin": {
            "type": "boolean",
            "description": "Is user an admin",
            "example": false
          },
          "owner": {
            "type": "boolean",
            "description": "Is user owner of the account",
            "example": true
          },
          "agency_owner": {
            "type": "boolean",
            "description": "Is user an agency owner",
            "example": false
          },
          "verified": {
            "type": "boolean",
            "description": "Is user account verified?",
            "example": true
          },
          "role_id": {
            "type": "number",
            "description": "Id of the user role",
            "example": 2
          }
        }
      },
      "getUsersUserSchema": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/userSchema"
        }
      },
      "getUsersSchema": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/getUsersUserSchema"
          },
          "has_next_page": {
            "type": "boolean",
            "example": true
          }
        }
      },
      "getVariableSchema": {
        "type": "object",
        "properties": {
          "id": {
            "type": "number",
            "description": "Variable ID",
            "example": 1
          },
          "label": {
            "type": "string",
            "description": "Variable label",
            "example": "Ticket ID"
          },
          "name": {
            "type": "string",
            "description": "Unique identifier for variable",
            "example": "ticket_id"
          },
          "description": {
            "type": "string",
            "description": "Description for variable",
            "example": "Freshdesk ticket id"
          },
          "type": {
            "type": "string",
            "description": "Variable data type",
            "example": "STRING"
          }
        }
      },
      "Model 19": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/getVariableSchema"
        }
      },
      "getAllVariablesSchema": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components//schemas/Model19"
          },
          "has_next_page": {
            "type": "boolean"
          }
        }
      },
      "Model 20": {
        "type": "object",
        "properties": {
          "key": {
            "maxLength": 255,
            "type": "string",
            "example": "Content-Type"
          },
          "value": {
            "maxLength": 255,
            "type": "string",
            "example": "application/json"
          }
        }
      },
      "headers": {
        "type": "array",
        "items": {
          "$ref": "#/components//schemas/Model20"
        }
      },
      "Model 21": {
        "type": "object",
        "properties": {
          "payload": {
            "type": "string",
            "example": "{\n\n\"key1\": \"value1\",\n\"key1\":\"value1\"\n\n}"
          },
          "includePartialSubmission": {
            "type": "boolean",
            "example": true,
            "default": false
          }
        }
      },
      "webhookSchema": {
        "type": "object",
        "properties": {
          "id": {
            "type": "number",
            "example": 1
          },
          "name": {
            "maxLength": 255,
            "type": "string",
            "example": "Sample webhook"
          },
          "url": {
            "maxLength": 1000,
            "type": "string",
            "example": "https://webhook.com/data"
          },
          "eventType": {
            "maxLength": 255,
            "type": "string",
            "example": "submission_completed"
          },
          "description": {
            "maxLength": 1000,
            "type": "string",
            "example": "This is sample webhook"
          },
          "objectType": {
            "maxLength": 255,
            "type": "string",
            "example": "survey"
          },
          "httpMethod": {
            "maxLength": 255,
            "type": "string",
            "example": "POST"
          },
          "headers": {
            "$ref": "#/components/schemas/headers"
          },
          "properties": {
            "$ref": "#/components//schemas/Model21"
          },
          "disabled": {
            "type": "boolean",
            "example": false
          }
        }
      },
      "getWebhooksWebhookSchema": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/webhookSchema"
        }
      },
      "getwebhooksSchema": {
        "type": "object",
        "properties": {
          "has_next_page": {
            "type": "boolean",
            "example": true
          },
          "data": {
            "$ref": "#/components/schemas/getWebhooksWebhookSchema"
          }
        }
      },
      "Model 22": {
        "required": ["id", "name"],
        "type": "object",
        "properties": {
          "id": {
            "type": "number",
            "description": "ID of the Label"
          },
          "name": {
            "type": "string",
            "description": "Name of the label"
          }
        }
      },
      "Model 23": {
        "type": "array",
        "description": "List of Labels the contact has to be added into",
        "example": [
          {
            "id": 1,
            "name": "list1"
          },
          {
            "id": 2,
            "name": "list2"
          }
        ],
        "items": {
          "$ref": "#/components//schemas/Model22"
        }
      },
      "Model 24": {
        "required": ["active", "id", "unsubscribed", "unsubscribed_at"],
        "type": "object",
        "properties": {
          "id": {
            "type": "number",
            "description": "ID of the contact"
          },
          "name": {
            "type": "string",
            "description": "Full Name of contact",
            "example": "Jane Doe"
          },
          "email": {
            "type": "string",
            "description": "Email of contact",
            "example": "janedoe@surveysparrow.com",
            "x-format": {
              "email": true
            }
          },
          "active": {
            "type": "boolean",
            "description": "if true, indicates the contact will actively receive email and sms shares",
            "example": true
          },
          "unsubscribed": {
            "type": "boolean",
            "description": "if true, indicates that the contact is unsubscribed from receiving emails",
            "example": false
          },
          "unsubscribed_at": {
            "type": "string",
            "description": "when the contact has unsubscribed",
            "format": "date"
          },
          "phone": {
            "type": "string",
            "description": "Phone number of the contact",
            "example": "91234567833"
          },
          "mobile": {
            "type": "string",
            "description": "Mobile number of the contact",
            "example": "1653452783"
          },
          "jobTitle": {
            "type": "string",
            "description": "Job Title of the contact",
            "example": "Manager"
          },
          "list": {
            "$ref": "#/components//schemas/Model23"
          }
        }
      },
      "Model 25": {
        "required": ["event", "http_method", "id", "url"],
        "type": "object",
        "properties": {
          "id": {
            "type": "number",
            "description": "ID of the event",
            "example": 1
          },
          "event": {
            "type": "string",
            "description": "Name of the event",
            "example": "SURVEY_CREATED"
          },
          "url": {
            "type": "string",
            "description": "URL of audit webhook event",
            "example": "https://subscribed.com/data"
          },
          "http_method": {
            "type": "string",
            "description": "The HTTP method of the request (GET, PUT, POST, or DELETE).",
            "example": "POST"
          },
          "headers": {
            "$ref": "#/components/schemas/properties"
          }
        }
      },
      "events": {
        "type": "array",
        "items": {
          "$ref": "#/components//schemas/Model25"
        }
      },
      "Model 26": {
        "required": ["count"],
        "type": "object",
        "properties": {
          "has_next_page": {
            "type": "boolean",
            "description": "More items in the collection?",
            "example": true
          },
          "count": {
            "type": "number",
            "description": "Total Count of subscribed events",
            "example": 2
          },
          "events": {
            "$ref": "#/components/schemas/events"
          }
        }
      },
      "Model 27": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/channelSchema"
          }
        }
      },
      "contactListResponseSchema": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/contactListSchema"
          }
        }
      },
      "getReminderSchema": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/reminderSchema"
          }
        }
      },
      "appPlatformSchema": {
        "type": "object",
        "properties": {
          "id": {
            "type": "number",
            "example": 1
          },
          "data_fetch_address": {
            "type": "string",
            "example": "https://www.configured_platform.com"
          },
          "location": {
            "type": "string",
            "example": "Location 1"
          },
          "is_active": {
            "type": "boolean",
            "example": true
          },
          "platform_id": {
            "type": "number",
            "example": 1
          },
          "created_at": {
            "type": "string",
            "format": "date"
          },
          "updated_at": {
            "type": "string",
            "format": "date"
          }
        }
      },
      "getAppPlatformsAppPlatformSchema": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/appPlatformSchema"
        }
      },
      "getAppPlatformsSchema": {
        "type": "object",
        "properties": {
          "has_next_page": {
            "type": "boolean",
            "example": true
          },
          "data": {
            "$ref": "#/components/schemas/getAppPlatformsAppPlatformSchema"
          }
        }
      },
      "platformSchema": {
        "type": "object",
        "properties": {
          "id": {
            "type": "number",
            "example": 1
          },
          "label": {
            "type": "string",
            "example": "Agoda"
          },
          "type": {
            "type": "string",
            "example": "SCRAPING"
          },
          "logo_url": {
            "type": "string",
            "example": "https://www.log_url.com/agoda"
          }
        }
      },
      "getPlatformsPlatformSchema": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/platformSchema"
        }
      },
      "getPlatformsSchema": {
        "type": "object",
        "properties": {
          "has_next_page": {
            "type": "boolean",
            "example": true
          },
          "data": {
            "$ref": "#/components/schemas/getPlatformsPlatformSchema"
          }
        }
      },
      "reviewSchema": {
        "type": "object",
        "properties": {
          "id": {
            "type": "number",
            "example": 1
          },
          "rating": {
            "type": "number",
            "example": 5
          },
          "review_title": {
            "type": "string",
            "example": "Good Service"
          },
          "review_content": {
            "type": "string",
            "example": "Outstanding service, consistently exceeding expectations"
          },
          "review_date": {
            "type": "string",
            "format": "date"
          },
          "reviewer_name": {
            "type": "string",
            "example": "Sam"
          },
          "reviewer_photo_url": {
            "type": "string",
            "example": "https://www.log_url.com/agoda"
          },
          "app_platform_id": {
            "type": "number",
            "example": 5
          }
        }
      },
      "getReviewsReviewSchema": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/reviewSchema"
        }
      },
      "getReviewsSchema": {
        "type": "object",
        "properties": {
          "has_next_page": {
            "type": "boolean",
            "example": true
          },
          "data": {
            "$ref": "#/components/schemas/getReviewsReviewSchema"
          }
        }
      },
      "Model 28": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components//schemas/Model15"
          }
        }
      },
      "Model 29": {
        "required": [
          "approvals",
          "approved",
          "declined",
          "email",
          "id",
          "name",
          "pending"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "number",
            "description": "Id of the approver"
          },
          "name": {
            "type": "string",
            "description": "Name of the approver"
          },
          "email": {
            "type": "string",
            "description": "Email of the approver",
            "x-format": {
              "email": true
            }
          },
          "joined_portal": {
            "type": "boolean",
            "default": false
          },
          "approvals": {
            "type": "number"
          },
          "approved": {
            "type": "number"
          },
          "declined": {
            "type": "number"
          },
          "pending": {
            "type": "number"
          }
        }
      },
      "Model 30": {
        "type": "array",
        "items": {
          "$ref": "#/components//schemas/Model29"
        }
      },
      "getApproversSchema": {
        "required": ["count", "limit", "page"],
        "type": "object",
        "properties": {
          "list": {
            "$ref": "#/components//schemas/Model30"
          },
          "count": {
            "type": "number"
          },
          "limit": {
            "maximum": 100,
            "minimum": 1,
            "type": "number"
          },
          "page": {
            "minimum": 1,
            "type": "number"
          }
        }
      },
      "Model 31": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/getApproversSchema"
          }
        }
      },
      "Model 32": {
        "required": ["id", "name"],
        "type": "object",
        "properties": {
          "id": {
            "type": "number",
            "description": "Id of the Relation"
          },
          "name": {
            "type": "string",
            "description": "Name of the relation"
          },
          "label": {
            "type": "string",
            "description": "Label of the relation"
          }
        }
      },
      "Model 33": {
        "type": "array",
        "items": {
          "$ref": "#/components//schemas/Model32"
        }
      },
      "getRelationsSchema": {
        "type": "object",
        "properties": {
          "list": {
            "$ref": "#/components//schemas/Model33"
          }
        }
      },
      "Model 34": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/getRelationsSchema"
          }
        }
      },
      "Model 35": {
        "type": "object",
        "properties": {
          "self_evaluation": {
            "type": "boolean"
          },
          "self_nomination": {
            "type": "boolean"
          },
          "require_approval": {
            "type": "boolean"
          }
        }
      },
      "approver": {
        "required": ["email", "id", "name"],
        "type": "object",
        "properties": {
          "id": {
            "type": "number",
            "description": "Id of the approver"
          },
          "name": {
            "type": "string",
            "description": "Name of the approver"
          },
          "email": {
            "type": "string",
            "description": "Email of the approver",
            "x-format": {
              "email": true
            }
          },
          "joined_portal": {
            "type": "boolean",
            "default": false
          }
        }
      },
      "Model 36": {
        "required": ["email", "id", "name"],
        "type": "object",
        "properties": {
          "id": {
            "type": "number",
            "description": "Id of the approver"
          },
          "name": {
            "type": "string",
            "description": "Name of the approver"
          },
          "email": {
            "type": "string",
            "description": "Email of the approver",
            "x-format": {
              "email": true
            }
          },
          "joined_portal": {
            "type": "boolean",
            "default": false
          },
          "properties": {
            "$ref": "#/components//schemas/Model35"
          },
          "approver": {
            "$ref": "#/components/schemas/approver"
          }
        }
      },
      "Model 37": {
        "type": "array",
        "items": {
          "$ref": "#/components//schemas/Model36"
        }
      },
      "getSubjectsSchema": {
        "required": ["count", "limit", "page"],
        "type": "object",
        "properties": {
          "list": {
            "$ref": "#/components//schemas/Model37"
          },
          "count": {
            "type": "number"
          },
          "limit": {
            "maximum": 100,
            "minimum": 1,
            "type": "number"
          },
          "page": {
            "minimum": 1,
            "type": "number"
          }
        }
      },
      "Model 38": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/getSubjectsSchema"
          }
        }
      },
      "getSurveyFolderResponseSchema": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/surveyFolderSchema"
          }
        }
      },
      "getSurveySchema": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/surveySchema"
          }
        }
      },
      "getTicketFieldSchema": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/ticketField"
          }
        }
      },
      "getTicketSchema": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/ticketSchema"
          }
        }
      },
      "Model 39": {
        "required": ["translationFile"],
        "type": "object",
        "properties": {
          "translationFile": {
            "type": "string",
            "description": "Signed URL for the translation file",
            "example": "https://s3.amazonaws.com/surveysparrow/translations/123456-en.xlsx"
          }
        },
        "description": "Response data"
      },
      "Model 40": {
        "required": ["data"],
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components//schemas/Model39"
          }
        }
      },
      "getUserSchema": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/userSchema"
          }
        }
      },
      "survey": {
        "required": ["id", "name", "survey_type"],
        "type": "object",
        "properties": {
          "id": {
            "type": "number",
            "description": "id of survey",
            "example": 1
          },
          "name": {
            "type": "string",
            "description": "name of survey",
            "example": "Test Survey"
          },
          "survey_type": {
            "type": "string",
            "description": "type of survey",
            "example": "ClassicForm",
            "enum": [
              "Conversational",
              "Poll",
              "ClassicForm",
              "Kiosk",
              "OfflineApp",
              "NPS",
              "NPSChat",
              "CES",
              "CESChat",
              "CSAT",
              "CSATChat",
              "Employee360"
            ]
          }
        },
        "description": "survey details"
      },
      "share": {
        "required": ["id", "name"],
        "type": "object",
        "properties": {
          "id": {
            "type": "number",
            "description": "id of share channel",
            "example": 1
          },
          "name": {
            "type": "string",
            "description": "name of share channel",
            "example": "Test Share"
          }
        },
        "description": "share details"
      },
      "submission": {
        "required": ["id", "state"],
        "type": "object",
        "properties": {
          "id": {
            "type": "number",
            "description": "id of submission",
            "example": 1
          },
          "state": {
            "type": "string",
            "description": "state of submission",
            "example": "COMPLETED",
            "enum": ["STARTED", "COMPLETED"]
          }
        },
        "description": "submission details"
      },
      "Model 41": {
        "required": ["sent_date"],
        "type": "object",
        "properties": {
          "sent_date": {
            "type": "string",
            "description": "Date of survey share",
            "format": "date"
          },
          "survey": {
            "$ref": "#/components/schemas/survey"
          },
          "share": {
            "$ref": "#/components/schemas/share"
          },
          "submission": {
            "$ref": "#/components/schemas/submission"
          }
        }
      },
      "responded": {
        "type": "array",
        "description": "array of responded shares",
        "items": {
          "$ref": "#/components//schemas/Model41"
        }
      },
      "Model 42": {
        "required": ["id", "name", "survey_type"],
        "type": "object",
        "properties": {
          "id": {
            "type": "number",
            "description": "id of survey",
            "example": 1
          },
          "name": {
            "type": "string",
            "description": "name of share channel",
            "example": "Test Survey"
          },
          "survey_type": {
            "type": "string",
            "description": "type of survey",
            "example": "ClassicForm",
            "enum": [
              "Conversational",
              "Poll",
              "ClassicForm",
              "Kiosk",
              "OfflineApp",
              "NPS",
              "NPSChat",
              "CES",
              "CESChat",
              "CSAT",
              "CSATChat",
              "Employee360"
            ]
          }
        },
        "description": "survey details"
      },
      "Model 43": {
        "required": ["sent_date", "submission"],
        "type": "object",
        "properties": {
          "sent_date": {
            "type": "string",
            "description": "Date of survey share",
            "format": "date"
          },
          "survey": {
            "$ref": "#/components//schemas/Model42"
          },
          "share": {
            "$ref": "#/components/schemas/share"
          },
          "submission": {
            "type": "string",
            "description": "submission will be null as there is no submission"
          }
        }
      },
      "pendingResponse": {
        "type": "array",
        "description": "array of shares pendig response",
        "items": {
          "$ref": "#/components//schemas/Model43"
        }
      },
      "Model 44": {
        "required": ["hasNextPage"],
        "type": "object",
        "properties": {
          "responded": {
            "$ref": "#/components/schemas/responded"
          },
          "pendingResponse": {
            "$ref": "#/components/schemas/pendingResponse"
          },
          "hasNextPage": {
            "type": "boolean",
            "example": false
          }
        }
      },
      "getAppPlatformSchema": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/appPlatformSchema"
          }
        }
      },
      "getPlatformSchema": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/platformSchema"
          }
        }
      },
      "getReviewSchema": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/reviewSchema"
          }
        }
      },
      "JobStatusResponseSchema": {
        "required": ["status"],
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "description": "Current status of the job"
          },
          "data": {
            "type": "string",
            "description": "Results of the job, if available"
          }
        }
      },
      "Model 45": {
        "required": ["email", "id", "name", "status"],
        "type": "object",
        "properties": {
          "id": {
            "type": "number",
            "description": "Id of the approver"
          },
          "name": {
            "type": "string",
            "description": "Name of the approver"
          },
          "email": {
            "type": "string",
            "description": "Email of the approver",
            "x-format": {
              "email": true
            }
          },
          "status": {
            "type": "string"
          },
          "joined_portal": {
            "type": "boolean",
            "default": false
          }
        }
      },
      "Model 46": {
        "type": "array",
        "items": {
          "$ref": "#/components//schemas/Model45"
        }
      },
      "getSubjectEvaluatorsSchema": {
        "required": ["count", "limit", "page"],
        "type": "object",
        "properties": {
          "list": {
            "$ref": "#/components//schemas/Model46"
          },
          "count": {
            "type": "number"
          },
          "limit": {
            "maximum": 100,
            "minimum": 1,
            "type": "number"
          },
          "page": {
            "minimum": 1,
            "type": "number"
          }
        }
      },
      "Model 47": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/getSubjectEvaluatorsSchema"
          }
        }
      },
      "Model 48": {
        "type": "object",
        "properties": {
          "id": {
            "type": "number",
            "description": "Attachment id",
            "example": 1
          },
          "name": {
            "type": "string",
            "description": "Attachment name",
            "example": "file.txt"
          },
          "url": {
            "type": "string",
            "description": "Attachment url",
            "example": "https://example.com/file.txt"
          },
          "type": {
            "type": "string",
            "description": "Attachment type",
            "example": "text/plain"
          }
        }
      },
      "attachments": {
        "type": "array",
        "description": "Attachments",
        "items": {
          "$ref": "#/components//schemas/Model48"
        }
      },
      "tiketCommentSchema": {
        "type": "object",
        "properties": {
          "id": {
            "type": "number",
            "description": "Comment id",
            "example": 1
          },
          "body": {
            "type": "string",
            "description": "Body of the comment",
            "example": "Random text"
          },
          "ticket_id": {
            "type": "number",
            "description": "Ticket id",
            "example": 2
          },
          "private": {
            "type": "boolean",
            "description": "Comment is public or private"
          },
          "agent_id": {
            "type": "number",
            "description": "User ID"
          },
          "requester_id": {
            "type": "number",
            "description": "Contact ID"
          },
          "created_at": {
            "type": "string",
            "format": "date"
          },
          "attachments": {
            "$ref": "#/components/schemas/attachments"
          }
        }
      },
      "getTicketCommentsSchema": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/tiketCommentSchema"
        }
      },
      "Model 49": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/getTicketCommentsSchema"
          },
          "has_next_page": {
            "type": "boolean",
            "example": true
          }
        }
      },
      "Model 50": {
        "required": ["status"],
        "type": "object",
        "properties": {
          "status": {
            "type": "string"
          },
          "result": {
            "$ref": "#/components/schemas/properties"
          },
          "message": {
            "type": "string",
            "x-alternatives": [
              {
                "type": "string"
              }
            ]
          }
        }
      },
      "Model 51": {
        "type": "array",
        "items": {
          "$ref": "#/components//schemas/Model50"
        }
      },
      "Model 52": {
        "required": ["data", "status"],
        "type": "object",
        "properties": {
          "status": {
            "type": "string"
          },
          "data": {
            "$ref": "#/components//schemas/Model51"
          }
        }
      },
      "Model 53": {
        "type": "object",
        "properties": {
          "error": {
            "type": "string",
            "enum": ["Share not found"]
          }
        }
      },
      "email": {
        "type": "object",
        "properties": {
          "subject": {
            "type": "string"
          },
          "body": {
            "type": "string"
          }
        }
      },
      "followUp": {
        "type": "object",
        "properties": {
          "default": {
            "type": "string"
          },
          "advanced": {
            "type": "boolean"
          },
          "highEffort": {
            "type": "string"
          },
          "neutral": {
            "type": "string"
          },
          "lowEffort": {
            "type": "string"
          }
        }
      },
      "Model 54": {
        "required": ["surveyName"],
        "type": "object",
        "properties": {
          "surveyName": {
            "type": "string"
          },
          "surveyType": {
            "type": "string",
            "enum": ["CESChat", "CES"]
          },
          "email": {
            "$ref": "#/components/schemas/email"
          },
          "followUp": {
            "$ref": "#/components/schemas/followUp"
          },
          "thankYou": {
            "$ref": "#/components/schemas/followUp"
          }
        }
      },
      "Model 55": {
        "required": ["name"],
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          }
        }
      },
      "Model 56": {
        "type": "array",
        "description": "ID of Labels the contact has to be added into ?",
        "example": [],
        "items": {
          "type": "number"
        }
      },
      "Model 57": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Full Name of contact",
            "example": "Jane Doe"
          },
          "phone": {
            "type": "string",
            "description": "Phone number of the contact",
            "example": "91234567833"
          },
          "mobile": {
            "type": "string",
            "description": "Mobile number of the contact",
            "example": "1653452783"
          },
          "email": {
            "type": "string",
            "description": "Email of contact",
            "example": "janedoe@surveysparrow.com",
            "x-alternatives": [
              {
                "type": "string",
                "description": "Email of contact",
                "example": "janedoe@surveysparrow.com",
                "x-format": {
                  "email": true
                }
              },
              {
                "type": "string",
                "description": "Email of contact",
                "example": "janedoe@surveysparrow.com",
                "x-format": {
                  "email": true
                }
              }
            ],
            "x-format": {
              "email": true
            }
          },
          "jobTitle": {
            "type": "string",
            "description": "Job Title of the contact",
            "example": "Manager"
          },
          "list": {
            "$ref": "#/components//schemas/Model56"
          },
          "contact_type": {
            "type": "string",
            "description": "Type of contact",
            "default": "contact",
            "enum": ["contact", "employee"]
          }
        }
      },
      "Model 58": {
        "type": "array",
        "description": "ID of Labels the contact has to be added into. Should we allow id or list name ?",
        "example": [],
        "items": {
          "type": "number"
        }
      },
      "Model 59": {
        "required": ["active", "id", "unsubscribed"],
        "type": "object",
        "properties": {
          "id": {
            "type": "number",
            "description": "ID of the contact",
            "example": 101
          },
          "active": {
            "type": "boolean",
            "description": "if true, indicates the contact will actively receive email and sms shares",
            "example": true
          },
          "unsubscribed": {
            "type": "boolean",
            "description": "if true, indicates that the contact is unsubscribed from receiving emails"
          },
          "fullName": {
            "type": "string",
            "description": "Full Name of contact",
            "example": "Jane Doe"
          },
          "mobile": {
            "type": "string",
            "description": "Mobile number of the contact",
            "example": "1653452783"
          },
          "email": {
            "type": "string",
            "description": "Email of contact",
            "example": "janedoe@surveysparrow.com",
            "x-alternatives": [
              {
                "type": "string",
                "description": "Email of contact",
                "example": "janedoe@surveysparrow.com",
                "x-format": {
                  "email": true
                }
              },
              {
                "type": "string",
                "description": "Email of contact",
                "example": "janedoe@surveysparrow.com",
                "x-format": {
                  "email": true
                }
              }
            ],
            "x-format": {
              "email": true
            }
          },
          "jobTitle": {
            "type": "string",
            "description": "Job Title of the contact",
            "example": "Manager"
          },
          "list": {
            "$ref": "#/components//schemas/Model58"
          }
        }
      },
      "Model 60": {
        "type": "object",
        "properties": {
          "default": {
            "type": "string"
          },
          "advanced": {
            "type": "boolean"
          },
          "dissatisfied": {
            "type": "string"
          },
          "neutral": {
            "type": "string"
          },
          "satisfied": {
            "type": "string"
          }
        }
      },
      "Model 61": {
        "required": ["surveyName"],
        "type": "object",
        "properties": {
          "surveyName": {
            "type": "string"
          },
          "surveyType": {
            "type": "string",
            "enum": ["CSATChat", "CSAT"]
          },
          "email": {
            "$ref": "#/components/schemas/email"
          },
          "followUp": {
            "$ref": "#/components//schemas/Model60"
          },
          "thankYou": {
            "$ref": "#/components//schemas/Model60"
          }
        }
      },
      "Model 62": {
        "type": "object",
        "properties": {
          "default": {
            "type": "string"
          },
          "advanced": {
            "type": "boolean"
          },
          "detractors": {
            "type": "string"
          },
          "passives": {
            "type": "string"
          },
          "promoters": {
            "type": "string"
          }
        }
      },
      "Model 63": {
        "required": ["surveyName"],
        "type": "object",
        "properties": {
          "surveyName": {
            "type": "string"
          },
          "surveyType": {
            "type": "string",
            "enum": ["NPSChat", "NPS"]
          },
          "email": {
            "$ref": "#/components/schemas/email"
          },
          "followUp": {
            "$ref": "#/components//schemas/Model62"
          },
          "thankYou": {
            "$ref": "#/components//schemas/Model62"
          }
        }
      },
      "user": {
        "required": ["email", "name", "strategy"],
        "type": "object",
        "properties": {
          "email": {
            "maxLength": 200,
            "minLength": 3,
            "type": "string",
            "description": "The email address of user",
            "x-format": {
              "email": true
            }
          },
          "name": {
            "maxLength": 200,
            "minLength": 1,
            "type": "string",
            "description": "The name of user"
          },
          "phone": {
            "maxLength": 200,
            "type": "string",
            "description": "The phone no of user"
          },
          "password": {
            "maxLength": 200,
            "minLength": 5,
            "type": "string",
            "description": "The password of user, in case of oauth users pass a random string as password, it will be ignored anyway"
          },
          "strategy": {
            "type": "string",
            "description": "Password strategy of user",
            "enum": ["password", "google", "linkedin"]
          }
        }
      },
      "Model 64": {
        "required": ["accountName", "companyName"],
        "type": "object",
        "properties": {
          "accountName": {
            "maxLength": 200,
            "minLength": 2,
            "type": "string",
            "description": "The name of the account to be created"
          },
          "companyName": {
            "maxLength": 200,
            "minLength": 2,
            "type": "string",
            "description": "The name of the account to be created"
          },
          "user": {
            "$ref": "#/components/schemas/user"
          },
          "timeZone": {
            "maxLength": 200,
            "minLength": 3,
            "type": "string"
          },
          "language": {
            "maxLength": 255,
            "minLength": 3,
            "type": "string"
          },
          "template": {
            "type": "number"
          },
          "ssTrackerLocation": {
            "type": "string"
          },
          "ssTrackerReferrer": {
            "type": "string"
          },
          "gSuiteDomain": {
            "type": "string"
          },
          "referral": {
            "type": "string"
          },
          "accountType": {
            "type": "string",
            "description": "Account creation can be from ratethemeeting"
          }
        }
      },
      "Model 65": {
        "type": "object",
        "properties": {
          "preAdded": {
            "type": "boolean"
          },
          "message": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "redirectBoolean": {
            "type": "boolean"
          },
          "redirectMultiBoolean": {
            "type": "boolean"
          },
          "redirect": {
            "$ref": "#/components/schemas/properties"
          },
          "branding": {
            "type": "boolean"
          }
        }
      },
      "thankyou_json": {
        "type": "array",
        "items": {
          "$ref": "#/components//schemas/Model65"
        }
      },
      "Model 66": {
        "required": ["name", "surveyType"],
        "type": "object",
        "properties": {
          "name": {
            "maxLength": 200,
            "minLength": 1,
            "type": "string"
          },
          "surveyType": {
            "type": "string",
            "enum": ["ClassicForm"]
          },
          "workspace_id": {
            "type": "number"
          },
          "visibility": {
            "type": "string",
            "default": "Public",
            "enum": ["Public", "Mine"]
          },
          "theme_id": {
            "type": "number"
          },
          "primaryLanguage": {
            "type": "string"
          },
          "welcomeScreenYesButtonText": {
            "maxLength": 250,
            "type": "string"
          },
          "welcomeText": {
            "type": "string"
          },
          "welcomeDescription": {
            "type": "string"
          },
          "thankyou_json": {
            "$ref": "#/components/schemas/thankyou_json"
          }
        }
      },
      "Model 67": {
        "required": ["name"],
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "x-convert": {
              "trim": true
            }
          },
          "type": {
            "type": "string",
            "description": "Team type, if not provided will be \"SURVEY\" by default",
            "default": "SURVEY",
            "enum": ["SURVEY", "TICKET"]
          },
          "userIds": {
            "$ref": "#/components/schemas/teams"
          }
        }
      },
      "Model 68": {
        "required": ["email", "name", "role_id"],
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "x-convert": {
              "trim": true
            }
          },
          "email": {
            "type": "string",
            "x-format": {
              "email": true
            },
            "x-convert": {
              "trim": true
            }
          },
          "role_id": {
            "type": "number"
          }
        }
      },
      "Model 69": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/properties"
        }
      },
      "Model 70": {
        "required": ["httpMethod", "url"],
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "url": {
            "type": "string"
          },
          "eventType": {
            "type": "string",
            "default": "submission_completed"
          },
          "objectType": {
            "type": "string",
            "default": "survey"
          },
          "objectId": {
            "type": "number"
          },
          "surveyId": {
            "type": "number"
          },
          "httpMethod": {
            "type": "string",
            "enum": ["POST", "GET", "PATCH", "PUT", "DELETE"]
          },
          "headers": {
            "$ref": "#/components//schemas/Model69"
          },
          "type": {
            "type": "string",
            "default": "application"
          },
          "payload": {
            "$ref": "#/components/schemas/properties"
          }
        }
      },
      "Model 71": {
        "required": ["name", "visibility"],
        "type": "object",
        "properties": {
          "teams": {
            "$ref": "#/components/schemas/teams"
          },
          "users": {
            "$ref": "#/components/schemas/teams"
          },
          "name": {
            "type": "string",
            "x-convert": {
              "trim": true
            }
          },
          "visibility": {
            "type": "string",
            "enum": ["ALL", "PRIVATE"]
          }
        }
      },
      "Model 72": {
        "type": "object",
        "properties": {
          "email": {
            "maxLength": 255,
            "type": "string",
            "description": "Email of contact. Can be optional only if anonymous contact feature is enabled.",
            "x-alternatives": [
              {
                "type": "string",
                "description": "Email of contact. Can be optional only if anonymous contact feature is enabled.",
                "maxLength": 255,
                "x-format": {
                  "email": true
                }
              },
              {
                "type": "string"
              }
            ],
            "x-format": {
              "email": true
            }
          },
          "mobile": {
            "type": "string",
            "description": "Mobile number in E.164 format, required when type is SMS",
            "x-alternatives": [
              {
                "type": "string",
                "description": "Mobile number in E.164 format, required when type is SMS"
              },
              {
                "type": "string"
              }
            ]
          },
          "referenceId": {
            "maxLength": 255,
            "type": "string",
            "description": "Reference ID of the anonymous contact",
            "example": "123456"
          },
          "variables": {
            "$ref": "#/components/schemas/properties"
          }
        }
      },
      "Model 73": {
        "maxItems": 20000,
        "minItems": 1,
        "type": "array",
        "items": {
          "$ref": "#/components//schemas/Model72"
        }
      },
      "contact_list_ids": {
        "maxItems": 20,
        "minItems": 1,
        "type": "array",
        "items": {
          "type": "number"
        }
      },
      "h": {
        "minItems": 1,
        "type": "array",
        "items": {
          "maximum": 23,
          "minimum": 0,
          "type": "number"
        }
      },
      "m": {
        "minItems": 1,
        "type": "array",
        "items": {
          "maximum": 60,
          "minimum": 0,
          "type": "number"
        }
      },
      "d": {
        "minItems": 1,
        "type": "array",
        "items": {
          "type": "string",
          "enum": ["0", "1", "2", "3", "4", "5", "6", "7"]
        }
      },
      "config": {
        "required": ["d", "h", "m"],
        "type": "object",
        "properties": {
          "h": {
            "$ref": "#/components/schemas/h"
          },
          "m": {
            "$ref": "#/components/schemas/m"
          },
          "d": {
            "$ref": "#/components/schemas/d"
          }
        }
      },
      "D": {
        "minItems": 1,
        "type": "array",
        "items": {
          "type": "string",
          "enum": [
            "0",
            "1",
            "2",
            "3",
            "4",
            "5",
            "6",
            "7",
            "8",
            "9",
            "10",
            "11",
            "12",
            "13",
            "14",
            "15",
            "16",
            "17",
            "18",
            "19",
            "20",
            "21",
            "22",
            "23",
            "24",
            "25",
            "26",
            "27",
            "28",
            "29",
            "30",
            "31"
          ]
        }
      },
      "Model 74": {
        "required": ["D", "h", "m"],
        "type": "object",
        "properties": {
          "h": {
            "$ref": "#/components/schemas/h"
          },
          "m": {
            "$ref": "#/components/schemas/m"
          },
          "D": {
            "$ref": "#/components/schemas/D"
          }
        }
      },
      "M": {
        "minItems": 1,
        "type": "array",
        "items": {
          "type": "string",
          "enum": [
            "0",
            "1",
            "2",
            "3",
            "4",
            "5",
            "6",
            "7",
            "8",
            "9",
            "10",
            "11",
            "12"
          ]
        }
      },
      "Model 75": {
        "required": ["D", "M", "h", "m"],
        "type": "object",
        "properties": {
          "h": {
            "$ref": "#/components/schemas/h"
          },
          "m": {
            "$ref": "#/components/schemas/m"
          },
          "D": {
            "$ref": "#/components/schemas/D"
          },
          "M": {
            "$ref": "#/components/schemas/M"
          }
        }
      },
      "schedule": {
        "required": ["config", "frequency"],
        "type": "object",
        "properties": {
          "frequency": {
            "type": "string",
            "enum": ["WEEKLY", "MONTHLY", "YEARLY"]
          },
          "config": {
            "$ref": "#/components/schemas/config"
          }
        }
      },
      "first_nps": {
        "required": ["contact_property_id", "delay", "unit"],
        "type": "object",
        "properties": {
          "delay": {
            "minimum": 1,
            "type": "number",
            "description": "Delay after which first survey to be shared",
            "x-constraint": {
              "positive": true
            }
          },
          "unit": {
            "type": "string",
            "description": "Unit of the delay",
            "enum": ["Days", "Months", "Hours"]
          },
          "contact_property_id": {
            "type": "number",
            "description": "Id of the contact property, only DATE type contact properties are allowed"
          }
        }
      },
      "relative_schedule": {
        "required": ["after_first_nps_schedule"],
        "type": "object",
        "properties": {
          "first_nps": {
            "$ref": "#/components/schemas/first_nps"
          },
          "after_first_nps_schedule": {
            "type": "string",
            "description": "Repetition of survey sharing after first share",
            "enum": [
              "NONE",
              "EVERY_45_DAYS",
              "EVERY_3_MONTHS",
              "EVERY_6_MONTHS",
              "EVERY_1_YEAR"
            ]
          }
        }
      },
      "Model 76": {
        "required": ["custom_footer", "embed_first_question"],
        "type": "object",
        "properties": {
          "embed_first_question": {
            "type": "boolean"
          },
          "custom_footer": {
            "type": "boolean"
          },
          "custom_footer_value": {
            "type": "string"
          },
          "preview_text": {
            "type": "string",
            "description": "Pre-header of the Email"
          }
        },
        "description": "Properties of the reminder"
      },
      "Model 77": {
        "required": ["frequency", "interval", "type"],
        "type": "object",
        "properties": {
          "subject": {
            "type": "string",
            "description": "Subject of the reminder, both {company_name} and {survey_link} variables are required when channel type is SMS"
          },
          "body": {
            "type": "string",
            "description": "Body of the reminder. Not required for SMS channel type. Note:Placeholders are supported for Customer Experience (CX) surveys only."
          },
          "type": {
            "type": "string",
            "description": "Type of the responders",
            "enum": ["NOT_RESPONDED", "PARTIALLY_RESPONDED"]
          },
          "interval": {
            "minimum": 1,
            "type": "number",
            "description": "Delay after which reminder to be sent",
            "x-constraint": {
              "positive": true
            }
          },
          "frequency": {
            "type": "string",
            "description": "Unit of the delay",
            "enum": ["Days", "Weeks", "Months"]
          },
          "properties": {
            "$ref": "#/components//schemas/Model76"
          }
        }
      },
      "reminders": {
        "type": "array",
        "description": "Array of reminders",
        "items": {
          "$ref": "#/components//schemas/Model77"
        }
      },
      "sms": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "description": "Message of sms, both {company_name} and {survey_link} variables are required."
          },
          "twilio_consent_agreed": {
            "type": "boolean",
            "description": "For using SurveySparrow message service you need to agree the consent"
          },
          "target_id": {
            "type": "number",
            "description": "Id of the custom target, default target will be taken if not given"
          }
        },
        "description": "Only required when type is SMS"
      },
      "Model 78": {
        "required": ["embed_first_question", "show_surveysparrow_branding"],
        "type": "object",
        "properties": {
          "body": {
            "type": "string",
            "description": "Body of the email"
          },
          "from_address": {
            "type": "string",
            "description": "From address of the email",
            "x-format": {
              "email": {
                "minDomainAtoms": 2
              }
            }
          },
          "embed_first_question": {
            "type": "boolean"
          },
          "custom_footer": {
            "type": "boolean",
            "default": false
          },
          "custom_footer_value": {
            "type": "string",
            "description": "Custom footer value"
          },
          "show_surveysparrow_branding": {
            "type": "boolean",
            "description": "Set true to show SurveySparrow branding on email"
          },
          "reply_to": {
            "type": "string",
            "description": "Reply to address of the email",
            "x-format": {
              "email": {
                "minDomainAtoms": 2
              }
            }
          },
          "preview_text": {
            "type": "string",
            "description": "Pre-header of the Email"
          }
        }
      },
      "Model 79": {
        "required": ["subject"],
        "type": "object",
        "properties": {
          "subject": {
            "type": "string",
            "description": "Subject of the email"
          },
          "properties": {
            "$ref": "#/components//schemas/Model78"
          },
          "theme_id": {
            "type": "number",
            "description": "Id of the email theme"
          }
        }
      },
      "link": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string",
            "description": "Title of the weblink channel"
          },
          "description": {
            "type": "string",
            "description": "Description of the web link channel"
          },
          "image_link": {
            "type": "string",
            "description": "Image link of the weblink channel, provide link for a JPEG or PNG image. Get best results when the image is 1200 x 630 pixels"
          }
        }
      },
      "offline": {
        "type": "object",
        "properties": {
          "animation_direction": {
            "type": "string",
            "description": "Animation Direction of the offline channel",
            "enum": ["Horizontal", "Vertical"]
          }
        }
      },
      "Model 80": {
        "required": ["name", "survey_id", "type"],
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "description": "Type of the channel",
            "enum": ["EMAIL", "SMS", "LINK", "OFFLINE"]
          },
          "mode": {
            "type": "string",
            "description": "Mode of the channel, not required when type is LINK and OFFLINE",
            "default": "BLAST",
            "enum": ["BLAST", "RECURRING", "RELATIVE_RECURRING"]
          },
          "channel_id": {
            "type": "number",
            "description": "Deprecated, please use update channel instead"
          },
          "contacts": {
            "$ref": "#/components//schemas/Model73"
          },
          "contact_list_ids": {
            "$ref": "#/components/schemas/contact_list_ids"
          },
          "variables": {
            "$ref": "#/components/schemas/properties"
          },
          "survey_id": {
            "type": "number",
            "description": "Id of the survey"
          },
          "name": {
            "type": "string",
            "description": "Name of the channel"
          },
          "send_after_date": {
            "type": "string",
            "description": "Timestamp at which survey should be sent",
            "format": "date",
            "x-alternatives": [
              {
                "type": "string",
                "format": "date",
                "description": "Timestamp at which survey should be sent"
              }
            ]
          },
          "send_after_days": {
            "minimum": 1,
            "type": "number",
            "description": "Number of days after which survey should be shared",
            "x-alternatives": [
              {
                "type": "number",
                "description": "Number of days after which survey should be shared",
                "minimum": 1
              }
            ]
          },
          "schedule": {
            "$ref": "#/components/schemas/schedule"
          },
          "relative_schedule": {
            "$ref": "#/components/schemas/relative_schedule"
          },
          "reminders": {
            "$ref": "#/components/schemas/reminders"
          },
          "sms": {
            "$ref": "#/components/schemas/sms"
          },
          "email": {
            "$ref": "#/components//schemas/Model79"
          },
          "link": {
            "$ref": "#/components/schemas/link"
          },
          "offline": {
            "$ref": "#/components/schemas/offline"
          },
          "ignore_throttled_contacts": {
            "type": "boolean",
            "description": "If set to true, survey will be shared even if throttling is met",
            "default": true
          },
          "accept_anonymous_response": {
            "type": "boolean",
            "description": "Only applicable for CX survey types",
            "default": false
          }
        }
      },
      "Model 81": {
        "required": ["name"],
        "type": "object",
        "properties": {
          "name": {
            "maxLength": 255,
            "type": "string"
          },
          "description": {
            "maxLength": 1000,
            "type": "string"
          }
        }
      },
      "Model 82": {
        "required": ["label", "type"],
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "NUMBER",
              "DOUBLE",
              "EMAIL",
              "SINGLE_LINE_TEXT",
              "MULTI_LINE_TEXT",
              "DATE",
              "URL",
              "DROPDOWN",
              "STRING"
            ]
          },
          "label": {
            "maxLength": 255,
            "type": "string"
          },
          "description": {
            "maxLength": 1000,
            "type": "string"
          },
          "contact_property_group_id": {
            "type": "number"
          }
        }
      },
      "createContactPropertySchema": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/contactPropertySchema"
          }
        }
      },
      "createContactSchema": {
        "type": "object",
        "properties": {
          "full_name": {
            "maxLength": 255,
            "type": "string",
            "description": "Full Name of contact",
            "example": "Jane Doe"
          },
          "email": {
            "maxLength": 255,
            "type": "string",
            "description": "Email of contact. Can be optional only if anonymous contact feature is enabled.",
            "example": "janedoe@surveysparrow.com",
            "x-format": {
              "email": true
            }
          },
          "phone": {
            "maxLength": 255,
            "type": "string",
            "description": "Phone number of the contact",
            "example": "91234567833"
          },
          "mobile": {
            "maxLength": 255,
            "type": "string",
            "description": "Mobile number of the contact",
            "example": "1653452783"
          },
          "job_title": {
            "maxLength": 255,
            "type": "string",
            "description": "Job Title of the contact",
            "example": "Manager"
          },
          "contact_type": {
            "type": "string",
            "description": "Type of contact",
            "default": "contact",
            "enum": ["contact", "employee"]
          },
          "referenceId": {
            "maxLength": 255,
            "type": "string",
            "description": "Reference ID of the anonymous contact",
            "example": "123456"
          }
        }
      },
      "createContactResponseSchema": {
        "type": "object",
        "properties": {
          "full_name": {
            "maxLength": 255,
            "type": "string",
            "description": "Full Name of contact",
            "example": "Jane Doe"
          },
          "email": {
            "type": "string",
            "description": "Email of contact",
            "example": "janedoe@surveysparrow.com",
            "x-format": {
              "email": true
            }
          },
          "phone": {
            "maxLength": 255,
            "type": "string",
            "description": "Phone number of the contact",
            "example": "91234567833"
          },
          "mobile": {
            "maxLength": 255,
            "type": "string",
            "description": "Mobile number of the contact",
            "example": "1653452783"
          },
          "job_title": {
            "maxLength": 255,
            "type": "string",
            "description": "Job Title of the contact",
            "example": "Manager"
          },
          "contact_type": {
            "type": "string",
            "description": "Type of contact",
            "default": "contact",
            "enum": ["contact", "employee"]
          },
          "referenceId": {
            "maxLength": 255,
            "type": "string",
            "description": "Reference ID of the anonymous contact",
            "example": "123456"
          }
        }
      },
      "Model 83": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/createContactResponseSchema"
          }
        }
      },
      "Model 84": {
        "required": ["language_code", "language_name"],
        "type": "object",
        "properties": {
          "language_name": {
            "maxLength": 16,
            "minLength": 3,
            "pattern": "/^[A-Za-z]+$/",
            "type": "string",
            "description": "The language name must be between 3 and 16 characters long and can only contain uppercase and lowercase letters (A-Z, a-z)",
            "example": "SparrowLang"
          },
          "language_code": {
            "maxLength": 3,
            "minLength": 3,
            "pattern": "/^[a-z]+$/",
            "type": "string",
            "description": "The language code must be exactly 3 lowercase letters (a-z)",
            "example": "ssl"
          }
        }
      },
      "Model 85": {
        "required": ["message"],
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "description": "Message",
            "example": "Custom Language created successfully"
          }
        },
        "description": "Response data"
      },
      "Model 86": {
        "required": ["data"],
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components//schemas/Model85"
          }
        }
      },
      "tags": {
        "type": "array",
        "items": {
          "pattern": "/^[a-zA-Z0-9 ]*$/",
          "type": "string"
        }
      },
      "Model 87": {
        "required": ["text"],
        "type": "object",
        "properties": {
          "text": {
            "type": "string",
            "description": "Choice text"
          },
          "score": {
            "type": "number",
            "description": "Choice score"
          }
        }
      },
      "choices": {
        "type": "array",
        "items": {
          "$ref": "#/components//schemas/Model87"
        }
      },
      "other_text": {
        "type": "object",
        "properties": {
          "text": {
            "type": "string",
            "description": "Other option text"
          },
          "score": {
            "type": "number",
            "description": "Other option score"
          }
        }
      },
      "all_of_the_above_text": {
        "type": "object",
        "properties": {
          "text": {
            "type": "string",
            "description": "All of the above text"
          }
        }
      },
      "none_of_the_above_text": {
        "type": "object",
        "properties": {
          "text": {
            "type": "string",
            "description": "None of the above option option text"
          },
          "score": {
            "type": "number",
            "description": "None of the above option option score"
          }
        }
      },
      "Model 88": {
        "required": ["coupon_code", "discount_type"],
        "type": "object",
        "properties": {
          "coupon_code": {
            "maxLength": 50,
            "minLength": 1,
            "pattern": "/^[a-zA-Z0-9_]+$/",
            "type": "string",
            "description": "Coupon code"
          },
          "discount_type": {
            "type": "string",
            "description": "Discount type",
            "enum": ["Amount", "Percentage"]
          },
          "amount": {
            "minimum": 1,
            "type": "number",
            "description": "Discount amount is required when discount_type is Amount",
            "x-alternatives": [
              {
                "type": "number",
                "description": "Discount amount is required when discount_type is Amount",
                "minimum": 1
              }
            ]
          },
          "percentage": {
            "maximum": 100,
            "minimum": 1,
            "type": "number",
            "description": "Discount percentage is required when discount_type is Percentage",
            "x-alternatives": [
              {
                "type": "number",
                "description": "Discount percentage is required when discount_type is Percentage",
                "minimum": 1,
                "maximum": 100
              }
            ]
          }
        }
      },
      "discount_coupons": {
        "minItems": 1,
        "type": "array",
        "items": {
          "$ref": "#/components//schemas/Model88"
        }
      },
      "discount": {
        "type": "object",
        "properties": {
          "active": {
            "type": "boolean"
          },
          "discount_coupons": {
            "$ref": "#/components/schemas/discount_coupons"
          }
        }
      },
      "fileTypes": {
        "type": "array",
        "items": {
          "type": "string",
          "default": "",
          "enum": ["image", "doc", "video", "audio"]
        }
      },
      "Model 89": {
        "type": "object",
        "properties": {
          "min": {
            "type": "string",
            "description": "label for min value"
          },
          "max": {
            "type": "string",
            "description": "label for max value"
          },
          "mid": {
            "type": "string",
            "description": "label for mid value"
          },
          "step": {
            "type": "number",
            "description": "Step value for opinion scale"
          },
          "audio_transcription": {
            "type": "boolean",
            "description": "Respondents can answer by voice. Only for text input type questions"
          },
          "analyze_sentiment": {
            "type": "boolean",
            "description": "To analyze the sentiment of the respondents. Only for text input type questions"
          },
          "is_ranking_enabled": {
            "type": "boolean",
            "description": "To enable ranking in group rank question type"
          },
          "can_randomise_features_list": {
            "type": "boolean",
            "description": "To randomize choices in group rank question"
          },
          "can_repeat_feature": {
            "type": "boolean",
            "description": "To allow choices to repeat in a same group in group rank question"
          },
          "wait": {
            "type": "number",
            "description": "Only for message question type in chat surveys"
          },
          "type": {
            "type": "string",
            "description": "Answer type for multiple choice, date time, constant sum and matrix questions.",
            "enum": [
              "SINGLE_LINE",
              "MULTI_LINE",
              "UNLIMITED",
              "EXACT",
              "RANGE",
              "DATETIME",
              "DATE_ONLY",
              "SLIDER",
              "TEXT",
              "DROP_DOWN",
              "MULTIPLE_ANSWER",
              "RATING",
              "SINGLE_ANSWER",
              "TEXT_INPUT"
            ]
          },
          "currency": {
            "type": "string",
            "description": "Currency code is needed for payment question",
            "example": "INR",
            "enum": [
              "INR",
              "USD",
              "EUR",
              "GBP",
              "AUD",
              "CAD",
              "CHF",
              "NOK",
              "SEK",
              "DKK",
              "MXN",
              "NZD",
              "BRL",
              "SGD",
              "RON",
              "CZK"
            ]
          },
          "amount": {
            "type": "number",
            "description": "Amount to be paid for payment question"
          },
          "expression_id": {
            "type": "number",
            "description": "Expression Id for payment"
          },
          "variable_id": {
            "type": "number",
            "description": "Variable Id for payment"
          },
          "discount": {
            "$ref": "#/components/schemas/discount"
          },
          "icon_array_name": {
            "type": "string",
            "description": "Icon type for rating",
            "enum": [
              "RATING_STAR",
              "RATING_CROWN",
              "RATING_LIGHTNING",
              "RATING_SMILEY",
              "RATING_THUMBSUP",
              "RATING_USER"
            ]
          },
          "rating_scale": {
            "maximum": 10,
            "minimum": 3,
            "type": "number",
            "description": "Rating scale. Should be between 1-5 for rating type question. Should be between 3-10 for group rating question."
          },
          "slider_type": {
            "type": "string",
            "description": "Only allowed for slider type question",
            "enum": [
              "smileySlider",
              "lineSlider",
              "trafficLightSlider",
              "thermometerSlider",
              "gaugeSlider"
            ]
          },
          "show_progress": {
            "type": "boolean",
            "description": "To show slider progress value"
          },
          "show_total": {
            "type": "boolean",
            "description": "To show total for constant sum."
          },
          "total_sum": {
            "type": "number",
            "description": "Defining total sum for constant sum.(total_sum must not be greater than 1000000)"
          },
          "consent_text": {
            "maxLength": 200,
            "type": "string",
            "description": "Consent text for consent question"
          },
          "show_terms_and_condition": {
            "type": "boolean",
            "description": "To enable terms and conditions for consent question"
          },
          "symbol": {
            "maxLength": 10,
            "type": "string",
            "description": "Symbol to be displayed for constant sum"
          },
          "symbol_position": {
            "type": "string",
            "description": "Position of symbol for constant sum",
            "enum": ["PREFIX", "SUFFIX"]
          },
          "segments": {
            "maximum": 10,
            "minimum": 0,
            "type": "number",
            "description": "Segments for slider question. Should be between 0-10 for constant sum. Should be between 0-5 for slider type question"
          },
          "decimals": {
            "type": "number",
            "description": "Decimal points for slider type question"
          },
          "stack_fields": {
            "type": "boolean",
            "description": "To stack choices/sub questions vertically"
          },
          "maximum_number_of_files": {
            "maximum": 5,
            "minimum": 1,
            "type": "number",
            "description": "Maximum number of files allowed for file input type question"
          },
          "draw_signature": {
            "type": "boolean",
            "description": "To enable draw option for signature type question"
          },
          "type_signature": {
            "type": "boolean",
            "description": "To enable typing option for signature type question"
          },
          "upload_signature": {
            "type": "boolean",
            "description": "To enable upload option for signature type question"
          },
          "date_format": {
            "type": "string",
            "description": "Date format for datetime question",
            "enum": ["MMDDYYYY", "DDMMYYYY", "YYYYMMDD"],
            "x-alternatives": [
              {
                "type": "string",
                "description": "Date format for datetime question",
                "enum": ["MMDDYYYY", "DDMMYYYY", "YYYYMMDD"]
              }
            ]
          },
          "time_format": {
            "type": "string",
            "description": "Time format for datetime question",
            "enum": ["TWENTY_FOUR_HOUR", "TWELVE_HOUR"],
            "x-alternatives": [
              {
                "type": "string",
                "description": "Time format for datetime question",
                "enum": ["TWENTY_FOUR_HOUR", "TWELVE_HOUR"]
              }
            ]
          },
          "show_calendar": {
            "type": "boolean",
            "description": "Should the calendar be shown?",
            "x-alternatives": [
              {
                "type": "boolean",
                "description": "Should the calendar be shown?"
              }
            ]
          },
          "yes_text": {
            "type": "string",
            "description": "Yes text for yes or no question type"
          },
          "no_text": {
            "type": "string",
            "description": "No text for yes or no question type"
          },
          "icon_shape": {
            "type": "string",
            "description": "Icon for yes or no question",
            "enum": ["YES_NO_ICON_TICK_CROSS", "YES_NO_ICON_THUMBS"]
          },
          "start": {
            "type": "number",
            "description": "Starting value for opinion scale"
          },
          "reverse_scale": {
            "type": "boolean",
            "description": "Reverse scale for opinion scale"
          },
          "fileTypes": {
            "$ref": "#/components/schemas/fileTypes"
          },
          "table_layout": {
            "type": "string",
            "description": "Table layout matrix and bipolar type questions",
            "enum": ["CONTENT_WIDTH", "FULL_WIDTH"]
          },
          "minLimit": {
            "type": "number",
            "description": "MinLimit is required for multiple choice question with RANGE answer type. Optional for constant sum, number input, slider, group rank.",
            "x-alternatives": [
              {
                "type": "number",
                "description": "MinLimit is required for multiple choice question with RANGE answer type. Optional for constant sum, number input, slider, group rank."
              },
              {
                "type": "number",
                "x-alternatives": [
                  {
                    "type": "number"
                  }
                ]
              }
            ]
          },
          "maxLimit": {
            "type": "number",
            "description": "MaxLimit is required for multiple choice question with RANGE answer type. Optional for constant sum, number input, slider, group rank.",
            "x-constraint": {
              "greater": "ref:minLimit"
            },
            "x-alternatives": [
              {
                "type": "number",
                "description": "MaxLimit is required for multiple choice question with RANGE answer type. Optional for constant sum, number input, slider, group rank.",
                "x-constraint": {
                  "greater": "ref:minLimit"
                }
              },
              {
                "type": "number",
                "x-constraint": {
                  "greater": "ref:minLimit"
                },
                "x-alternatives": [
                  {
                    "type": "number",
                    "x-constraint": {
                      "greater": "ref:minLimit"
                    }
                  }
                ]
              }
            ]
          },
          "exactChoices": {
            "type": "number",
            "description": "Required for multiple choice question with Exact answer type",
            "x-alternatives": [
              {
                "type": "number",
                "description": "Required for multiple choice question with Exact answer type"
              }
            ]
          },
          "include_feedback_by_rating": {
            "type": "boolean",
            "description": "To include feedback by rating for Feedback question type"
          },
          "promoter": {
            "type": "string",
            "description": "Promoter text for NPS feedback question type"
          },
          "passive": {
            "type": "string",
            "description": "Passive text for NPS feedback question type"
          },
          "detractor": {
            "type": "string",
            "description": "Detractor text for NPS feedback question type"
          },
          "low_effort": {
            "type": "string",
            "description": "Low effort text for CES feedback question type"
          },
          "neutral": {
            "type": "string",
            "description": "Neutral text for CES feedback question type"
          },
          "high_effort": {
            "type": "string",
            "description": "High effort text for CES feedback question type"
          },
          "satisfied": {
            "type": "string",
            "description": "Satisfied text for CSAT feedback question type"
          },
          "dissatisfied": {
            "type": "string",
            "description": "Dissatisfied text for CSAT feedback question type"
          },
          "translate_answers": {
            "type": "boolean",
            "description": "To translate answers for feedback question type"
          }
        }
      },
      "Model 90": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components//schemas/Model89"
          }
        }
      },
      "Model 91": {
        "required": ["text"],
        "type": "object",
        "properties": {
          "text": {
            "maxLength": 500,
            "type": "string",
            "description": "Required only for DROP_DOWN answer type in matrix question"
          }
        }
      },
      "Model 92": {
        "type": "array",
        "items": {
          "$ref": "#/components//schemas/Model91"
        }
      },
      "Model 93": {
        "required": ["name"],
        "type": "object",
        "properties": {
          "name": {
            "maxLength": 200,
            "type": "string",
            "description": "Column name for matrix, bipolar matrix"
          },
          "choices": {
            "$ref": "#/components//schemas/Model92"
          }
        }
      },
      "column": {
        "minItems": 1,
        "type": "array",
        "items": {
          "$ref": "#/components//schemas/Model93"
        }
      },
      "Model 94": {
        "required": ["name"],
        "type": "object",
        "properties": {
          "name": {
            "maxLength": 200,
            "type": "string",
            "description": "column name for bipolar matrix"
          }
        }
      },
      "Model 95": {
        "minItems": 3,
        "type": "array",
        "items": {
          "$ref": "#/components//schemas/Model94"
        }
      },
      "Model 96": {
        "required": ["text"],
        "type": "object",
        "properties": {
          "text": {
            "maxLength": 500,
            "type": "string",
            "description": "Required only for DROP_DOWN answer type in contact form question."
          }
        }
      },
      "Model 97": {
        "type": "array",
        "items": {
          "$ref": "#/components//schemas/Model96"
        }
      },
      "Model 98": {
        "required": ["left_text"],
        "type": "object",
        "properties": {
          "left_text": {
            "maxLength": 200,
            "type": "string",
            "description": "Sub question or row text"
          },
          "right_text": {
            "type": "string",
            "description": "Right row text. Required only for bipolar matrix. ",
            "x-alternatives": [
              {
                "type": "string",
                "description": "Right row text. Required only for bipolar matrix. "
              }
            ]
          },
          "required": {
            "type": "boolean",
            "description": "Only for questions in contact form. True by default",
            "x-alternatives": [
              {
                "type": "boolean",
                "description": "Only for questions in contact form. True by default"
              }
            ]
          },
          "row_type": {
            "type": "string",
            "description": "Sub question type for contact form. Required only for contact form.",
            "enum": [
              "string",
              "number",
              "email",
              "date",
              "dropdown",
              "PhoneNumber"
            ],
            "x-alternatives": [
              {
                "type": "string",
                "description": "Sub question type for contact form. Required only for contact form.",
                "enum": [
                  "string",
                  "number",
                  "email",
                  "date",
                  "dropdown",
                  "PhoneNumber"
                ]
              }
            ]
          },
          "choices": {
            "$ref": "#/components//schemas/Model97"
          }
        }
      },
      "row": {
        "minItems": 1,
        "type": "array",
        "items": {
          "$ref": "#/components//schemas/Model98"
        }
      },
      "Model 99": {
        "required": ["comparator", "type"],
        "type": "object",
        "properties": {
          "join_condition": {
            "type": "string",
            "default": "and",
            "enum": ["and", "or"]
          },
          "type": {
            "type": "string",
            "description": "Custom variable type",
            "enum": ["param"]
          },
          "comparator": {
            "type": "string",
            "description": "Condition type to check",
            "enum": [
              "isPassed",
              "isNotPassed",
              "startsWith",
              "endsWith",
              "contains",
              "equalsString",
              "doesNotContain",
              "notEqualTo",
              "lessThanForParam",
              "greaterThanForParam"
            ]
          },
          "variable_id": {
            "type": "number",
            "x-alternatives": [
              {
                "type": "number"
              }
            ]
          },
          "value": {
            "type": "string",
            "description": "Not required for comparators isPassed and isNotPassed",
            "default": "",
            "x-alternatives": [
              {
                "type": "string",
                "description": "Not required for comparators isPassed and isNotPassed",
                "default": ""
              }
            ]
          }
        }
      },
      "logics": {
        "type": "array",
        "items": {
          "$ref": "#/components//schemas/Model99"
        }
      },
      "display_logic": {
        "type": "object",
        "properties": {
          "logics": {
            "$ref": "#/components/schemas/logics"
          }
        }
      },
      "question": {
        "required": ["text", "type"],
        "type": "object",
        "properties": {
          "text": {
            "type": "string",
            "description": "Question text",
            "example": "How would you rate our service?"
          },
          "description": {
            "type": "string",
            "description": "Question description",
            "example": "Give us your feedback"
          },
          "type": {
            "type": "string",
            "description": "Type of question",
            "example": "TextInput",
            "enum": [
              "FileInput",
              "TextInput",
              "OpinionScale",
              "MultiChoice",
              "BipolarMatrix",
              "CameraInput",
              "Consent",
              "ConstantSum",
              "ContactForm",
              "DateTime",
              "Dropdown",
              "EmailInput",
              "GroupRating",
              "Matrix",
              "Message",
              "NumberInput",
              "PhoneNumber",
              "RankOrder",
              "Rating",
              "Signature",
              "Slider",
              "URLInput",
              "YesNo",
              "GroupRank",
              "AudioInput",
              "PaymentQuestion",
              "NPSFeedback",
              "CESFeedback",
              "CSATFeedback"
            ]
          },
          "required": {
            "type": "boolean",
            "description": "Is response mandatory for this question?",
            "example": true
          },
          "randomized": {
            "type": "boolean",
            "description": "Should the choices be randomized?"
          },
          "tags": {
            "$ref": "#/components/schemas/tags"
          },
          "multiple_answers": {
            "type": "boolean",
            "description": "Can users select multiple answers for the question?"
          },
          "choices": {
            "$ref": "#/components/schemas/choices"
          },
          "hasScore": {
            "type": "boolean",
            "description": "Should be set to true if individual choices has scores"
          },
          "other": {
            "type": "boolean",
            "description": "To enable other option"
          },
          "all_of_the_above": {
            "type": "boolean",
            "description": "To enable all of the above option. Works only if multipe_answers is set to true",
            "x-alternatives": [
              {
                "type": "boolean",
                "description": "To enable all of the above option. Works only if multipe_answers is set to true"
              }
            ]
          },
          "none_of_the_above": {
            "type": "boolean",
            "description": "To enable none of the above option"
          },
          "other_text": {
            "$ref": "#/components/schemas/other_text"
          },
          "all_of_the_above_text": {
            "$ref": "#/components/schemas/all_of_the_above_text"
          },
          "none_of_the_above_text": {
            "$ref": "#/components/schemas/none_of_the_above_text"
          },
          "properties": {
            "$ref": "#/components//schemas/Model90"
          },
          "column": {
            "$ref": "#/components/schemas/column"
          },
          "row": {
            "$ref": "#/components/schemas/row"
          },
          "display_logic": {
            "$ref": "#/components/schemas/display_logic"
          }
        }
      },
      "Model 100": {
        "required": ["question", "survey_id"],
        "type": "object",
        "properties": {
          "survey_id": {
            "type": "number",
            "description": "Survey Id",
            "example": 1
          },
          "section_id": {
            "type": "number",
            "description": "Section Id",
            "example": 2
          },
          "question": {
            "$ref": "#/components/schemas/question"
          }
        }
      },
      "Model 101": {
        "required": ["custom_footer", "embed_first_question"],
        "type": "object",
        "properties": {
          "embed_first_question": {
            "type": "boolean"
          },
          "custom_footer": {
            "type": "boolean"
          },
          "custom_footer_value": {
            "type": "string"
          }
        },
        "description": "Properties of the reminder"
      },
      "Model 102": {
        "required": [
          "channel_id",
          "frequency",
          "interval",
          "survey_id",
          "type"
        ],
        "type": "object",
        "properties": {
          "channel_id": {
            "type": "number",
            "description": "Id of the channel",
            "example": 1
          },
          "survey_id": {
            "type": "number",
            "description": "Id of Survey",
            "example": 1
          },
          "body": {
            "type": "string"
          },
          "subject": {
            "type": "string"
          },
          "frequency": {
            "type": "string",
            "enum": ["Days", "Weeks", "Months"]
          },
          "type": {
            "type": "string",
            "enum": ["NOT_RESPONDED", "PARTIALLY_RESPONDED"]
          },
          "interval": {
            "type": "number"
          },
          "properties": {
            "$ref": "#/components//schemas/Model101"
          },
          "preview_text": {
            "type": "string"
          }
        }
      },
      "Model 103": {
        "type": "array",
        "description": "Tags of response",
        "example": "[\"tag1\", \"tag2\"]",
        "items": {
          "type": "string"
        }
      },
      "meta_data": {
        "type": "object",
        "properties": {
          "os": {
            "maxLength": 255,
            "type": "string",
            "description": "OS of the response",
            "example": "macOS"
          },
          "browser": {
            "maxLength": 255,
            "type": "string",
            "description": "Browser of response",
            "example": "Chrome"
          },
          "time_zone": {
            "maxLength": 255,
            "type": "string",
            "description": "Time Zone of response",
            "example": "Asia/Calcutta"
          },
          "browser_language": {
            "maxLength": 255,
            "type": "string",
            "description": "Browser Language of the response",
            "example": "en-GB"
          },
          "date_time": {
            "type": "string",
            "description": "Date and Time of submission. Should be in the ISO format",
            "format": "date"
          },
          "tags": {
            "$ref": "#/components//schemas/Model103"
          },
          "ip": {
            "type": "string",
            "description": "Tags of response",
            "example": "127.0.0.1",
            "x-format": {
              "ip": {
                "version": ["ipv4", "ipv6"],
                "cidr": "optional"
              }
            }
          },
          "device_type": {
            "maxLength": 255,
            "type": "string",
            "description": "Device Type of response",
            "example": "COMPUTER"
          },
          "language": {
            "maxLength": 255,
            "type": "string",
            "description": "Language of response",
            "example": "English"
          }
        }
      },
      "matrix_txt": {
        "type": "array",
        "description": "Matrix Answer for Text Input",
        "items": {
          "type": "string"
        }
      },
      "matrix_int": {
        "type": "array",
        "description": "Matrix Answer for Rating ",
        "items": {
          "type": "string"
        }
      },
      "AnswerInput": {
        "required": ["answer", "question_id"],
        "type": "object",
        "properties": {
          "question_id": {
            "type": "number",
            "description": "ID of the question",
            "example": 1
          },
          "parent_question_id": {
            "type": "number",
            "description": "ID of the parent question",
            "example": 1
          },
          "answer": {
            "type": "string",
            "description": "Answer of question"
          },
          "other_txt": {
            "type": "string",
            "description": "Other Text Answer"
          },
          "matrix_txt": {
            "$ref": "#/components/schemas/matrix_txt"
          },
          "matrix_int": {
            "$ref": "#/components/schemas/matrix_int"
          },
          "region_code": {
            "maxLength": 255,
            "type": "string",
            "description": "Region code of Answer"
          },
          "time": {
            "maxLength": 255,
            "type": "string",
            "description": "Time of Answer"
          },
          "time_zone": {
            "maxLength": 255,
            "type": "string",
            "description": "TimeZone of Answer"
          }
        }
      },
      "getAnswerSchema": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/AnswerInput"
        }
      },
      "completeRequestSchema": {
        "required": ["answers", "survey_id"],
        "type": "object",
        "properties": {
          "survey_id": {
            "type": "number",
            "description": "ID of the survey",
            "example": 1
          },
          "contact_id": {
            "type": "number",
            "description": "ID of the contact",
            "example": 2
          },
          "channel_id": {
            "type": "number",
            "description": "ID of the channel",
            "example": 3
          },
          "variables": {
            "$ref": "#/components/schemas/properties"
          },
          "trigger_workflow": {
            "type": "boolean",
            "description": "Should this response trigger workflow",
            "default": true
          },
          "meta_data": {
            "$ref": "#/components/schemas/meta_data"
          },
          "answers": {
            "$ref": "#/components/schemas/getAnswerSchema"
          }
        }
      },
      "completeResponseSchema": {
        "required": ["id", "state", "time_taken"],
        "type": "object",
        "properties": {
          "id": {
            "type": "number",
            "x-alternatives": [
              {
                "type": "number"
              },
              {
                "type": "string"
              }
            ]
          },
          "state": {
            "type": "string",
            "description": "State of the response",
            "example": "STARTED"
          },
          "time_taken": {
            "type": "number",
            "description": "Time Taken of the response",
            "example": 5
          }
        }
      },
      "getCompletedResponseResponse": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/completeResponseSchema"
          }
        }
      },
      "Model 104": {
        "type": "object",
        "properties": {
          "label": {
            "type": "string",
            "description": "Label for the section button",
            "example": "Continue"
          },
          "section_randomise": {
            "type": "boolean",
            "description": "Randomise the questions in the section"
          },
          "single_page_view": {
            "type": "boolean",
            "description": "Show all questions in the section in a single page"
          },
          "skip_section": {
            "type": "boolean",
            "description": "Skip the section"
          },
          "section_intro": {
            "type": "string",
            "description": "Introduction text of the section in the same page? or in a seperate page?",
            "example": "same",
            "enum": ["same", "separate"]
          },
          "required": {
            "type": "boolean",
            "description": "Is the section required?. Only in case of single page view"
          }
        }
      },
      "Model 105": {
        "required": ["comparator", "type"],
        "type": "object",
        "properties": {
          "join_condition": {
            "type": "string",
            "description": "Logic operator of the Join condition",
            "example": "and",
            "default": "and",
            "enum": ["and", "or"]
          },
          "type": {
            "type": "string",
            "description": "Logic type",
            "example": "param",
            "enum": ["param"]
          },
          "comparator": {
            "type": "string",
            "description": "Comparator for the logic type",
            "example": "isPassed",
            "enum": [
              "isPassed",
              "isNotPassed",
              "startsWith",
              "endsWith",
              "contains",
              "equalsString",
              "doesNotContain",
              "notEqualTo",
              "lessThanForParam",
              "greaterThanForParam"
            ]
          },
          "variable_id": {
            "type": "number",
            "description": "Variable Id for the Logic",
            "x-alternatives": [
              {
                "type": "number",
                "description": "Variable Id for the Logic"
              }
            ]
          },
          "value": {
            "type": "string",
            "description": "Value for the logic",
            "default": ""
          }
        }
      },
      "Model 106": {
        "type": "array",
        "items": {
          "$ref": "#/components//schemas/Model105"
        }
      },
      "Model 107": {
        "type": "object",
        "properties": {
          "logics": {
            "$ref": "#/components//schemas/Model106"
          }
        }
      },
      "questions": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/question"
        }
      },
      "Model 108": {
        "type": "object",
        "properties": {
          "name": {
            "maxLength": 10000,
            "type": "string",
            "description": "Name of the section",
            "example": "Section 1"
          },
          "description": {
            "maxLength": 10000,
            "type": "string",
            "description": "Description of the section",
            "example": "Section 1 description"
          },
          "position": {
            "type": "number",
            "description": "Position of the section",
            "example": 1
          },
          "properties": {
            "$ref": "#/components//schemas/Model104"
          },
          "display_logic": {
            "$ref": "#/components//schemas/Model107"
          },
          "questions": {
            "$ref": "#/components/schemas/questions"
          }
        }
      },
      "sections": {
        "maxItems": 20,
        "minItems": 1,
        "type": "array",
        "description": "Array of sections",
        "items": {
          "$ref": "#/components//schemas/Model108"
        }
      },
      "Model 109": {
        "required": ["sections", "survey_id"],
        "type": "object",
        "properties": {
          "survey_id": {
            "type": "number",
            "description": "Id of Survey",
            "example": 12001
          },
          "sections": {
            "$ref": "#/components/schemas/sections"
          }
        }
      },
      "surveyThankyouPageSchema": {
        "type": "object",
        "properties": {
          "preAdded": {
            "type": "boolean"
          },
          "message": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "redirect_url": {
            "type": "string"
          },
          "branding": {
            "type": "boolean"
          }
        }
      },
      "surveyThankyouPageArraySchema": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/surveyThankyouPageSchema"
        }
      },
      "limit_reset": {
        "required": ["never"],
        "type": "object",
        "properties": {
          "never": {
            "type": "boolean"
          },
          "frequency": {
            "type": "string",
            "enum": ["day", "week", "month", "year"],
            "x-alternatives": [
              {
                "type": "string",
                "enum": ["day", "week", "month", "year"]
              },
              {
                "type": "string"
              }
            ]
          },
          "value": {
            "maximum": 9999999999,
            "minimum": 1,
            "type": "number",
            "x-alternatives": [
              {
                "type": "number",
                "minimum": 1,
                "maximum": 9999999999
              },
              {
                "type": "string"
              }
            ]
          }
        },
        "description": "Reset the limit after a period of time"
      },
      "submission_per_user": {
        "required": ["active"],
        "type": "object",
        "properties": {
          "active": {
            "type": "boolean",
            "description": "Enable submission per user"
          },
          "limit": {
            "maximum": 9999999999,
            "minimum": 1,
            "type": "number",
            "x-alternatives": [
              {
                "type": "number",
                "minimum": 1,
                "maximum": 9999999999
              },
              {
                "type": "number",
                "minimum": 1,
                "maximum": 9999999999
              }
            ]
          },
          "limit_reset": {
            "$ref": "#/components/schemas/limit_reset"
          }
        }
      },
      "throttling": {
        "required": ["active"],
        "type": "object",
        "properties": {
          "active": {
            "type": "boolean",
            "description": "Enable throttling"
          },
          "times": {
            "maximum": 9999999999,
            "minimum": 1,
            "type": "number",
            "x-alternatives": [
              {
                "type": "number",
                "minimum": 1,
                "maximum": 9999999999
              },
              {
                "type": "number",
                "minimum": 1,
                "maximum": 9999999999
              }
            ]
          },
          "days": {
            "maximum": 9999999999,
            "minimum": 1,
            "type": "number",
            "x-alternatives": [
              {
                "type": "number",
                "minimum": 1,
                "maximum": 9999999999
              },
              {
                "type": "number",
                "minimum": 1,
                "maximum": 9999999999
              }
            ]
          }
        }
      },
      "dynamic_cut_off": {
        "required": ["enabled"],
        "type": "object",
        "properties": {
          "enabled": {
            "type": "boolean"
          },
          "period": {
            "type": "string",
            "enum": ["days", "weeks", "months", "years", "hours"],
            "x-alternatives": [
              {
                "type": "string",
                "enum": ["days", "weeks", "months", "years", "hours"]
              },
              {
                "type": "string"
              }
            ]
          },
          "value": {
            "maximum": 999,
            "minimum": 1,
            "type": "number",
            "x-alternatives": [
              {
                "type": "number",
                "minimum": 1,
                "maximum": 999
              },
              {
                "type": "number"
              }
            ]
          }
        }
      },
      "surveySettings": {
        "type": "object",
        "properties": {
          "survey_randomize": {
            "type": "boolean",
            "description": "Randomize questions in the survey"
          },
          "submission_per_user": {
            "$ref": "#/components/schemas/submission_per_user"
          },
          "throttling": {
            "$ref": "#/components/schemas/throttling"
          },
          "track_ip": {
            "type": "boolean",
            "description": "To Track the IP address of the user"
          },
          "track_location": {
            "type": "boolean",
            "description": "To Track the location of the user"
          },
          "edit_response": {
            "type": "boolean",
            "description": "To allow the user to edit the response"
          },
          "copy_of_response": {
            "type": "boolean",
            "description": "To allow the user to send a copy of the response to themselves"
          },
          "partial_submission": {
            "type": "boolean",
            "description": "To allow the user to submit partially"
          },
          "auto_submission": {
            "type": "boolean",
            "description": "To allow the user to submit automatically. Only available in Chat Surveys"
          },
          "response_limit": {
            "maximum": 1000000000,
            "type": "number",
            "description": "Limit the number of responses this survey can get"
          },
          "cut_off_date": {
            "type": "string",
            "format": "date"
          },
          "dynamic_cut_off": {
            "$ref": "#/components/schemas/dynamic_cut_off"
          },
          "enable_offline_support": {
            "type": "boolean",
            "description": "This feature is available only in ClassicForm"
          },
          "password": {
            "maxLength": 256,
            "minLength": 5,
            "type": "string",
            "description": "Password for the survey"
          },
          "disable_scroll_back": {
            "type": "boolean",
            "description": "To disable the scroll back option"
          },
          "disable_contact_tracking": {
            "type": "boolean",
            "description": "To disable the contact tracking"
          }
        }
      },
      "createSurveySchema": {
        "required": ["name", "survey_type"],
        "type": "object",
        "properties": {
          "name": {
            "maxLength": 200,
            "minLength": 1,
            "type": "string",
            "example": "Employee satisfaction survey"
          },
          "survey_type": {
            "type": "string",
            "enum": [
              "ClassicForm",
              "NPS",
              "NPSChat",
              "Conversational",
              "CES",
              "CESChat",
              "CSAT",
              "CSATChat"
            ]
          },
          "workspace_id": {
            "type": "number",
            "description": "\"workspace\" has been renamed to \"survey folder\". We suggest using survey_folder_id instead of workspace_id"
          },
          "survey_folder_id": {
            "type": "number"
          },
          "visibility": {
            "type": "string",
            "default": "Public",
            "enum": ["Public", "Mine"]
          },
          "theme_id": {
            "type": "number"
          },
          "primary_language": {
            "type": "string"
          },
          "welcome_screen_button_text": {
            "maxLength": 250,
            "type": "string"
          },
          "welcome_text": {
            "type": "string"
          },
          "welcome_description": {
            "type": "string"
          },
          "thankyou_json": {
            "$ref": "#/components/schemas/surveyThankyouPageArraySchema"
          },
          "settings": {
            "$ref": "#/components/schemas/surveySettings"
          }
        }
      },
      "user_id": {
        "maxItems": 100,
        "type": "array",
        "description": "Id of users who should be added to the team",
        "example": [1, 2, 3],
        "items": {
          "type": "number"
        }
      },
      "Model 110": {
        "required": ["name"],
        "type": "object",
        "properties": {
          "name": {
            "maxLength": 255,
            "type": "string",
            "description": "Team name",
            "example": "Avengers",
            "x-convert": {
              "trim": true
            }
          },
          "type": {
            "type": "string",
            "description": "Team type, if not provided will be \"SURVEY\" by default",
            "default": "SURVEY",
            "enum": ["SURVEY", "TICKET"]
          },
          "user_id": {
            "$ref": "#/components/schemas/user_id"
          },
          "enable_round_robin": {
            "type": "boolean",
            "description": "Enable round robin for the team",
            "example": true,
            "default": false,
            "x-alternatives": [
              {
                "type": "boolean",
                "description": "Enable round robin for the team",
                "example": true,
                "default": false
              }
            ]
          }
        }
      },
      "createTeamSchema": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/teamSchema"
          }
        }
      },
      "child_ticket_ids": {
        "type": "array",
        "description": "An array of ticket IDs representing the child tickets associated with this ticket",
        "items": {
          "type": "number"
        }
      },
      "createTicketSchema": {
        "required": ["priority", "status", "subject"],
        "type": "object",
        "properties": {
          "requester_id": {
            "type": "number",
            "description": "Ticket requester's contact id",
            "example": 1
          },
          "email": {
            "type": "string",
            "description": "Ticket requester's contact email",
            "example": "abc@ymail.com"
          },
          "phone": {
            "type": "string",
            "description": "Ticket requester's contact phone",
            "example": "+ 123 23"
          },
          "subject": {
            "maxLength": 200,
            "type": "string",
            "description": "Ticket subject",
            "example": "Ticket subject 1"
          },
          "description": {
            "type": "string",
            "description": "Ticket description",
            "example": "Ticket description 1"
          },
          "attachments": {
            "type": "file",
            "description": "Following file types are allowed: pdf, png, jpeg, mp3, csv, wav. Maximum file size allowed is 15MB.",
            "format": "binary",
            "x-meta": {
              "swaggerType": "file"
            }
          },
          "priority": {
            "type": "number",
            "description": "Ticket priority",
            "example": 2
          },
          "status": {
            "type": "number",
            "description": "Ticket status",
            "example": 3
          },
          "parent_ticket_id": {
            "type": "number",
            "description": "The ID of the parent ticket to which this ticket is related",
            "example": 12532
          },
          "child_ticket_ids": {
            "$ref": "#/components/schemas/child_ticket_ids"
          },
          "source": {
            "type": "number",
            "description": "Ticket source",
            "example": 4
          },
          "submission_id": {
            "type": "number",
            "description": "Response ID",
            "example": 5
          },
          "nps_submission_id": {
            "type": "number",
            "description": "NPS Response ID",
            "example": 6
          },
          "assignee_id": {
            "type": "number",
            "description": "Ticket agent's user id",
            "example": 7
          },
          "team_id": {
            "type": "number",
            "description": "Ticket team's id",
            "example": 8
          },
          "custom_fields": {
            "$ref": "#/components/schemas/properties"
          }
        }
      },
      "language_codes": {
        "type": "array",
        "description": "Array of language codes",
        "example": ["en", "fr"],
        "items": {
          "type": "string"
        }
      },
      "Model 111": {
        "required": ["language_codes", "survey_id"],
        "type": "object",
        "properties": {
          "survey_id": {
            "type": "number",
            "description": "Survey ID",
            "example": 123456
          },
          "language_codes": {
            "$ref": "#/components/schemas/language_codes"
          },
          "google_translate": {
            "type": "boolean",
            "description": "Translate using Google Translate",
            "example": false,
            "default": false
          }
        }
      },
      "Model 112": {
        "required": ["code", "isCustomLanguage", "translateByGoogle"],
        "type": "object",
        "properties": {
          "translateByGoogle": {
            "type": "boolean",
            "description": "Auto translate using Google Translate",
            "example": false
          },
          "isCustomLanguage": {
            "type": "boolean",
            "description": "Is custom language",
            "example": false
          },
          "code": {
            "type": "string",
            "description": "Language code",
            "example": "en"
          }
        }
      },
      "languageCreated": {
        "type": "array",
        "description": "Array of created languages",
        "items": {
          "$ref": "#/components//schemas/Model112"
        }
      },
      "Model 113": {
        "required": ["code", "message"],
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "description": "Language code",
            "example": "en"
          },
          "message": {
            "type": "string",
            "description": "Message",
            "example": "Translation already exists"
          }
        }
      },
      "languageSkipped": {
        "type": "array",
        "description": "Array of skipped or invalid languages",
        "items": {
          "$ref": "#/components//schemas/Model113"
        }
      },
      "Model 114": {
        "required": ["languageCreated", "languageSkipped"],
        "type": "object",
        "properties": {
          "languageCreated": {
            "$ref": "#/components/schemas/languageCreated"
          },
          "languageSkipped": {
            "$ref": "#/components/schemas/languageSkipped"
          }
        },
        "description": "Response data"
      },
      "Model 115": {
        "required": ["data"],
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components//schemas/Model114"
          }
        }
      },
      "Model 116": {
        "required": ["email", "name", "role_id"],
        "type": "object",
        "properties": {
          "name": {
            "maxLength": 255,
            "type": "string",
            "x-convert": {
              "trim": true
            }
          },
          "email": {
            "maxLength": 255,
            "type": "string",
            "x-format": {
              "email": true
            },
            "x-convert": {
              "trim": true
            }
          },
          "role_id": {
            "type": "number"
          }
        }
      },
      "createVariablesSchema": {
        "required": ["label", "name", "survey_id", "type"],
        "type": "object",
        "properties": {
          "survey_id": {
            "type": "number",
            "description": "Id of Survey",
            "example": 1
          },
          "label": {
            "maxLength": 64,
            "type": "string"
          },
          "name": {
            "maxLength": 35,
            "type": "string"
          },
          "description": {
            "maxLength": 200,
            "type": "string"
          },
          "type": {
            "type": "string",
            "enum": ["STRING", "NUMBER", "DATE"]
          }
        }
      },
      "createVariableResponseSchema": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/getVariableSchema"
          }
        }
      },
      "Model 117": {
        "maxItems": 10,
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/properties"
        }
      },
      "Model 118": {
        "required": ["http_method", "survey_id", "url"],
        "type": "object",
        "properties": {
          "name": {
            "maxLength": 255,
            "type": "string"
          },
          "description": {
            "maxLength": 1000,
            "type": "string"
          },
          "url": {
            "maxLength": 1000,
            "type": "string"
          },
          "event_type": {
            "maxLength": 255,
            "type": "string",
            "default": "submission_completed"
          },
          "object_type": {
            "maxLength": 255,
            "type": "string",
            "default": "survey"
          },
          "survey_id": {
            "type": "number"
          },
          "http_method": {
            "maxLength": 255,
            "type": "string",
            "enum": ["POST", "GET", "PATCH", "PUT", "DELETE"]
          },
          "headers": {
            "$ref": "#/components//schemas/Model117"
          },
          "type": {
            "maxLength": 255,
            "type": "string",
            "default": "application"
          },
          "payload": {
            "$ref": "#/components/schemas/properties"
          },
          "include_partial_submission": {
            "type": "boolean",
            "example": true,
            "default": false
          }
        }
      },
      "webhookResponseSchema": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/webhookSchema"
          }
        }
      },
      "Model 119": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Name of the event",
            "example": "SURVEY_CREATED",
            "enum": [
              "SURVEY_CREATED",
              "SURVEY_EDITED",
              "SURVEY_DELETED",
              "THEME_ADDED",
              "THEME_EDITED",
              "THEME_DELETED",
              "USER_CREATED",
              "USER_DELETED",
              "USER_EDITED",
              "CONTACT_CREATED",
              "CONTACT_UPDATED",
              "CONTACT_DELETED",
              "CONTACT_PROPERTY_CREATED",
              "CONTACT_PROPERTY_EDITED",
              "CONTACT_PROPERTY_DELETED",
              "WORKSPACE_CREATED",
              "WORKSPACE_DELETED",
              "WORKSPACE_EDITED",
              "SYNC_DEVICES",
              "SURVEY_RESPONSE_IMPORT",
              "SURVEY_RESPONSE_DELETION",
              "SURVEY_CLOSED",
              "SURVEY_RESTORED",
              "SURVEY_OWNERSHIP_TRANSFER",
              "FOLDER_USER_ACCESS_GRANT",
              "FOLDER_USER_ACCESS_REMOVE",
              "FOLDER_TEAM_ACCESS_GRANT",
              "FOLDER_TEAM_ACCESS_REMOVE",
              "SURVEY_MOVED",
              "SURVEY_PASSWORD_CREATED",
              "SURVEY_PASSWORD_DELETED",
              "SURVEY_PASSWORD_EDITED",
              "QUESTION_CATALOG_CREATED",
              "QUESTION_CATALOG_DELETED",
              "LOGIN",
              "LOGOUT"
            ]
          }
        }
      },
      "Model 120": {
        "type": "array",
        "description": "Array of event names",
        "example": [
          {
            "name": "SURVEY_CREATED"
          }
        ],
        "items": {
          "$ref": "#/components//schemas/Model119"
        }
      },
      "createAuditLogEventSchema": {
        "required": ["events", "http_method", "url"],
        "type": "object",
        "properties": {
          "events": {
            "$ref": "#/components//schemas/Model120"
          },
          "http_method": {
            "type": "string",
            "description": "The HTTP method for the request (GET, PUT, POST, or DELETE).",
            "example": "POST",
            "enum": ["GET", "PUT", "POST", "DELETE"]
          },
          "url": {
            "type": "string",
            "description": "URL of audit webhook event",
            "example": "https://subscribed.com/data",
            "x-format": {
              "uri": true
            }
          },
          "headers": {
            "$ref": "#/components/schemas/properties"
          }
        }
      },
      "Model 121": {
        "required": ["event", "id"],
        "type": "object",
        "properties": {
          "id": {
            "type": "number",
            "description": "ID of the event",
            "example": 1
          },
          "event": {
            "type": "string",
            "description": "Name of the event",
            "example": "SURVEY_CREATED"
          }
        }
      },
      "Model 122": {
        "type": "array",
        "items": {
          "$ref": "#/components//schemas/Model121"
        }
      },
      "Model 123": {
        "type": "object",
        "properties": {
          "events": {
            "$ref": "#/components//schemas/Model122"
          }
        }
      },
      "contact_ids": {
        "maxItems": 100,
        "type": "array",
        "description": "Id's of Contact",
        "items": {
          "type": "number"
        }
      },
      "contactSchema": {
        "type": "object",
        "properties": {
          "full_name": {
            "maxLength": 255,
            "type": "string",
            "description": "Full Name of contact",
            "example": "Jane Doe"
          },
          "phone": {
            "maxLength": 255,
            "type": "string",
            "description": "Phone number of the contact",
            "example": "91234567833"
          },
          "mobile": {
            "maxLength": 255,
            "type": "string",
            "description": "Mobile number of the contact",
            "example": "1653452783"
          },
          "email": {
            "maxLength": 255,
            "type": "string",
            "description": "Email of contact",
            "example": "janedoe@surveysparrow.com",
            "x-alternatives": [
              {
                "type": "string",
                "description": "Email of contact",
                "example": "janedoe@surveysparrow.com",
                "maxLength": 255,
                "x-format": {
                  "email": true
                }
              },
              {
                "type": "string",
                "description": "Email of contact",
                "example": "janedoe@surveysparrow.com",
                "maxLength": 255,
                "x-format": {
                  "email": true
                }
              }
            ],
            "x-format": {
              "email": true
            }
          },
          "job_title": {
            "maxLength": 255,
            "type": "string",
            "description": "Job Title of the contact",
            "example": "Manager"
          },
          "contact_type": {
            "type": "string",
            "description": "Type of the contact",
            "default": "contact",
            "enum": ["contact", "employee"]
          },
          "variables": {
            "$ref": "#/components/schemas/properties"
          },
          "expires_at": {
            "type": "string",
            "description": "expiry time of link in UTC",
            "format": "date"
          }
        }
      },
      "Model 124": {
        "maxItems": 100,
        "minItems": 1,
        "type": "array",
        "description": "Array of contact objects",
        "items": {
          "$ref": "#/components/schemas/contactSchema"
        }
      },
      "Model 125": {
        "maxItems": 100,
        "type": "array",
        "description": "Id's of Contact Lists",
        "items": {
          "type": "number"
        }
      },
      "createUniQueShareLinkSchema": {
        "required": ["channel_id", "survey_id"],
        "type": "object",
        "properties": {
          "survey_id": {
            "type": "number",
            "description": "Id of Survey",
            "example": 1
          },
          "channel_id": {
            "type": "number",
            "description": "Id of Channel",
            "example": 1
          },
          "contact_ids": {
            "$ref": "#/components/schemas/contact_ids"
          },
          "contacts": {
            "$ref": "#/components//schemas/Model124"
          },
          "contact_list_ids": {
            "$ref": "#/components//schemas/Model125"
          },
          "short_url": {
            "type": "boolean",
            "description": "Create short link for the survey",
            "example": false,
            "default": false
          },
          "expires_at": {
            "type": "string",
            "description": "expiry time of link in UTC",
            "format": "date"
          },
          "variables": {
            "$ref": "#/components/schemas/properties"
          }
        }
      },
      "Model 126": {
        "required": ["contact_id"],
        "type": "object",
        "properties": {
          "contact_id": {
            "type": "number",
            "description": "ID of the contact",
            "example": 1
          },
          "survey_link": {
            "type": "string",
            "description": "Survey Link",
            "example": "https://example.surveysparrow.com/n/survey-name/unique-identifier"
          },
          "short_url": {
            "type": "string",
            "description": "Short URL for the survey",
            "example": "short.surveysparrow.com/DHDFYedfh"
          },
          "variables": {
            "$ref": "#/components/schemas/properties"
          },
          "expires_at": {
            "type": "string",
            "description": "expiry time of link in UTC",
            "format": "date"
          }
        }
      },
      "uniqueChannelUrlsSchema": {
        "type": "array",
        "items": {
          "$ref": "#/components//schemas/Model126"
        }
      },
      "getUniQueShareLinkResponse": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/uniqueChannelUrlsSchema"
          }
        }
      },
      "Model 127": {
        "maxItems": 100,
        "minItems": 1,
        "type": "array",
        "description": "List ids to which the contact should be added",
        "items": {
          "type": "number"
        }
      },
      "createBulkContactSchema": {
        "type": "object",
        "properties": {
          "full_name": {
            "maxLength": 255,
            "type": "string",
            "description": "Full Name of contact",
            "example": "Jane Doe"
          },
          "email": {
            "maxLength": 255,
            "type": "string",
            "description": "Email of contact. Can be optional only if anonymous contact feature is enabled.",
            "example": "janedoe@surveysparrow.com",
            "x-format": {
              "email": true
            }
          },
          "phone": {
            "maxLength": 255,
            "type": "string",
            "description": "Phone number of the contact",
            "example": "91234567833"
          },
          "mobile": {
            "maxLength": 255,
            "type": "string",
            "description": "Mobile number of the contact",
            "example": "1653452783"
          },
          "job_title": {
            "maxLength": 255,
            "type": "string",
            "description": "Job Title of the contact",
            "example": "Manager"
          },
          "contact_type": {
            "type": "string",
            "description": "Type of contact",
            "default": "contact",
            "enum": ["contact", "employee"]
          },
          "contact_list_ids": {
            "$ref": "#/components//schemas/Model127"
          },
          "referenceId": {
            "maxLength": 255,
            "type": "string",
            "description": "Reference ID of the anonymous contact",
            "example": "123456"
          }
        }
      },
      "createBulkContact": {
        "maxItems": 100,
        "minItems": 1,
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/createBulkContactSchema"
        }
      },
      "Model 128": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "description": "The contacts have been successfully created"
          },
          "token": {
            "type": "string",
            "description": "The token will be used for getting status of contacts"
          }
        }
      },
      "contact": {
        "type": "object",
        "properties": {
          "full_name": {
            "maxLength": 255,
            "type": "string",
            "description": "Full Name of contact",
            "example": "Jane Doe"
          },
          "email": {
            "maxLength": 255,
            "type": "string",
            "description": "Email of contact. Can be optional only if anonymous contact feature is enabled.",
            "example": "janedoe@surveysparrow.com",
            "x-format": {
              "email": true
            }
          },
          "phone": {
            "maxLength": 255,
            "type": "string",
            "description": "Phone number of the contact",
            "example": "91234567833"
          },
          "mobile": {
            "maxLength": 255,
            "type": "string",
            "description": "Mobile number of the contact",
            "example": "1653452783"
          },
          "job_title": {
            "maxLength": 255,
            "type": "string",
            "description": "Job Title of the contact",
            "example": "Manager"
          },
          "contact_type": {
            "type": "string",
            "description": "Type of contact",
            "default": "contact",
            "enum": ["contact", "employee"]
          },
          "referenceId": {
            "maxLength": 255,
            "type": "string",
            "description": "Reference ID of the anonymous contact",
            "example": "123456"
          }
        },
        "description": "Contact of the submission",
        "example": {
          "full_name": "Jane Doe",
          "email": "janedoe@surveysparrow.com",
          "phone": "91234567833",
          "mobile": "1653452783",
          "job_title": "Manager",
          "contact_type": "contact"
        }
      },
      "ResponseMetaData": {
        "type": "object",
        "properties": {
          "os": {
            "maxLength": 255,
            "type": "string",
            "description": "OS of the response",
            "example": "macOS"
          },
          "browser": {
            "maxLength": 255,
            "type": "string",
            "description": "Browser of response",
            "example": "Chrome"
          },
          "time_zone": {
            "maxLength": 255,
            "type": "string",
            "description": "Time Zone of response",
            "example": "Asia/Calcutta"
          },
          "browser_language": {
            "maxLength": 255,
            "type": "string",
            "description": "Browser Language of the response",
            "example": "en-GB"
          },
          "date_time": {
            "type": "string",
            "description": "Date and Time of submission. Should be in the ISO format",
            "format": "date"
          }
        }
      },
      "Model 129": {
        "required": ["answers"],
        "type": "object",
        "properties": {
          "contact_id": {
            "type": "number",
            "description": "ID of the contact",
            "example": 2
          },
          "contact": {
            "$ref": "#/components/schemas/contact"
          },
          "variables": {
            "$ref": "#/components/schemas/properties"
          },
          "trigger_workflow": {
            "type": "boolean",
            "description": "Should this response trigger workflow",
            "default": true
          },
          "channel_id": {
            "type": "number",
            "description": "ID of the channel",
            "example": 3
          },
          "meta_data": {
            "$ref": "#/components/schemas/ResponseMetaData"
          },
          "answers": {
            "$ref": "#/components/schemas/getAnswerSchema"
          }
        }
      },
      "BatchResponseInput": {
        "maxItems": 200,
        "type": "array",
        "items": {
          "$ref": "#/components//schemas/Model129"
        }
      },
      "BatchImportRequestSchema": {
        "required": ["responses", "survey_id"],
        "type": "object",
        "properties": {
          "survey_id": {
            "type": "number",
            "description": "ID of the survey",
            "example": 1
          },
          "responses": {
            "$ref": "#/components/schemas/BatchResponseInput"
          }
        }
      },
      "BatchImportResponseSchema": {
        "required": ["message", "token"],
        "type": "object",
        "properties": {
          "token": {
            "type": "string",
            "description": "Job ID for tracking the batch import process",
            "example": "your_job_id_example"
          },
          "message": {
            "type": "string",
            "description": "A message indicating the acceptance of the batch import request"
          }
        }
      },
      "startResponseSchema": {
        "required": ["survey_id"],
        "type": "object",
        "properties": {
          "survey_id": {
            "type": "number",
            "description": "ID of the survey",
            "example": 1
          },
          "contact_id": {
            "type": "number",
            "description": "ID of the contact",
            "example": 2
          },
          "channel_id": {
            "type": "number",
            "description": "ID of the channel",
            "example": 3
          },
          "meta_data": {
            "$ref": "#/components/schemas/ResponseMetaData"
          }
        }
      },
      "Model 130": {
        "required": ["id", "start_time", "state"],
        "type": "object",
        "properties": {
          "id": {
            "type": "number",
            "description": "ID of the response",
            "example": 1
          },
          "state": {
            "type": "string",
            "description": "State of the response",
            "example": "STARTED"
          },
          "start_time": {
            "type": "string",
            "description": "Start Time of the response"
          }
        }
      },
      "getStartResponseResponse": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components//schemas/Model130"
          }
        }
      },
      "subject": {
        "required": ["email", "full_name"],
        "type": "object",
        "properties": {
          "full_name": {
            "type": "string"
          },
          "email": {
            "type": "string",
            "x-format": {
              "email": true
            }
          }
        }
      },
      "Model 131": {
        "required": ["email", "full_name", "relation"],
        "type": "object",
        "properties": {
          "full_name": {
            "type": "string"
          },
          "email": {
            "type": "string",
            "x-format": {
              "email": true
            }
          },
          "relation": {
            "type": "string"
          }
        }
      },
      "evaluators": {
        "type": "array",
        "items": {
          "$ref": "#/components//schemas/Model131"
        }
      },
      "Model 132": {
        "required": ["require_approval", "self_evaluation", "self_nomination"],
        "type": "object",
        "properties": {
          "require_approval": {
            "type": "boolean"
          },
          "self_evaluation": {
            "type": "boolean"
          },
          "self_nomination": {
            "type": "boolean"
          }
        }
      },
      "Model 133": {
        "required": ["approver", "evaluators", "properties", "subject"],
        "type": "object",
        "properties": {
          "subject": {
            "$ref": "#/components/schemas/subject"
          },
          "evaluators": {
            "$ref": "#/components/schemas/evaluators"
          },
          "approver": {
            "$ref": "#/components/schemas/subject"
          },
          "properties": {
            "$ref": "#/components//schemas/Model132"
          },
          "invite_now": {
            "type": "boolean"
          },
          "schedule": {
            "type": "string",
            "format": "date"
          }
        }
      },
      "createBulkTickets": {
        "type": "object",
        "properties": {
          "requester_id": {
            "type": "number",
            "description": "Ticket requester's contact id",
            "example": 1
          },
          "email": {
            "type": "string",
            "description": "Ticket requester's contact email",
            "example": "abc@ymail.com"
          },
          "phone": {
            "type": "string",
            "description": "Ticket requester's contact phone",
            "example": "+ 123 23"
          },
          "subject": {
            "maxLength": 200,
            "type": "string",
            "description": "Ticket subject",
            "example": "Ticket subject 1",
            "x-alternatives": [
              {
                "type": "string",
                "description": "Ticket subject",
                "example": "Ticket subject 1",
                "maxLength": 200
              },
              {
                "type": "string",
                "description": "Ticket subject",
                "example": "Ticket subject 1",
                "maxLength": 200
              }
            ]
          },
          "description": {
            "type": "string",
            "description": "Ticket description",
            "example": "Ticket description 1"
          },
          "priority": {
            "type": "number",
            "description": "Ticket priority",
            "example": 2,
            "x-alternatives": [
              {
                "type": "number",
                "description": "Ticket priority",
                "example": 2
              },
              {
                "type": "number",
                "description": "Ticket priority",
                "example": 2
              }
            ]
          },
          "status": {
            "type": "number",
            "description": "Ticket status",
            "example": 3,
            "x-alternatives": [
              {
                "type": "number",
                "description": "Ticket status",
                "example": 3
              },
              {
                "type": "number",
                "description": "Ticket status",
                "example": 3
              }
            ]
          },
          "source": {
            "type": "number",
            "description": "Ticket source",
            "example": 4
          },
          "submission_id": {
            "type": "number",
            "description": "Response ID",
            "example": 5
          },
          "nps_submission_id": {
            "type": "number",
            "description": "NPS Response ID",
            "example": 6
          },
          "assignee_id": {
            "type": "number",
            "description": "Ticket agent's user id",
            "example": 7
          },
          "team_id": {
            "type": "number",
            "description": "Ticket team's id",
            "example": 8
          },
          "custom_fields": {
            "$ref": "#/components/schemas/properties"
          }
        }
      },
      "createTicketInBatch": {
        "maxItems": 100,
        "minItems": 1,
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/createBulkTickets"
        }
      },
      "Model 134": {
        "required": ["message", "token"],
        "type": "object",
        "properties": {
          "message": {
            "type": "string"
          },
          "token": {
            "type": "string"
          }
        }
      },
      "variableSchema": {
        "required": ["label", "name", "type"],
        "type": "object",
        "properties": {
          "label": {
            "maxLength": 64,
            "type": "string"
          },
          "name": {
            "maxLength": 35,
            "type": "string"
          },
          "description": {
            "maxLength": 200,
            "type": "string"
          },
          "type": {
            "type": "string",
            "enum": ["STRING", "NUMBER", "DATE"]
          }
        }
      },
      "variables": {
        "maxItems": 50,
        "minItems": 1,
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/variableSchema"
        }
      },
      "createBulkVariablesSchema": {
        "required": ["survey_id", "variables"],
        "type": "object",
        "properties": {
          "survey_id": {
            "type": "number",
            "description": "Id of Survey",
            "example": 1
          },
          "variables": {
            "$ref": "#/components/schemas/variables"
          }
        }
      },
      "createVariablesVariablesSchema": {
        "maxItems": 50,
        "minItems": 1,
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/getVariableSchema"
        }
      },
      "createVariablesResponseSchema": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/createVariablesVariablesSchema"
          }
        }
      },
      "Model 135": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "enum": [
              "SURVEY_CREATED",
              "SURVEY_EDITED",
              "SURVEY_DELETED",
              "THEME_ADDED",
              "THEME_EDITED",
              "THEME_DELETED",
              "USER_CREATED",
              "USER_DELETED",
              "USER_EDITED",
              "CONTACT_CREATED",
              "CONTACT_UPDATED",
              "CONTACT_DELETED",
              "CONTACT_PROPERTY_CREATED",
              "CONTACT_PROPERTY_EDITED",
              "CONTACT_PROPERTY_DELETED",
              "WORKSPACE_CREATED",
              "WORKSPACE_DELETED",
              "WORKSPACE_EDITED",
              "SYNC_DEVICES",
              "SURVEY_RESPONSE_IMPORT",
              "SURVEY_RESPONSE_DELETION",
              "SURVEY_CLOSED",
              "SURVEY_RESTORED",
              "SURVEY_OWNERSHIP_TRANSFER",
              "FOLDER_USER_ACCESS_GRANT",
              "FOLDER_USER_ACCESS_REMOVE",
              "FOLDER_TEAM_ACCESS_GRANT",
              "FOLDER_TEAM_ACCESS_REMOVE",
              "SURVEY_MOVED",
              "SURVEY_PASSWORD_CREATED",
              "SURVEY_PASSWORD_DELETED",
              "SURVEY_PASSWORD_EDITED",
              "QUESTION_CATALOG_CREATED",
              "QUESTION_CATALOG_DELETED",
              "LOGIN",
              "LOGOUT"
            ]
          }
        }
      },
      "Model 136": {
        "minItems": 1,
        "type": "array",
        "items": {
          "$ref": "#/components//schemas/Model135"
        }
      },
      "Model 137": {
        "required": ["events", "httpMethod", "url"],
        "type": "object",
        "properties": {
          "events": {
            "$ref": "#/components//schemas/Model136"
          },
          "httpMethod": {
            "type": "string",
            "enum": ["GET", "PUT", "POST", "DELETE"]
          },
          "url": {
            "type": "string",
            "x-format": {
              "uri": true
            }
          },
          "headers": {
            "$ref": "#/components/schemas/properties"
          }
        }
      },
      "Model 138": {
        "required": ["email"],
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "x-format": {
              "email": true
            }
          },
          "variables": {
            "$ref": "#/components/schemas/properties"
          }
        }
      },
      "Model 139": {
        "maxItems": 2000,
        "type": "array",
        "items": {
          "$ref": "#/components//schemas/Model138"
        }
      },
      "Model 140": {
        "required": ["label"],
        "type": "object",
        "properties": {
          "id": {
            "type": "number",
            "x-alternatives": [
              {
                "type": "number"
              },
              {
                "type": "string"
              }
            ]
          },
          "label": {
            "type": "string"
          }
        }
      },
      "Model 141": {
        "type": "array",
        "items": {
          "$ref": "#/components//schemas/Model140"
        }
      },
      "Model 142": {
        "type": "object",
        "properties": {
          "body": {
            "type": "string"
          },
          "subject": {
            "type": "string"
          },
          "replyEmail": {
            "type": "string"
          },
          "fromAddress": {
            "type": "string"
          }
        }
      },
      "Model 143": {
        "required": ["frequency", "interval", "type"],
        "type": "object",
        "properties": {
          "body": {
            "type": "string"
          },
          "subject": {
            "type": "string"
          },
          "frequency": {
            "type": "string",
            "enum": ["Days", "Weeks", "Months"]
          },
          "type": {
            "type": "string",
            "enum": ["NOT_RESPONDED", "PARTIALLY_RESPONDED"]
          },
          "interval": {
            "type": "number"
          },
          "properties": {
            "$ref": "#/components//schemas/Model101"
          }
        }
      },
      "Model 144": {
        "type": "array",
        "items": {
          "$ref": "#/components//schemas/Model143"
        }
      },
      "Model 145": {
        "type": "object",
        "properties": {
          "contacts": {
            "$ref": "#/components//schemas/Model139"
          },
          "contactLists": {
            "$ref": "#/components/schemas/getContactSchema"
          },
          "sendNow": {
            "type": "boolean",
            "default": true
          },
          "mode": {
            "type": "string",
            "default": "BLAST"
          },
          "type": {
            "type": "string",
            "default": "EMAIL"
          },
          "name": {
            "type": "string",
            "default": "Email Share"
          },
          "delayed": {
            "type": "string",
            "x-alternatives": [
              {
                "type": "string",
                "required": ["delayed"],
                "x-alternatives": [
                  {
                    "type": "string"
                  }
                ]
              }
            ]
          },
          "schedule": {
            "type": "string",
            "x-alternatives": [
              {
                "type": "string"
              },
              {
                "$ref": "#/x-alt-definitions/Model 13"
              }
            ]
          },
          "customProperties": {
            "$ref": "#/components/schemas/properties"
          },
          "variables": {
            "$ref": "#/components/schemas/properties"
          },
          "questions": {
            "$ref": "#/components//schemas/Model141"
          },
          "meetingTime": {
            "type": "string"
          },
          "properties": {
            "$ref": "#/components//schemas/Model142"
          },
          "embed_first_question": {
            "type": "boolean",
            "default": true
          },
          "custom_footer": {
            "type": "boolean",
            "default": false
          },
          "custom_footer_value": {
            "type": "string"
          },
          "ignoreThrottledContacts": {
            "type": "boolean",
            "default": true
          },
          "reminders": {
            "$ref": "#/components//schemas/Model144"
          }
        }
      },
      "Model 146": {
        "required": ["mobile"],
        "type": "object",
        "properties": {
          "mobile": {
            "type": "string"
          },
          "variables": {
            "$ref": "#/components/schemas/properties"
          }
        }
      },
      "Model 147": {
        "maxItems": 2000,
        "type": "array",
        "items": {
          "$ref": "#/components//schemas/Model146"
        }
      },
      "Model 148": {
        "required": ["content"],
        "type": "object",
        "properties": {
          "content": {
            "maxLength": 140,
            "type": "string"
          },
          "smsTargetId": {
            "type": "number"
          },
          "acceptAnonymousResponse": {
            "type": "boolean"
          },
          "twilio_consent_agreed": {
            "type": "boolean",
            "description": "For using surveysparrow message service you need to agree the consent."
          }
        }
      },
      "Model 149": {
        "required": ["properties"],
        "type": "object",
        "properties": {
          "contacts": {
            "$ref": "#/components//schemas/Model147"
          },
          "contactLists": {
            "$ref": "#/components/schemas/getContactSchema"
          },
          "sendNow": {
            "type": "boolean",
            "default": true
          },
          "mode": {
            "type": "string",
            "default": "BLAST"
          },
          "type": {
            "type": "string",
            "default": "SMS"
          },
          "name": {
            "type": "string",
            "default": "SMS Share"
          },
          "delayed": {
            "type": "string",
            "x-alternatives": [
              {
                "type": "string",
                "required": ["delayed"],
                "x-alternatives": [
                  {
                    "type": "string"
                  }
                ]
              }
            ]
          },
          "schedule": {
            "type": "string",
            "x-alternatives": [
              {
                "type": "string"
              },
              {
                "$ref": "#/x-alt-definitions/Model 13"
              }
            ]
          },
          "customProperties": {
            "$ref": "#/components/schemas/properties"
          },
          "variables": {
            "$ref": "#/components/schemas/properties"
          },
          "properties": {
            "$ref": "#/components//schemas/Model148"
          },
          "ignoreThrottledContacts": {
            "type": "boolean",
            "default": true
          }
        }
      },
      "Model 150": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Full Name of contact",
            "example": "Jane Doe"
          },
          "phone": {
            "type": "string",
            "description": "Phone number of the contact",
            "example": "91234567833"
          },
          "mobile": {
            "type": "string",
            "description": "Mobile number of the contact",
            "example": "1653452783"
          },
          "email": {
            "type": "string",
            "description": "Email of contact",
            "example": "janedoe@surveysparrow.com",
            "x-alternatives": [
              {
                "type": "string",
                "description": "Email of contact",
                "example": "janedoe@surveysparrow.com",
                "x-format": {
                  "email": true
                }
              },
              {
                "type": "string",
                "description": "Email of contact",
                "example": "janedoe@surveysparrow.com",
                "x-format": {
                  "email": true
                }
              }
            ],
            "x-format": {
              "email": true
            }
          },
          "jobTitle": {
            "type": "string",
            "description": "Job Title of the contact",
            "example": "Manager"
          },
          "contact_type": {
            "type": "string",
            "description": "Type of contact",
            "default": "contact",
            "enum": ["contact", "employee"]
          }
        }
      },
      "Model 151": {
        "type": "array",
        "items": {
          "$ref": "#/components//schemas/Model150"
        }
      },
      "Model 152": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "description": "The contacts have been successfully created",
            "enum": ["created/updated"]
          }
        }
      },
      "Model 153": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "description": "The contacts are under creation, please check contacts page in some time.",
            "enum": ["pending"]
          }
        }
      },
      "Model 154": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Full Name of contact",
            "example": "Jane Doe"
          },
          "phone": {
            "type": "string",
            "description": "Phone number of the contact",
            "example": "91234567833"
          },
          "mobile": {
            "type": "string",
            "description": "Mobile number of the contact",
            "example": "1653452783"
          },
          "email": {
            "type": "string",
            "description": "Email of contact",
            "example": "janedoe@surveysparrow.com",
            "x-alternatives": [
              {
                "type": "string",
                "description": "Email of contact",
                "example": "janedoe@surveysparrow.com",
                "x-format": {
                  "email": true
                }
              },
              {
                "type": "string",
                "description": "Email of contact",
                "example": "janedoe@surveysparrow.com",
                "x-format": {
                  "email": true
                }
              }
            ],
            "x-format": {
              "email": true
            }
          },
          "jobTitle": {
            "type": "string",
            "description": "Job Title of the contact",
            "example": "Manager"
          }
        }
      },
      "Model 155": {
        "type": "array",
        "items": {
          "$ref": "#/components//schemas/Model154"
        }
      },
      "Model 156": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "description": "The contacts have been successfully created",
            "enum": ["created"]
          }
        }
      },
      "Model 157": {
        "type": "object",
        "properties": {
          "contacts": {
            "$ref": "#/components//schemas/Model139"
          },
          "contactLists": {
            "$ref": "#/components/schemas/getContactSchema"
          },
          "sendNow": {
            "type": "boolean",
            "default": true
          },
          "mode": {
            "type": "string",
            "default": "BLAST"
          },
          "type": {
            "type": "string",
            "default": "EMAIL"
          },
          "name": {
            "type": "string",
            "default": "Email Share"
          },
          "delayed": {
            "type": "string",
            "x-alternatives": [
              {
                "type": "string",
                "required": ["delayed"],
                "x-alternatives": [
                  {
                    "type": "string"
                  }
                ]
              }
            ]
          },
          "schedule": {
            "type": "string",
            "x-alternatives": [
              {
                "type": "string"
              },
              {
                "$ref": "#/x-alt-definitions/Model 13"
              }
            ]
          },
          "customProperties": {
            "$ref": "#/components/schemas/properties"
          },
          "variables": {
            "$ref": "#/components/schemas/properties"
          },
          "questions": {
            "$ref": "#/components//schemas/Model141"
          },
          "meetingTime": {
            "type": "string"
          },
          "properties": {
            "$ref": "#/components//schemas/Model142"
          },
          "ignoreThrottledContacts": {
            "type": "boolean",
            "default": true
          },
          "reminders": {
            "$ref": "#/components//schemas/Model144"
          },
          "embed_first_question": {
            "type": "boolean",
            "default": true
          },
          "custom_footer": {
            "type": "boolean",
            "default": false
          },
          "custom_footer_value": {
            "type": "string"
          }
        }
      },
      "Model 158": {
        "type": "object",
        "properties": {
          "Rating": {
            "maximum": 5,
            "minimum": 1,
            "type": "number"
          }
        }
      },
      "answers": {
        "type": "array",
        "items": {
          "$ref": "#/components//schemas/Model158"
        }
      },
      "Model 159": {
        "type": "object",
        "properties": {
          "device_id": {
            "type": "string"
          },
          "answers": {
            "$ref": "#/components/schemas/answers"
          }
        }
      },
      "Model 160": {
        "required": ["custom_footer", "embed_first_question"],
        "type": "object",
        "properties": {
          "embed_first_question": {
            "type": "boolean"
          },
          "custom_footer": {
            "type": "boolean"
          },
          "custom_footer_value": {
            "type": "string"
          }
        }
      },
      "Model 161": {
        "required": ["frequency", "interval", "type"],
        "type": "object",
        "properties": {
          "body": {
            "type": "string"
          },
          "subject": {
            "type": "string"
          },
          "frequency": {
            "type": "string",
            "enum": ["Days", "Weeks", "Months"]
          },
          "type": {
            "type": "string",
            "enum": ["NOT_RESPONDED", "PARTIALLY_RESPONDED"]
          },
          "interval": {
            "type": "number"
          },
          "properties": {
            "$ref": "#/components//schemas/Model160"
          }
        }
      },
      "Model 162": {
        "type": "array",
        "items": {
          "$ref": "#/components//schemas/Model161"
        }
      },
      "Model 163": {
        "type": "object",
        "properties": {
          "contacts": {
            "$ref": "#/components//schemas/Model139"
          },
          "contactLists": {
            "$ref": "#/components/schemas/getContactSchema"
          },
          "sendNow": {
            "type": "boolean",
            "default": true
          },
          "mode": {
            "type": "string",
            "default": "BLAST"
          },
          "type": {
            "type": "string",
            "default": "EMAIL"
          },
          "name": {
            "type": "string",
            "default": "Email Share"
          },
          "delayed": {
            "type": "string",
            "x-alternatives": [
              {
                "type": "string",
                "required": ["delayed"],
                "x-alternatives": [
                  {
                    "type": "string"
                  }
                ]
              }
            ]
          },
          "schedule": {
            "type": "string",
            "x-alternatives": [
              {
                "type": "string"
              },
              {
                "$ref": "#/x-alt-definitions/Model 13"
              }
            ]
          },
          "customProperties": {
            "$ref": "#/components/schemas/properties"
          },
          "variables": {
            "$ref": "#/components/schemas/properties"
          },
          "questions": {
            "$ref": "#/components//schemas/Model141"
          },
          "meetingTime": {
            "type": "string"
          },
          "properties": {
            "$ref": "#/components//schemas/Model142"
          },
          "ignoreThrottledContacts": {
            "type": "boolean",
            "default": true
          },
          "reminders": {
            "$ref": "#/components//schemas/Model162"
          },
          "embed_first_question": {
            "type": "boolean",
            "default": true
          },
          "custom_footer": {
            "type": "boolean",
            "default": false
          },
          "custom_footer_value": {
            "type": "string"
          }
        }
      },
      "Model 164": {
        "maxItems": 2000,
        "minItems": 1,
        "type": "array",
        "items": {
          "type": "string"
        }
      },
      "lists": {
        "maxItems": 10,
        "minItems": 1,
        "type": "array",
        "items": {
          "type": "string"
        }
      },
      "Model 165": {
        "type": "object",
        "properties": {
          "contacts": {
            "$ref": "#/components//schemas/Model164"
          },
          "lists": {
            "$ref": "#/components/schemas/lists"
          },
          "variables": {
            "$ref": "#/components/schemas/properties"
          },
          "customParams": {
            "$ref": "#/components/schemas/properties"
          },
          "sendLaterInDays": {
            "minimum": 1,
            "type": "number"
          },
          "sendLater": {
            "type": "string",
            "format": "date"
          }
        }
      },
      "Model 166": {
        "required": ["email", "fullName"],
        "type": "object",
        "properties": {
          "fullName": {
            "type": "string"
          },
          "email": {
            "type": "string",
            "x-format": {
              "email": true
            }
          }
        }
      },
      "Model 167": {
        "required": ["email", "fullName", "relation"],
        "type": "object",
        "properties": {
          "fullName": {
            "type": "string"
          },
          "email": {
            "type": "string",
            "x-format": {
              "email": true
            }
          },
          "relation": {
            "type": "string"
          }
        }
      },
      "Model 168": {
        "type": "array",
        "items": {
          "$ref": "#/components//schemas/Model167"
        }
      },
      "Model 169": {
        "required": ["requireApproval", "selfEvaluation", "selfNomination"],
        "type": "object",
        "properties": {
          "requireApproval": {
            "type": "boolean"
          },
          "selfEvaluation": {
            "type": "boolean"
          },
          "selfNomination": {
            "type": "boolean"
          }
        }
      },
      "Model 170": {
        "required": ["approver", "evaluators", "properties", "subject"],
        "type": "object",
        "properties": {
          "subject": {
            "$ref": "#/components//schemas/Model166"
          },
          "evaluators": {
            "$ref": "#/components//schemas/Model168"
          },
          "approver": {
            "$ref": "#/components//schemas/Model166"
          },
          "properties": {
            "$ref": "#/components//schemas/Model169"
          },
          "inviteNow": {
            "type": "boolean"
          },
          "schedule": {
            "type": "string",
            "format": "date"
          }
        }
      },
      "Model 171": {
        "type": "object",
        "properties": {
          "surveyType": {
            "type": "string",
            "enum": [
              "Conversational",
              "Poll",
              "ClassicForm",
              "Kiosk",
              "OfflineApp",
              "NPS",
              "NPSChat",
              "CES",
              "CESChat",
              "CSAT",
              "CSATChat",
              "Employee360"
            ],
            "x-convert": {
              "trim": true
            }
          },
          "name": {
            "type": "string"
          }
        }
      },
      "Model 172": {
        "type": "object",
        "properties": {
          "label": {
            "type": "string",
            "default": "Continue"
          },
          "sectionRandomise": {
            "type": "boolean",
            "default": false
          }
        }
      },
      "Model 173": {
        "required": ["comparator", "type"],
        "type": "object",
        "properties": {
          "join_condition": {
            "type": "string",
            "default": "and",
            "enum": ["and", "or"]
          },
          "type": {
            "type": "string",
            "enum": ["param"]
          },
          "comparator": {
            "type": "string",
            "enum": [
              "isPassed",
              "isNotPassed",
              "startsWith",
              "endsWith",
              "contains",
              "equalsString",
              "doesNotContain",
              "notEqualTo",
              "lessThanForParam",
              "greaterThanForParam"
            ]
          },
          "variable_id": {
            "type": "number",
            "x-alternatives": [
              {
                "type": "number"
              }
            ]
          },
          "value": {
            "type": "string",
            "default": ""
          }
        }
      },
      "Model 174": {
        "type": "array",
        "items": {
          "$ref": "#/components//schemas/Model173"
        }
      },
      "displayLogic": {
        "type": "object",
        "properties": {
          "logics": {
            "$ref": "#/components//schemas/Model174"
          }
        }
      },
      "Model 175": {
        "type": "array",
        "items": {
          "pattern": "/^[a-zA-Z ]*$/",
          "type": "string"
        }
      },
      "Model 176": {
        "type": "object",
        "properties": {
          "text": {
            "type": "string"
          },
          "score": {
            "type": "number"
          }
        }
      },
      "Model 177": {
        "type": "array",
        "items": {
          "$ref": "#/components//schemas/Model176"
        }
      },
      "allOfTheAboveText": {
        "type": "object",
        "properties": {
          "text": {
            "type": "string"
          }
        }
      },
      "Model 178": {
        "type": "object",
        "properties": {
          "min": {
            "type": "string"
          },
          "max": {
            "type": "string"
          },
          "step": {
            "type": "number"
          },
          "wait": {
            "type": "number"
          },
          "type": {
            "type": "string",
            "enum": ["SINGLE_LINE", "MULTI_LINE", "UNLIMITED", "EXACT", "RANGE"]
          },
          "start": {
            "type": "number"
          },
          "fileTypes": {
            "$ref": "#/components/schemas/fileTypes"
          },
          "minLimit": {
            "type": "number",
            "x-alternatives": [
              {
                "type": "number"
              }
            ]
          },
          "maxLimit": {
            "type": "number",
            "x-alternatives": [
              {
                "type": "number"
              }
            ]
          },
          "exactChoices": {
            "type": "number",
            "x-alternatives": [
              {
                "type": "number"
              }
            ]
          }
        }
      },
      "Model 179": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components//schemas/Model178"
          }
        }
      },
      "Model 180": {
        "required": ["text", "type"],
        "type": "object",
        "properties": {
          "text": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "required": {
            "type": "boolean"
          },
          "type": {
            "type": "string",
            "enum": ["FileInput", "TextInput", "OpinionScale", "MultiChoice"]
          },
          "desc": {
            "maxLength": 10000,
            "type": "string"
          },
          "optionsStacked": {
            "type": "boolean"
          },
          "randomized": {
            "type": "boolean"
          },
          "multipleAnswers": {
            "type": "boolean"
          },
          "img": {
            "maxLength": 2000,
            "type": "string"
          },
          "video": {
            "maxLength": 2000,
            "type": "string"
          },
          "audio": {
            "maxLength": 2000,
            "type": "string"
          },
          "tags": {
            "$ref": "#/components//schemas/Model175"
          },
          "choices": {
            "$ref": "#/components//schemas/Model177"
          },
          "hasScore": {
            "type": "boolean"
          },
          "other": {
            "type": "boolean"
          },
          "allOfTheAbove": {
            "type": "boolean"
          },
          "noneOfTheAbove": {
            "type": "boolean"
          },
          "otherText": {
            "$ref": "#/components//schemas/Model176"
          },
          "noneOfTheAboveText": {
            "$ref": "#/components//schemas/Model176"
          },
          "allOfTheAboveText": {
            "$ref": "#/components/schemas/allOfTheAboveText"
          },
          "properties": {
            "$ref": "#/components//schemas/Model179"
          },
          "displayLogic": {
            "$ref": "#/components/schemas/displayLogic"
          }
        }
      },
      "Model 181": {
        "maxItems": 50,
        "type": "array",
        "items": {
          "$ref": "#/components//schemas/Model180"
        }
      },
      "Model 182": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "properties": {
            "$ref": "#/components//schemas/Model172"
          },
          "displayLogic": {
            "$ref": "#/components/schemas/displayLogic"
          },
          "questions": {
            "$ref": "#/components//schemas/Model181"
          }
        }
      },
      "Model 183": {
        "required": ["survey_id"],
        "type": "object",
        "properties": {
          "survey_id": {
            "type": "number",
            "description": "Id of the survey",
            "example": 1
          }
        }
      },
      "Model 184": {
        "type": "object",
        "properties": {
          "survey_type": {
            "type": "string",
            "description": "Survey type to be Cloned.",
            "example": "Conversational",
            "enum": [
              "Conversational",
              "ClassicForm",
              "Kiosk",
              "OfflineApp",
              "NPS",
              "NPSChat",
              "CES",
              "CESChat",
              "CSAT",
              "CSATChat",
              "Employee360"
            ],
            "x-convert": {
              "trim": true
            }
          },
          "name": {
            "maxLength": 200,
            "minLength": 1,
            "type": "string",
            "description": "Name of the Cloned Survey",
            "example": "Employee satisfaction survey"
          }
        }
      },
      "Model 185": {
        "required": ["body"],
        "type": "object",
        "properties": {
          "body": {
            "type": "string",
            "description": "The comment body. Supports HTML formatting with <b>, <i>, <u>, <a>, and <br /> tags."
          },
          "attachments": {
            "type": "file",
            "description": "Following file types are allowed: pdf, png, jpeg, mp3, csv, wav. Maximum file size allowed is 15MB.",
            "format": "binary",
            "x-meta": {
              "swaggerType": "file"
            }
          },
          "private": {
            "type": "boolean",
            "description": "Comment visibility; true for private, false for public visibility.",
            "default": false
          }
        }
      },
      "TicketCommentSchema": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/tiketCommentSchema"
          }
        }
      },
      "Model 186": {
        "type": "object",
        "properties": {
          "contacts": {
            "$ref": "#/components//schemas/Model147"
          },
          "contactLists": {
            "$ref": "#/components/schemas/getContactSchema"
          },
          "variables": {
            "$ref": "#/components/schemas/properties"
          },
          "sendLaterInDays": {
            "minimum": 1,
            "type": "number"
          },
          "twilio_consent_agreed": {
            "type": "boolean",
            "description": "For using surveysparrow message service you need to agree the consent."
          }
        }
      },
      "Model 187": {
        "type": "object",
        "properties": {
          "contacts": {
            "$ref": "#/components//schemas/Model139"
          },
          "name": {
            "type": "string"
          },
          "contactLists": {
            "$ref": "#/components/schemas/getContactSchema"
          },
          "sendLaterInDays": {
            "minimum": 1,
            "type": "number"
          },
          "customProperties": {
            "$ref": "#/components/schemas/properties"
          }
        }
      },
      "metaData": {
        "type": "object",
        "properties": {
          "os": {
            "type": "string"
          },
          "browser": {
            "type": "string"
          },
          "timeZone": {
            "type": "string"
          },
          "browserLanguage": {
            "type": "string"
          },
          "date_time": {
            "type": "string",
            "description": "Date and Time of submission. Should be in the ISO format",
            "format": "date"
          }
        }
      },
      "Model 188": {
        "type": "object",
        "properties": {
          "contact_id": {
            "type": "number"
          },
          "channel_id": {
            "type": "number"
          },
          "metaData": {
            "$ref": "#/components/schemas/metaData"
          }
        }
      },
      "Model 189": {
        "maxItems": 2000,
        "minItems": 1,
        "type": "array",
        "items": {
          "$ref": "#/components//schemas/Model138"
        }
      },
      "Model 190": {
        "required": ["name"],
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "variables": {
            "$ref": "#/components/schemas/properties"
          }
        }
      },
      "Model 191": {
        "maxItems": 10,
        "minItems": 1,
        "type": "array",
        "items": {
          "$ref": "#/components//schemas/Model190"
        }
      },
      "Model 192": {
        "type": "object",
        "properties": {
          "contacts": {
            "$ref": "#/components//schemas/Model189"
          },
          "lists": {
            "$ref": "#/components//schemas/Model191"
          },
          "variables": {
            "$ref": "#/components/schemas/properties"
          },
          "sendLaterInDays": {
            "minimum": 1,
            "type": "number"
          },
          "sendLater": {
            "type": "string",
            "format": "date"
          },
          "ignoreThrottledContacts": {
            "type": "boolean",
            "default": true
          }
        }
      },
      "contactIds": {
        "maxItems": 100,
        "type": "array",
        "items": {
          "type": "number"
        }
      },
      "Model 193": {
        "type": "object",
        "properties": {
          "contactIds": {
            "$ref": "#/components/schemas/contactIds"
          },
          "contactListIds": {
            "$ref": "#/components/schemas/teams"
          },
          "channelType": {
            "type": "string",
            "default": "EMAIL",
            "enum": ["EMAIL", "EMBED"],
            "x-convert": {
              "uppercase": true
            }
          }
        }
      },
      "Model 194": {
        "required": ["language_code", "survey_id"],
        "type": "object",
        "properties": {
          "survey_id": {
            "type": "number",
            "description": "Survey ID",
            "example": 123456
          },
          "language_code": {
            "type": "string",
            "description": "Language code",
            "example": "en"
          },
          "google_translate": {
            "type": "boolean",
            "description": "Translate using Google Translate",
            "example": false,
            "default": false
          },
          "file": {
            "type": "file",
            "description": "Excel file containing translations",
            "format": "binary",
            "x-meta": {
              "swaggerType": "file"
            }
          }
        }
      },
      "Model 195": {
        "required": ["message"],
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "description": "Message",
            "example": "Translation updated successfully"
          }
        },
        "description": "Response data"
      },
      "Model 196": {
        "required": ["data"],
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components//schemas/Model195"
          }
        }
      },
      "Model 197": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Full Name of contact",
            "example": "Jane Doe"
          },
          "email": {
            "type": "string",
            "description": "Email of contact",
            "example": "janedoe@surveysparrow.com",
            "x-format": {
              "email": true
            }
          },
          "phone": {
            "type": "string",
            "description": "Phone number of the contact",
            "example": "91234567833"
          },
          "mobile": {
            "type": "string",
            "description": "Mobile number of the contact",
            "example": "1653452783"
          },
          "jobTitle": {
            "type": "string",
            "description": "Job Title of the contact",
            "example": "Manager"
          }
        }
      },
      "Model 198": {
        "type": "object",
        "properties": {
          "preAdded": {
            "type": "boolean"
          },
          "message": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "redirectBoolean": {
            "type": "boolean"
          },
          "redirectMultiBoolean": {
            "type": "boolean"
          },
          "redirect": {
            "type": "string",
            "x-alternatives": [
              {
                "type": "string"
              },
              {
                "type": "string"
              }
            ]
          },
          "branding": {
            "type": "boolean"
          },
          "redirectMulti": {
            "$ref": "#/components/schemas/properties"
          }
        }
      },
      "Model 199": {
        "type": "array",
        "items": {
          "$ref": "#/components//schemas/Model198"
        }
      },
      "Model 200": {
        "type": "object",
        "properties": {
          "name": {
            "maxLength": 200,
            "type": "string"
          },
          "workspace_id": {
            "type": "number"
          },
          "theme_id": {
            "type": "number"
          },
          "welcomeDescriptionEnabled": {
            "type": "boolean",
            "default": true
          },
          "welcomeScreenYesButtonText": {
            "maxLength": 250,
            "type": "string"
          },
          "welcomeText": {
            "type": "string"
          },
          "welcomeDescription": {
            "type": "string"
          },
          "addThankyouPage": {
            "type": "boolean",
            "default": false
          },
          "thankyou_json": {
            "$ref": "#/components//schemas/Model199"
          },
          "archived": {
            "type": "boolean"
          }
        }
      },
      "Model 201": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "x-convert": {
              "trim": true
            }
          },
          "role_id": {
            "type": "number"
          }
        }
      },
      "Model 202": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "url": {
            "type": "string"
          },
          "httpMethod": {
            "type": "string",
            "enum": ["POST", "GET", "PATCH", "PUT", "DELETE"]
          },
          "headers": {
            "$ref": "#/components//schemas/Model69"
          },
          "payload": {
            "$ref": "#/components/schemas/properties"
          }
        }
      },
      "Model 203": {
        "type": "object",
        "properties": {
          "visibility": {
            "type": "string",
            "enum": ["ALL", "PRIVATE"]
          },
          "teams": {
            "$ref": "#/components/schemas/teams"
          },
          "users": {
            "$ref": "#/components/schemas/teams"
          },
          "name": {
            "type": "string",
            "x-convert": {
              "trim": true
            }
          }
        }
      },
      "Model 204": {
        "required": ["survey_id"],
        "type": "object",
        "properties": {
          "survey_id": {
            "type": "number",
            "description": "Id of the survey"
          }
        }
      },
      "updateContactSchema": {
        "type": "object",
        "properties": {
          "full_name": {
            "maxLength": 255,
            "type": "string",
            "description": "Full Name of contact",
            "example": "Jane Doe"
          },
          "email": {
            "maxLength": 255,
            "type": "string",
            "description": "Email of contact. Can be optional only if anonymous contact feature is enabled.",
            "example": "janedoe@surveysparrow.com",
            "x-format": {
              "email": true
            }
          },
          "phone": {
            "maxLength": 255,
            "type": "string",
            "description": "Phone number of the contact",
            "example": "91234567833"
          },
          "mobile": {
            "maxLength": 255,
            "type": "string",
            "description": "Mobile number of the contact",
            "example": "1653452783"
          },
          "job_title": {
            "maxLength": 255,
            "type": "string",
            "description": "Job Title of the contact",
            "example": "Manager"
          },
          "referenceId": {
            "maxLength": 255,
            "type": "string",
            "description": "Reference ID of the anonymous contact",
            "example": "123456"
          }
        }
      },
      "Model 205": {
        "required": ["active", "id", "unsubscribed", "unsubscribed_at"],
        "type": "object",
        "properties": {
          "id": {
            "type": "number",
            "description": "ID of the contact",
            "example": 1
          },
          "name": {
            "type": "string",
            "description": "Full Name of contact",
            "example": "Jane Doe"
          },
          "email": {
            "type": "string",
            "description": "Email of contact",
            "example": "janedoe@surveysparrow.com",
            "x-format": {
              "email": true
            }
          },
          "active": {
            "type": "boolean",
            "description": "if true, indicates the contact will actively receive email and sms shares",
            "example": true
          },
          "unsubscribed": {
            "type": "boolean",
            "description": "if true, indicates that the contact is unsubscribed from receiving emails",
            "example": false
          },
          "unsubscribed_at": {
            "type": "string",
            "description": "when the contact has unsubscribed",
            "format": "date"
          },
          "phone": {
            "type": "string",
            "description": "Phone number of the contact",
            "example": "9123456783"
          },
          "mobile": {
            "type": "string",
            "description": "Mobile number of the contact",
            "example": "8782828247"
          },
          "jobTitle": {
            "type": "string",
            "description": "Job Title of the contact",
            "example": "Manager"
          },
          "contactLists": {
            "$ref": "#/components//schemas/Model23"
          }
        }
      },
      "Model 206": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components//schemas/Model205"
          }
        }
      },
      "Model 207": {
        "type": "object",
        "properties": {
          "min": {
            "type": "string"
          },
          "max": {
            "type": "string"
          },
          "step": {
            "type": "number"
          },
          "wait": {
            "type": "number"
          },
          "type": {
            "type": "string"
          },
          "start": {
            "type": "number"
          },
          "file_types": {
            "$ref": "#/components/schemas/fileTypes"
          },
          "include_feedback_by_rating": {
            "type": "boolean",
            "description": "To include feedback by rating for Feedback question type"
          },
          "promoter": {
            "type": "string",
            "description": "Promoter text for NPS feedback question type"
          },
          "passive": {
            "type": "string",
            "description": "Passive text for NPS feedback question type"
          },
          "detractor": {
            "type": "string",
            "description": "Detractor text for NPS feedback question type"
          },
          "low_effort": {
            "type": "string",
            "description": "Low effort text for CES feedback question type"
          },
          "neutral": {
            "type": "string",
            "description": "Neutral text for CES feedback question type"
          },
          "high_effort": {
            "type": "string",
            "description": "High effort text for CES feedback question type"
          },
          "satisfied": {
            "type": "string",
            "description": "Satisfied text for CSAT feedback question type"
          },
          "dissatisfied": {
            "type": "string",
            "description": "Dissatisfied text for CSAT feedback question type"
          },
          "translate_answers": {
            "type": "boolean",
            "description": "To translate answers for feedback question type"
          }
        }
      },
      "Model 208": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components//schemas/Model207"
          }
        }
      },
      "Model 209": {
        "required": ["type"],
        "type": "object",
        "properties": {
          "join_condition": {
            "type": "string",
            "description": "Logic operator of the Join condition",
            "example": "and",
            "default": "and",
            "enum": ["and", "or"]
          },
          "type": {
            "type": "string",
            "description": "Logic type",
            "enum": [
              "param",
              "question",
              "contact",
              "channel",
              "expression",
              "deviceType"
            ]
          },
          "comparator": {
            "type": "string",
            "enum": [
              "isPassed",
              "isNotPassed",
              "startsWith",
              "endsWith",
              "contains",
              "equalsString",
              "doesNotContain",
              "notEqualTo",
              "lessThanForParam",
              "greaterThanForParam"
            ],
            "x-alternatives": [
              {
                "type": "string",
                "enum": [
                  "isPassed",
                  "isNotPassed",
                  "startsWith",
                  "endsWith",
                  "contains",
                  "equalsString",
                  "doesNotContain",
                  "notEqualTo",
                  "lessThanForParam",
                  "greaterThanForParam"
                ]
              },
              {
                "type": "string",
                "enum": [
                  "isAnswered",
                  "isNotAnswered",
                  "startsWith",
                  "endsWith",
                  "contains",
                  "equalsString",
                  "doesNotContain",
                  "notEqualTo",
                  "isNotSelected",
                  "isSelected",
                  "equalToForScale",
                  "notEqualToForScale",
                  "lessThanForScale",
                  "greaterThanForScale",
                  "equalToForRating",
                  "notEqualToForRating",
                  "lessThanForRating",
                  "greaterThanForRating",
                  "equalToForNumber",
                  "notEqualToForNumber",
                  "lessThanForNumber",
                  "greaterThanForNumber",
                  "equalToForDate",
                  "notEqualToForDate",
                  "equalToForYesNo",
                  "notEqualToForYesNo",
                  "isAContactEmail"
                ],
                "required": ["comparator"],
                "x-alternatives": [
                  {
                    "type": "string",
                    "enum": [
                      "isAnswered",
                      "isNotAnswered",
                      "startsWith",
                      "endsWith",
                      "contains",
                      "equalsString",
                      "doesNotContain",
                      "notEqualTo",
                      "isNotSelected",
                      "isSelected",
                      "equalToForScale",
                      "notEqualToForScale",
                      "lessThanForScale",
                      "greaterThanForScale",
                      "equalToForRating",
                      "notEqualToForRating",
                      "lessThanForRating",
                      "greaterThanForRating",
                      "equalToForNumber",
                      "notEqualToForNumber",
                      "lessThanForNumber",
                      "greaterThanForNumber",
                      "equalToForDate",
                      "notEqualToForDate",
                      "equalToForYesNo",
                      "notEqualToForYesNo",
                      "isAContactEmail"
                    ]
                  },
                  {
                    "type": "string",
                    "enum": [
                      "startsWith",
                      "endsWith",
                      "contains",
                      "equalsString",
                      "equalsForDropDown",
                      "notEqualsForDropDown",
                      "hasValue",
                      "isEmpty",
                      "doesNotContain",
                      "notEqualTo",
                      "equalToForNumber",
                      "notEqualToForNumber",
                      "lessThanForNumber",
                      "greaterThanForNumber",
                      "before",
                      "after",
                      "equalToForDate",
                      "notEqualToForDate"
                    ],
                    "required": ["comparator"],
                    "x-alternatives": [
                      {
                        "type": "string",
                        "enum": [
                          "startsWith",
                          "endsWith",
                          "contains",
                          "equalsString",
                          "equalsForDropDown",
                          "notEqualsForDropDown",
                          "hasValue",
                          "isEmpty",
                          "doesNotContain",
                          "notEqualTo",
                          "equalToForNumber",
                          "notEqualToForNumber",
                          "lessThanForNumber",
                          "greaterThanForNumber",
                          "before",
                          "after",
                          "equalToForDate",
                          "notEqualToForDate"
                        ]
                      },
                      {
                        "type": "string",
                        "enum": [
                          "startsWith",
                          "endsWith",
                          "contains",
                          "equalsString",
                          "isChannelType",
                          "isNotChannelType"
                        ],
                        "required": ["comparator"],
                        "x-alternatives": [
                          {
                            "type": "string",
                            "enum": [
                              "startsWith",
                              "endsWith",
                              "contains",
                              "equalsString",
                              "isChannelType",
                              "isNotChannelType"
                            ]
                          },
                          {
                            "type": "string",
                            "enum": [
                              "equalToForNumber",
                              "notEqualToForNumber",
                              "lessThanForNumber",
                              "greaterThanForNumber",
                              "isTrue",
                              "isFalse"
                            ],
                            "required": ["comparator"],
                            "x-alternatives": [
                              {
                                "type": "string",
                                "enum": [
                                  "equalToForNumber",
                                  "notEqualToForNumber",
                                  "lessThanForNumber",
                                  "greaterThanForNumber",
                                  "isTrue",
                                  "isFalse"
                                ]
                              },
                              {
                                "type": "string",
                                "enum": ["isDevice", "isNotDevice"],
                                "required": ["comparator"],
                                "x-alternatives": [
                                  {
                                    "type": "string",
                                    "enum": ["isDevice", "isNotDevice"]
                                  }
                                ]
                              }
                            ]
                          }
                        ]
                      }
                    ]
                  }
                ]
              }
            ]
          },
          "variable_id": {
            "type": "number",
            "description": "Variable Id for the Logic",
            "x-alternatives": [
              {
                "type": "number",
                "description": "Variable Id for the Logic"
              }
            ]
          },
          "question_id": {
            "type": "number",
            "description": "Question Id for the Logic",
            "x-alternatives": [
              {
                "type": "number",
                "description": "Question Id for the Logic"
              }
            ]
          },
          "contact": {
            "type": "string",
            "description": "Contact property for the Logic",
            "enum": [
              "firstName",
              "lastName",
              "email",
              "phone",
              "mobile",
              "jobTitle",
              "language"
            ],
            "x-alternatives": [
              {
                "type": "string",
                "description": "Contact property for the Logic",
                "enum": [
                  "firstName",
                  "lastName",
                  "email",
                  "phone",
                  "mobile",
                  "jobTitle",
                  "language"
                ]
              }
            ]
          },
          "channel": {
            "type": "string",
            "description": "Channel property for the Logic",
            "enum": ["type", "name"],
            "x-alternatives": [
              {
                "type": "string",
                "description": "Channel property for the Logic",
                "enum": ["type", "name"]
              }
            ]
          },
          "expression_id": {
            "type": "number",
            "description": "Expression Id for the Logic",
            "x-alternatives": [
              {
                "type": "number",
                "description": "Expression Id for the Logic"
              }
            ]
          },
          "parent_question_id": {
            "type": "number",
            "description": "If question is a subquestion, parent_question_id will be the Id of the parent question",
            "example": 3
          },
          "value": {
            "type": "string",
            "description": "Value for the logic",
            "default": ""
          }
        }
      },
      "logicsSchema": {
        "type": "array",
        "items": {
          "$ref": "#/components//schemas/Model209"
        }
      },
      "Model 210": {
        "type": "object",
        "properties": {
          "logics": {
            "$ref": "#/components/schemas/logicsSchema"
          }
        }
      },
      "Model 211": {
        "type": "object",
        "properties": {
          "jump_to": {
            "type": "string",
            "default": "Default"
          },
          "redirect_url": {
            "type": "string",
            "default": ""
          },
          "logics": {
            "$ref": "#/components/schemas/logicsSchema"
          }
        }
      },
      "Model 212": {
        "type": "array",
        "items": {
          "$ref": "#/components//schemas/Model211"
        }
      },
      "skip_logic": {
        "type": "object",
        "properties": {
          "logics": {
            "$ref": "#/components//schemas/Model212"
          }
        }
      },
      "Model 213": {
        "type": "object",
        "properties": {
          "text": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "required": {
            "type": "boolean"
          },
          "properties": {
            "$ref": "#/components//schemas/Model208"
          },
          "display_logic": {
            "$ref": "#/components//schemas/Model210"
          },
          "skip_logic": {
            "$ref": "#/components/schemas/skip_logic"
          }
        }
      },
      "Model 214": {
        "required": ["question", "survey_id"],
        "type": "object",
        "properties": {
          "survey_id": {
            "type": "number",
            "description": "Survey Id",
            "example": 1
          },
          "question": {
            "$ref": "#/components//schemas/Model213"
          }
        }
      },
      "updateQuestionSchema": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/questionSchema"
          }
        }
      },
      "updateRequestSchema": {
        "required": ["answers", "survey_id"],
        "type": "object",
        "properties": {
          "survey_id": {
            "type": "number",
            "description": "ID of the survey",
            "example": 1
          },
          "contact_id": {
            "type": "number",
            "description": "ID of the contact",
            "example": 2
          },
          "answers": {
            "$ref": "#/components/schemas/getAnswerSchema"
          }
        }
      },
      "section": {
        "type": "object",
        "properties": {
          "name": {
            "maxLength": 10000,
            "type": "string",
            "description": "Name of the section",
            "example": "Section 1"
          },
          "description": {
            "maxLength": 10000,
            "type": "string",
            "description": "Description of the section",
            "example": "Section 1 description"
          },
          "position": {
            "type": "number",
            "description": "Position of the section",
            "example": 1
          },
          "properties": {
            "$ref": "#/components//schemas/Model104"
          },
          "display_logic": {
            "$ref": "#/components//schemas/Model107"
          }
        },
        "description": "Section object is required"
      },
      "Model 215": {
        "required": ["section", "survey_id"],
        "type": "object",
        "properties": {
          "survey_id": {
            "type": "number",
            "description": "Id of Survey",
            "example": 12001
          },
          "section": {
            "$ref": "#/components/schemas/section"
          }
        },
        "description": "Section object is required"
      },
      "Model 216": {
        "type": "array",
        "description": "Replaces all existing child tickets with the provided IDs, if an empty array ([]) is provided, all child associations will be removed.",
        "example": [1234, 5678],
        "items": {
          "type": "number"
        }
      },
      "editTicketSchema": {
        "type": "object",
        "properties": {
          "priority": {
            "type": "number",
            "description": "Ticket priority",
            "example": 4
          },
          "status": {
            "type": "number",
            "description": "Ticket status",
            "example": 5
          },
          "assignee_id": {
            "type": "number",
            "description": "Ticket agent's user id",
            "example": 2
          },
          "team_id": {
            "type": "number",
            "description": "Ticket team's id",
            "example": 3
          },
          "parent_ticket_id": {
            "type": "number",
            "description": "Links the current ticket to a parent ticket when a valid ticket ID is provided. Removes the parent-child relationship if null is provided.",
            "example": 3456
          },
          "child_ticket_ids": {
            "$ref": "#/components//schemas/Model216"
          },
          "custom_fields": {
            "$ref": "#/components/schemas/properties"
          }
        }
      },
      "Model 217": {
        "type": "object",
        "properties": {
          "name": {
            "maxLength": 255,
            "type": "string"
          },
          "description": {
            "maxLength": 1000,
            "type": "string"
          },
          "url": {
            "maxLength": 1000,
            "type": "string"
          },
          "http_method": {
            "maxLength": 255,
            "type": "string",
            "enum": ["POST", "GET", "PATCH", "PUT", "DELETE"]
          },
          "headers": {
            "$ref": "#/components//schemas/Model117"
          },
          "payload": {
            "$ref": "#/components/schemas/properties"
          },
          "include_partial_submission": {
            "type": "boolean",
            "example": true
          }
        }
      },
      "Model 218": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "NUMBER",
              "DOUBLE",
              "EMAIL",
              "SINGLE_LINE_TEXT",
              "MULTI_LINE_TEXT",
              "DATE",
              "URL",
              "DROPDOWN",
              "STRING"
            ]
          },
          "label": {
            "maxLength": 255,
            "type": "string"
          },
          "description": {
            "maxLength": 1000,
            "type": "string"
          },
          "contact_property_group_id": {
            "type": "number"
          }
        }
      },
      "Model 219": {
        "type": "object",
        "properties": {
          "partialSubmission": {
            "type": "boolean"
          },
          "editResponse": {
            "type": "boolean"
          },
          "anonymousResponses": {
            "type": "boolean"
          },
          "submissionPerUser": {
            "minimum": 1,
            "type": "number"
          },
          "cutOffDate": {
            "type": "string",
            "format": "date"
          }
        }
      },
      "Model 220": {
        "required": ["survey_id"],
        "type": "object",
        "properties": {
          "survey_id": {
            "type": "number",
            "description": "ID of the survey",
            "example": 1
          }
        }
      },
      "Model 221": {
        "required": ["state", "time_taken"],
        "type": "object",
        "properties": {
          "state": {
            "type": "string",
            "description": "State of the response",
            "example": "COMPLETED"
          },
          "time_taken": {
            "type": "number",
            "description": "Time Taken of the response",
            "example": 5
          }
        }
      },
      "getCompleteResponse": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components//schemas/Model221"
          }
        }
      },
      "Model 222": {
        "required": ["answers", "survey_id"],
        "type": "object",
        "properties": {
          "survey_id": {
            "type": "number",
            "description": "ID of the survey",
            "example": 1
          },
          "answers": {
            "$ref": "#/components/schemas/getAnswerSchema"
          }
        }
      },
      "Model 223": {
        "required": ["evaluators"],
        "type": "object",
        "properties": {
          "evaluators": {
            "$ref": "#/components/schemas/evaluators"
          }
        }
      },
      "Model 224": {
        "type": "object",
        "properties": {
          "min": {
            "type": "string"
          },
          "max": {
            "type": "string"
          },
          "step": {
            "type": "number"
          },
          "wait": {
            "type": "number"
          },
          "type": {
            "type": "string"
          },
          "start": {
            "type": "number"
          },
          "fileTypes": {
            "$ref": "#/components/schemas/fileTypes"
          }
        }
      },
      "Model 225": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components//schemas/Model224"
          }
        }
      },
      "Model 226": {
        "type": "object",
        "properties": {
          "text": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "required": {
            "type": "boolean"
          },
          "properties": {
            "$ref": "#/components//schemas/Model225"
          },
          "displayLogic": {
            "$ref": "#/components/schemas/displayLogic"
          }
        }
      },
      "Model 227": {
        "type": "object",
        "properties": {
          "label": {
            "type": "string"
          },
          "sectionRandomise": {
            "type": "boolean"
          }
        }
      },
      "Model 228": {
        "type": "object",
        "properties": {
          "name": {
            "maxLength": 10000,
            "type": "string"
          },
          "description": {
            "maxLength": 10000,
            "type": "string"
          },
          "properties": {
            "$ref": "#/components//schemas/Model227"
          },
          "displayLogic": {
            "$ref": "#/components/schemas/displayLogic"
          }
        }
      },
      "Model 229": {
        "required": ["evaluators"],
        "type": "object",
        "properties": {
          "evaluators": {
            "$ref": "#/components//schemas/Model168"
          }
        }
      },
      "Model 230": {
        "type": "object",
        "properties": {
          "contacts": {
            "$ref": "#/components/schemas/getContactSchema"
          },
          "contactList": {
            "$ref": "#/components/schemas/teams"
          },
          "message": {
            "maxLength": 140,
            "type": "string"
          },
          "smsTargetId": {
            "type": "number"
          },
          "variables": {
            "$ref": "#/components/schemas/properties"
          },
          "twilio_consent_agreed": {
            "type": "boolean",
            "description": "For using surveysparrow message service you need to agree the consent."
          }
        }
      },
      "Model 231": {
        "type": "array",
        "items": {
          "$ref": "#/components//schemas/Model146"
        }
      },
      "Model 232": {
        "required": ["id"],
        "type": "object",
        "properties": {
          "id": {
            "type": "number"
          },
          "variables": {
            "$ref": "#/components/schemas/properties"
          }
        }
      },
      "contactList": {
        "type": "array",
        "items": {
          "$ref": "#/components//schemas/Model232"
        }
      },
      "Model 233": {
        "type": "object",
        "properties": {
          "contacts": {
            "$ref": "#/components//schemas/Model231"
          },
          "contactList": {
            "$ref": "#/components/schemas/contactList"
          },
          "message": {
            "maxLength": 140,
            "type": "string"
          },
          "smsTargetId": {
            "type": "number"
          },
          "variables": {
            "$ref": "#/components/schemas/properties"
          },
          "sendLaterInDays": {
            "minimum": 1,
            "type": "number"
          },
          "twilio_consent_agreed": {
            "type": "boolean",
            "description": "For using surveysparrow message service you need to agree the consent."
          }
        }
      },
      "Model 234": {
        "required": ["language_code", "survey_id"],
        "type": "object",
        "properties": {
          "language_code": {
            "type": "string",
            "description": "Language code",
            "example": "en"
          },
          "survey_id": {
            "type": "number",
            "description": "Survey ID",
            "example": 123456
          }
        }
      },
      "Model 235": {
        "required": ["message"],
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "description": "Message",
            "example": "Translation deleted successfully"
          }
        },
        "description": "Response data"
      },
      "Model 236": {
        "required": ["data"],
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components//schemas/Model235"
          }
        }
      },
      "Model 237": {
        "required": ["survey_id"],
        "type": "object",
        "properties": {
          "survey_id": {
            "type": "number",
            "description": "Id of Survey",
            "example": 12001
          }
        }
      },
      "Model 238": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean"
          }
        }
      },
      "Model 239": {
        "type": "object",
        "properties": {
          "error": {
            "type": "string",
            "enum": ["Reminder not found"]
          }
        }
      },
      "Model 240": {
        "type": "object",
        "properties": {
          "succsats": {
            "type": "boolean"
          }
        }
      },
      "Model 241": {
        "type": "object",
        "properties": {
          "name": {
            "maxLength": 255,
            "type": "string"
          },
          "description": {
            "maxLength": 1000,
            "type": "string"
          }
        }
      },
      "Model 242": {
        "type": "object",
        "properties": {
          "name": {
            "maxLength": 200,
            "type": "string"
          },
          "workspace_id": {
            "type": "number"
          },
          "theme_id": {
            "type": "number"
          },
          "welcome_text": {
            "type": "string"
          },
          "thankyou_json": {
            "$ref": "#/components/schemas/surveyThankyouPageArraySchema"
          },
          "archived": {
            "type": "boolean"
          },
          "settings": {
            "$ref": "#/components/schemas/surveySettings"
          }
        }
      },
      "updateVariablesSchema": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/getSurveysSurveySchema"
          }
        }
      },
      "Model 243": {
        "type": "object",
        "properties": {
          "name": {
            "maxLength": 255,
            "type": "string",
            "description": "Name of the user",
            "example": "John Doe",
            "x-convert": {
              "trim": true
            }
          },
          "role_id": {
            "type": "number",
            "description": "User role Id",
            "example": 1
          }
        }
      }
    }
  },
  "x-alt-definitions": {
    "result": {
      "type": "object"
    },
    "Model 1": {
      "type": "object",
      "properties": {
        "email": {
          "type": "string",
          "description": "Email of contact. Can be optional only if anonymous contact feature is enabled.",
          "maxLength": 255,
          "x-format": {
            "email": true
          },
          "optional": ["email", "email"],
          "x-alternatives": [
            {
              "type": "string",
              "description": "Email of contact. Can be optional only if anonymous contact feature is enabled.",
              "maxLength": 255,
              "x-format": {
                "email": true
              }
            },
            {
              "type": "string"
            }
          ]
        },
        "mobile": {
          "type": "string",
          "description": "Mobile number in E.164 format, required when type is SMS",
          "required": ["mobile"],
          "optional": ["mobile"],
          "x-alternatives": [
            {
              "type": "string",
              "description": "Mobile number in E.164 format, required when type is SMS"
            },
            {
              "type": "string"
            }
          ]
        },
        "referenceId": {
          "type": "string",
          "description": "Reference ID of the anonymous contact",
          "example": "123456",
          "maxLength": 255
        },
        "variables": {
          "$ref": "#/x-alt-definitions/result"
        }
      }
    },
    "contacts": {
      "type": "array",
      "minItems": 1,
      "maxItems": 20000,
      "items": {
        "$ref": "#/x-alt-definitions/Model 1"
      }
    },
    "contact_list_ids": {
      "type": "array",
      "minItems": 1,
      "maxItems": 20,
      "items": {
        "type": "number"
      }
    },
    "h": {
      "type": "array",
      "minItems": 1,
      "items": {
        "type": "number",
        "minimum": 0,
        "maximum": 23
      }
    },
    "m": {
      "type": "array",
      "minItems": 1,
      "items": {
        "type": "number",
        "minimum": 0,
        "maximum": 60
      }
    },
    "d": {
      "type": "array",
      "minItems": 1,
      "items": {
        "type": "string",
        "enum": [0, 1, 2, 3, 4, 5, 6, 7]
      }
    },
    "config": {
      "type": "object",
      "properties": {
        "h": {
          "$ref": "#/x-alt-definitions/h",
          "type": "array"
        },
        "m": {
          "$ref": "#/x-alt-definitions/m",
          "type": "array"
        },
        "d": {
          "$ref": "#/x-alt-definitions/d",
          "type": "array"
        }
      },
      "required": ["h", "m", "d"]
    },
    "D": {
      "type": "array",
      "minItems": 1,
      "items": {
        "type": "string",
        "enum": [
          0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19,
          20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31
        ]
      }
    },
    "Model 2": {
      "type": "object",
      "properties": {
        "h": {
          "$ref": "#/x-alt-definitions/h",
          "type": "array"
        },
        "m": {
          "$ref": "#/x-alt-definitions/m",
          "type": "array"
        },
        "D": {
          "$ref": "#/x-alt-definitions/D",
          "type": "array"
        }
      },
      "required": ["h", "m", "D"]
    },
    "M": {
      "type": "array",
      "minItems": 1,
      "items": {
        "type": "string",
        "enum": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]
      }
    },
    "Model 3": {
      "type": "object",
      "properties": {
        "h": {
          "$ref": "#/x-alt-definitions/h",
          "type": "array"
        },
        "m": {
          "$ref": "#/x-alt-definitions/m",
          "type": "array"
        },
        "D": {
          "$ref": "#/x-alt-definitions/D",
          "type": "array"
        },
        "M": {
          "$ref": "#/x-alt-definitions/M",
          "type": "array"
        }
      },
      "required": ["h", "m", "D", "M"]
    },
    "Model 4": {
      "type": "object",
      "properties": {
        "h": {
          "$ref": "#/x-alt-definitions/h",
          "type": "array"
        },
        "m": {
          "$ref": "#/x-alt-definitions/m",
          "type": "array"
        },
        "M": {
          "$ref": "#/x-alt-definitions/M",
          "type": "array"
        },
        "d": {
          "$ref": "#/x-alt-definitions/d",
          "type": "array"
        },
        "D": {
          "$ref": "#/x-alt-definitions/D",
          "type": "array"
        }
      },
      "required": ["h", "m", "M", "d", "D"]
    },
    "schedule": {
      "type": "object",
      "properties": {
        "frequency": {
          "type": "string",
          "enum": ["WEEKLY", "MONTHLY", "YEARLY"]
        },
        "config": {
          "$ref": "#/definitions/config",
          "x-alternatives": [
            {
              "$ref": "#/x-alt-definitions/config"
            },
            {
              "$ref": "#/definitions/Model 74",
              "x-alternatives": [
                {
                  "$ref": "#/x-alt-definitions/Model 2"
                },
                {
                  "$ref": "#/definitions/Model 75",
                  "x-alternatives": [
                    {
                      "$ref": "#/x-alt-definitions/Model 3"
                    },
                    {
                      "$ref": "#/x-alt-definitions/Model 4"
                    }
                  ]
                }
              ]
            }
          ]
        }
      },
      "required": ["frequency", "config"]
    },
    "first_nps": {
      "type": "object",
      "properties": {
        "delay": {
          "type": "number",
          "description": "Delay after which first survey to be shared",
          "minimum": 1,
          "x-constraint": {
            "positive": true
          }
        },
        "unit": {
          "type": "string",
          "description": "Unit of the delay",
          "enum": ["Days", "Months", "Hours"]
        },
        "contact_property_id": {
          "type": "number",
          "description": "Id of the contact property, only DATE type contact properties are allowed"
        }
      },
      "required": ["delay", "unit", "contact_property_id"]
    },
    "relative_schedule": {
      "type": "object",
      "properties": {
        "first_nps": {
          "$ref": "#/x-alt-definitions/first_nps"
        },
        "after_first_nps_schedule": {
          "type": "string",
          "description": "Repetition of survey sharing after first share",
          "enum": [
            "NONE",
            "EVERY_45_DAYS",
            "EVERY_3_MONTHS",
            "EVERY_6_MONTHS",
            "EVERY_1_YEAR"
          ]
        }
      },
      "required": ["after_first_nps_schedule"]
    },
    "sms": {
      "type": "object",
      "description": "Only required when type is SMS",
      "properties": {
        "message": {
          "type": "string",
          "description": "Message of sms, both {company_name} and {survey_link} variables are required."
        },
        "twilio_consent_agreed": {
          "type": "boolean",
          "description": "For using SurveySparrow message service you need to agree the consent"
        },
        "target_id": {
          "type": "number",
          "description": "Id of the custom target, default target will be taken if not given"
        }
      }
    },
    "properties": {
      "type": "object",
      "properties": {
        "body": {
          "type": "string",
          "description": "Body of the email"
        },
        "from_address": {
          "type": "string",
          "description": "From address of the email",
          "x-format": {
            "email": {
              "minDomainAtoms": 2
            }
          }
        },
        "embed_first_question": {
          "type": "boolean"
        },
        "custom_footer": {
          "type": "boolean",
          "default": false
        },
        "custom_footer_value": {
          "type": "string",
          "description": "Custom footer value"
        },
        "show_surveysparrow_branding": {
          "type": "boolean",
          "description": "Set true to show SurveySparrow branding on email"
        },
        "reply_to": {
          "type": "string",
          "description": "Reply to address of the email",
          "x-format": {
            "email": {
              "minDomainAtoms": 2
            }
          }
        },
        "preview_text": {
          "type": "string",
          "description": "Pre-header of the Email"
        }
      },
      "required": ["embed_first_question", "show_surveysparrow_branding"]
    },
    "email": {
      "type": "object",
      "properties": {
        "subject": {
          "type": "string",
          "description": "Subject of the email"
        },
        "properties": {
          "$ref": "#/x-alt-definitions/properties"
        },
        "theme_id": {
          "type": "number",
          "description": "Id of the email theme"
        }
      },
      "required": ["subject"]
    },
    "link": {
      "type": "object",
      "properties": {
        "title": {
          "type": "string",
          "description": "Title of the weblink channel"
        },
        "description": {
          "type": "string",
          "description": "Description of the web link channel"
        },
        "image_link": {
          "type": "string",
          "description": "Image link of the weblink channel, provide link for a JPEG or PNG image. Get best results when the image is 1200 x 630 pixels"
        }
      }
    },
    "offline": {
      "type": "object",
      "properties": {
        "animation_direction": {
          "type": "string",
          "description": "Animation Direction of the offline channel",
          "enum": ["Horizontal", "Vertical"]
        }
      }
    },
    "other_text": {
      "type": "object",
      "properties": {
        "text": {
          "type": "string",
          "description": "Other option text"
        },
        "score": {
          "type": "number",
          "description": "Other option score"
        }
      }
    },
    "all_of_the_above_text": {
      "type": "object",
      "properties": {
        "text": {
          "type": "string",
          "description": "All of the above text"
        }
      }
    },
    "none_of_the_above_text": {
      "type": "object",
      "properties": {
        "text": {
          "type": "string",
          "description": "None of the above option option text"
        },
        "score": {
          "type": "number",
          "description": "None of the above option option score"
        }
      }
    },
    "Model 5": {
      "type": "object",
      "properties": {
        "text": {
          "type": "string",
          "description": "Required only for DROP_DOWN answer type in matrix question",
          "maxLength": 500
        }
      },
      "required": ["text"]
    },
    "choices": {
      "type": "array",
      "items": {
        "$ref": "#/x-alt-definitions/Model 5"
      }
    },
    "Model 6": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "Column name for matrix, bipolar matrix",
          "maxLength": 200
        },
        "choices": {
          "$ref": "#/x-alt-definitions/choices",
          "type": "array"
        }
      },
      "required": ["name"]
    },
    "column": {
      "type": "array",
      "minItems": 1,
      "items": {
        "$ref": "#/x-alt-definitions/Model 6"
      }
    },
    "Model 7": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "column name for bipolar matrix",
          "maxLength": 200
        }
      },
      "required": ["name"]
    },
    "Model 8": {
      "type": "array",
      "minItems": 3,
      "items": {
        "$ref": "#/x-alt-definitions/Model 7"
      }
    },
    "Model 9": {
      "type": "object",
      "properties": {
        "text": {
          "type": "string",
          "description": "Required only for DROP_DOWN answer type in contact form question.",
          "maxLength": 500
        }
      },
      "required": ["text"]
    },
    "Model 10": {
      "type": "array",
      "items": {
        "$ref": "#/x-alt-definitions/Model 9"
      }
    },
    "Model 11": {
      "type": "object",
      "properties": {
        "left_text": {
          "type": "string",
          "description": "Sub question or row text",
          "maxLength": 200
        },
        "right_text": {
          "type": "string",
          "description": "Right row text. Required only for bipolar matrix. ",
          "required": ["right_text"],
          "x-alternatives": [
            {
              "type": "string",
              "description": "Right row text. Required only for bipolar matrix. "
            }
          ]
        },
        "required": {
          "type": "boolean",
          "description": "Only for questions in contact form. True by default",
          "x-alternatives": [
            {
              "type": "boolean",
              "description": "Only for questions in contact form. True by default"
            }
          ]
        },
        "row_type": {
          "type": "string",
          "description": "Sub question type for contact form. Required only for contact form.",
          "enum": [
            "string",
            "number",
            "email",
            "date",
            "dropdown",
            "PhoneNumber"
          ],
          "required": ["row_type"],
          "x-alternatives": [
            {
              "type": "string",
              "description": "Sub question type for contact form. Required only for contact form.",
              "enum": [
                "string",
                "number",
                "email",
                "date",
                "dropdown",
                "PhoneNumber"
              ]
            }
          ]
        },
        "choices": {
          "$ref": "#/definitions/Model 97",
          "type": "array",
          "x-alternatives": [
            {
              "$ref": "#/x-alt-definitions/Model 10",
              "type": "array"
            }
          ]
        }
      },
      "required": ["left_text"]
    },
    "row": {
      "type": "array",
      "minItems": 1,
      "items": {
        "$ref": "#/x-alt-definitions/Model 11"
      }
    },
    "Model 12": {
      "type": "object",
      "properties": {
        "d": {
          "$ref": "#/x-alt-definitions/d",
          "type": "array"
        },
        "M": {
          "$ref": "#/x-alt-definitions/M",
          "type": "array"
        },
        "D": {
          "$ref": "#/x-alt-definitions/D",
          "type": "array"
        },
        "h": {
          "$ref": "#/x-alt-definitions/h",
          "type": "array"
        },
        "m": {
          "$ref": "#/x-alt-definitions/m",
          "type": "array"
        }
      },
      "required": ["h", "m"]
    },
    "Model 13": {
      "type": "object",
      "properties": {
        "frequency": {
          "type": "string",
          "enum": [
            "MINUTELY",
            "WEEKLY",
            "MONTHLY",
            "YEARLY",
            "CUSTOM",
            "QUARTERLY",
            "DAILY"
          ]
        },
        "config": {
          "$ref": "#/x-alt-definitions/Model 12"
        }
      },
      "required": ["frequency", "config"]
    },
    "Model 14": {
      "type": "object",
      "properties": {
        "label": {
          "type": "string",
          "maxLength": 64
        },
        "name": {
          "type": "string",
          "maxLength": 35
        },
        "description": {
          "type": "string",
          "maxLength": 200
        },
        "type": {
          "type": "string",
          "enum": ["STRING", "NUMBER", "DATE"]
        }
      },
      "required": ["label", "name", "type"]
    },
    "Model 15": {
      "type": "array",
      "minItems": 1,
      "maxItems": 50,
      "items": {
        "$ref": "#/x-alt-definitions/Model 14"
      }
    },
    "Model 16": {
      "type": "object",
      "properties": {
        "label": {
          "type": "string",
          "default": "Continue"
        },
        "sectionRandomise": {
          "type": "boolean",
          "default": false
        }
      }
    },
    "Model 17": {
      "type": "object",
      "properties": {
        "join_condition": {
          "type": "string",
          "default": "and",
          "enum": ["and", "or"]
        },
        "type": {
          "type": "string",
          "enum": ["param"]
        },
        "comparator": {
          "type": "string",
          "enum": [
            "isPassed",
            "isNotPassed",
            "startsWith",
            "endsWith",
            "contains",
            "equalsString",
            "doesNotContain",
            "notEqualTo",
            "lessThanForParam",
            "greaterThanForParam"
          ]
        },
        "variable_id": {
          "type": "number",
          "required": ["variable_id"],
          "x-alternatives": [
            {
              "type": "number"
            }
          ]
        },
        "value": {
          "type": "string",
          "default": ""
        }
      },
      "required": ["type", "comparator"]
    },
    "logics": {
      "type": "array",
      "items": {
        "$ref": "#/x-alt-definitions/Model 17"
      }
    },
    "displayLogic": {
      "type": "object",
      "properties": {
        "logics": {
          "$ref": "#/x-alt-definitions/logics",
          "type": "array"
        }
      }
    },
    "tags": {
      "type": "array",
      "items": {
        "type": "string",
        "pattern": "/^[a-zA-Z ]*$/"
      }
    },
    "Model 18": {
      "type": "object",
      "properties": {
        "text": {
          "type": "string"
        },
        "score": {
          "type": "number"
        }
      }
    },
    "Model 19": {
      "type": "array",
      "items": {
        "$ref": "#/x-alt-definitions/Model 18"
      }
    },
    "allOfTheAboveText": {
      "type": "object",
      "properties": {
        "text": {
          "type": "string"
        }
      }
    },
    "fileTypes": {
      "type": "array",
      "items": {
        "type": "string",
        "default": ["image", "doc"],
        "enum": ["image", "doc", "video", "audio"]
      }
    },
    "data": {
      "type": "object",
      "properties": {
        "min": {
          "type": "string"
        },
        "max": {
          "type": "string"
        },
        "step": {
          "type": "number",
          "enum": [3, 4, 5, 6, 7, 8, 9, 10]
        },
        "wait": {
          "type": "number",
          "enum": [0, 1, 2, 3, 4, 5]
        },
        "type": {
          "type": "string",
          "enum": ["SINGLE_LINE", "MULTI_LINE", "UNLIMITED", "EXACT", "RANGE"]
        },
        "start": {
          "type": "number",
          "enum": [0, 1]
        },
        "fileTypes": {
          "$ref": "#/x-alt-definitions/fileTypes",
          "type": "array"
        },
        "minLimit": {
          "type": "number",
          "required": ["minLimit"],
          "x-alternatives": [
            {
              "type": "number"
            }
          ]
        },
        "maxLimit": {
          "type": "number",
          "required": ["maxLimit"],
          "x-alternatives": [
            {
              "type": "number"
            }
          ]
        },
        "exactChoices": {
          "type": "number",
          "required": ["exactChoices"],
          "x-alternatives": [
            {
              "type": "number"
            }
          ]
        }
      }
    },
    "Model 20": {
      "type": "object",
      "properties": {
        "data": {
          "$ref": "#/x-alt-definitions/data"
        }
      }
    },
    "Model 21": {
      "type": "object",
      "default": [],
      "properties": {
        "text": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "required": {
          "type": "boolean"
        },
        "type": {
          "type": "string",
          "enum": ["FileInput", "TextInput", "OpinionScale", "MultiChoice"]
        },
        "desc": {
          "type": "string",
          "maxLength": 10000
        },
        "optionsStacked": {
          "type": "boolean"
        },
        "randomized": {
          "type": "boolean"
        },
        "multipleAnswers": {
          "type": "boolean"
        },
        "img": {
          "type": "string",
          "maxLength": 2000
        },
        "video": {
          "type": "string",
          "maxLength": 2000
        },
        "audio": {
          "type": "string",
          "maxLength": 2000
        },
        "tags": {
          "$ref": "#/x-alt-definitions/tags",
          "type": "array"
        },
        "choices": {
          "$ref": "#/x-alt-definitions/Model 19",
          "type": "array"
        },
        "hasScore": {
          "type": "boolean"
        },
        "other": {
          "type": "boolean"
        },
        "allOfTheAbove": {
          "type": "boolean"
        },
        "noneOfTheAbove": {
          "type": "boolean"
        },
        "otherText": {
          "$ref": "#/x-alt-definitions/Model 18"
        },
        "noneOfTheAboveText": {
          "$ref": "#/x-alt-definitions/Model 18"
        },
        "allOfTheAboveText": {
          "$ref": "#/x-alt-definitions/allOfTheAboveText"
        },
        "properties": {
          "$ref": "#/x-alt-definitions/Model 20"
        },
        "displayLogic": {
          "$ref": "#/x-alt-definitions/displayLogic"
        }
      },
      "required": ["text", "type"]
    },
    "questions": {
      "type": "array",
      "maxItems": 50,
      "items": {
        "$ref": "#/x-alt-definitions/Model 21"
      }
    },
    "Model 22": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "properties": {
          "$ref": "#/x-alt-definitions/Model 16"
        },
        "displayLogic": {
          "$ref": "#/x-alt-definitions/displayLogic"
        },
        "questions": {
          "$ref": "#/x-alt-definitions/questions",
          "type": "array"
        }
      }
    },
    "Model 23": {
      "type": "array",
      "minItems": 1,
      "maxItems": 20,
      "items": {
        "$ref": "#/x-alt-definitions/Model 22"
      }
    },
    "Model 24": {
      "type": "object",
      "properties": {
        "preAdded": {
          "type": "boolean"
        },
        "message": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "redirectBoolean": {
          "type": "boolean"
        },
        "redirectMultiBoolean": {
          "type": "boolean"
        },
        "redirect": {
          "type": "string",
          "required": ["redirect"],
          "optional": ["redirect"],
          "x-alternatives": [
            {
              "type": "string"
            },
            {
              "type": "string"
            }
          ]
        },
        "branding": {
          "type": "boolean"
        },
        "redirectMulti": {
          "$ref": "#/definitions/properties",
          "required": ["redirectMulti"],
          "optional": ["redirectMulti", "redirectMulti"],
          "x-alternatives": [
            {
              "$ref": "#/x-alt-definitions/result"
            },
            {
              "type": "string"
            }
          ]
        }
      }
    },
    "thankyou_json": {
      "type": "array",
      "items": {
        "$ref": "#/x-alt-definitions/Model 24"
      }
    }
  },
  "x-original-swagger-version": "2.0"
}
