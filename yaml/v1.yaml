swagger: '2.0'
schemes:
  - https
tags:
  - name: audit_logs
    x-displayName: Audit Logs
  - name: contact_list
    x-displayName: Contact List
  - name: contacts
    x-displayName: Contacts
  - name: roles
    x-displayName: Roles
  - name: survey
    x-displayName: Survey
  - name: targets
    x-displayName: Targets
  - name: teams
    x-displayName: Teams
  - name: users
    x-displayName: Users
  - name: webhooks
    x-displayName: Webhooks
  - name: workspaces
    x-displayName: Workspaces
  - name: channels
    x-displayName: Channels
  - name: contact_lists
    x-displayName: Contact Lists
  - name: contact_properties
    x-displayName: Contact Properties
  - name: email_theme
    x-displayName: Email Theme
  - name: expressions
    x-displayName: Expressions
  - name: translation
    x-displayName: Translation
  - name: nps
    x-displayName: Nps
  - name: questions
    x-displayName: Questions
  - name: reminder
    x-displayName: Reminder
  - name: reports
    x-displayName: Reports
  - name: response
    x-displayName: Response
  - name: survey_folder
    x-displayName: Survey Folder
  - name: ticket_fields
    x-displayName: Ticket Fields
  - name: tickets
    x-displayName: Tickets
  - name: variables
    x-displayName: Variables
  - name: reputation_app_platforms
    x-displayName: Reputation App Platforms
  - name: reputation_platforms
    x-displayName: Reputation Platforms
  - name: reputation_reviews
    x-displayName: Reputation Reviews
  - name: employee_360
    x-displayName: Employee 360
  - name: ces
    x-displayName: Ces
  - name: csat
    x-displayName: Csat
  - name: share
    x-displayName: Share
  - name: public
    x-displayName: Public
  - name: ticket_comments
    x-displayName: Ticket Comments
  - name: accounts
    x-displayName: Accounts
  - name: kiosk
    x-displayName: Kiosk
  - name: submissions
    x-displayName: Submissions
paths:
  /v1/audit-logs:
    get:
      summary: List audit logs
      operationId: getV1Auditlogs
      parameters:
        - type: string
          enum:
            - SURVEY_CREATED
            - SURVEY_EDITED
            - SURVEY_DELETED
            - THEME_ADDED
            - THEME_EDITED
            - THEME_DELETED
            - USER_CREATED
            - USER_DELETED
            - USER_EDITED
            - CONTACT_CREATED
            - CONTACT_UPDATED
            - CONTACT_DELETED
            - CONTACT_PROPERTY_CREATED
            - CONTACT_PROPERTY_EDITED
            - CONTACT_PROPERTY_DELETED
            - WORKSPACE_CREATED
            - WORKSPACE_DELETED
            - WORKSPACE_EDITED
            - SYNC_DEVICES
            - SURVEY_RESPONSE_IMPORT
            - SURVEY_RESPONSE_DELETION
            - SURVEY_CLOSED
            - SURVEY_RESTORED
            - SURVEY_OWNERSHIP_TRANSFER
            - FOLDER_USER_ACCESS_GRANT
            - FOLDER_USER_ACCESS_REMOVE
            - FOLDER_TEAM_ACCESS_GRANT
            - FOLDER_TEAM_ACCESS_REMOVE
            - SURVEY_MOVED
            - SURVEY_PASSWORD_CREATED
            - SURVEY_PASSWORD_DELETED
            - SURVEY_PASSWORD_EDITED
            - QUESTION_CATALOG_CREATED
            - QUESTION_CATALOG_DELETED
            - LOGIN
            - LOGOUT
          name: eventType
          in: query
        - type: number
          default: 1
          minimum: 1
          name: page
          in: query
          required: false
        - type: number
          default: 100
          minimum: 1
          maximum: 500
          name: maxResults
          in: query
          required: false
        - type: string
          name: user
          in: query
          required: false
        - type: string
          format: date
          name: startDate
          in: query
          required: false
        - type: string
          format: date
          name: endDate
          in: query
          required: false
      tags:
        - audit_logs
      responses:
        default:
          schema:
            type: string
          description: Successful
      security:
        - API_KEY: []
  /v1/contactlist:
    get:
      summary: List contact lists
      operationId: getV1Contactlist
      tags:
        - contact_list
      responses:
        default:
          schema:
            type: string
          description: Successful
      security:
        - API_KEY: []
    post:
      summary: Create contact list
      operationId: postV1Contactlist
      parameters:
        - in: body
          name: body
          schema:
            $ref: '#/definitions/Model 55'
      tags:
        - contact_list
      responses:
        default:
          schema:
            type: string
          description: Successful
      security:
        - API_KEY: []
  /v1/contacts:
    get:
      summary: ' Get Contacts'
      operationId: getV1Contacts
      parameters:
        - type: string
          description: Custom Token generated from the App
          default: Bearer <Token>
          pattern: /Bearer [^\s]+/
          name: authorization
          in: header
          required: true
        - type: number
          default: 50
          minimum: 1
          maximum: 100
          name: maxResults
          in: query
          required: false
        - type: number
          default: 1
          name: page
          in: query
          required: false
        - type: string
          description: filters type of contact
          enum:
            - unsubscribed
            - active
            - bounced
          name: type
          in: query
          required: false
        - type: string
          description: >-
            search string which will search all the properties of a contact for
            a matching value
          name: search
          in: query
          required: false
      tags:
        - contacts
      responses:
        '200':
          schema:
            $ref: '#/definitions/Model 2'
          description: Successful
      security:
        - API_KEY: []
    post:
      summary: Create contact
      operationId: postV1Contacts
      parameters:
        - type: string
          description: Custom Token generated from the App
          default: Bearer <Token>
          pattern: /Bearer [^\s]+/
          name: authorization
          in: header
          required: true
        - in: body
          name: body
          schema:
            $ref: '#/definitions/Model 57'
      tags:
        - contacts
      responses:
        '200':
          schema:
            $ref: '#/definitions/Model 59'
          description: Successful
      security:
        - API_KEY: []
  /v1/roles:
    get:
      summary: List roles
      operationId: getV1Roles
      tags:
        - roles
      responses:
        default:
          schema:
            type: string
          description: Successful
      security:
        - API_KEY: []
  /v1/surveys:
    get:
      summary: Get surveys
      operationId: getV1Surveys
      parameters:
        - type: number
          default: 50
          minimum: 1
          maximum: 100
          name: maxResults
          in: query
          required: false
        - type: number
          name: page
          in: query
          required: false
        - type: string
          name: surveyTypes
          in: query
          required: false
        - type: boolean
          default: false
          name: archived
          in: query
          required: false
      tags:
        - survey
      responses:
        default:
          schema:
            type: string
          description: Successful
      security:
        - API_KEY: []
    post:
      summary: Create survey
      operationId: postV1Surveys
      parameters:
        - in: body
          name: body
          schema:
            $ref: '#/definitions/Model 66'
      tags:
        - survey
      responses:
        default:
          schema:
            type: string
          description: Successful
      security:
        - API_KEY: []
  /v1/surveythemes:
    get:
      summary: Get public themes for a Survey
      operationId: getV1Surveythemes
      parameters:
        - type: string
          enum:
            - Conversational
            - Poll
            - ClassicForm
            - Kiosk
            - OfflineApp
            - NPS
            - NPSChat
            - CES
            - CESChat
            - CSAT
            - CSATChat
            - Employee360
          name: surveyType
          in: query
          required: true
      tags:
        - survey
      responses:
        default:
          schema:
            type: string
          description: Successful
      security:
        - API_KEY: []
  /v1/targets:
    get:
      summary: List targets
      operationId: getV1Targets
      parameters:
        - type: number
          default: 50
          minimum: 1
          maximum: 200
          name: maxResults
          in: query
          required: false
        - type: number
          minimum: 1
          name: page
          in: query
          required: false
      tags:
        - targets
      responses:
        default:
          schema:
            type: string
          description: Successful
      security:
        - API_KEY: []
  /v1/teams:
    get:
      summary: List teams
      operationId: getV1Teams
      tags:
        - teams
      responses:
        default:
          schema:
            type: string
          description: Successful
      security:
        - API_KEY: []
    post:
      summary: Create team
      operationId: postV1Teams
      parameters:
        - in: body
          name: body
          schema:
            $ref: '#/definitions/Model 67'
      tags:
        - teams
      responses:
        default:
          schema:
            type: string
          description: Successful
      security:
        - API_KEY: []
  /v1/users:
    get:
      summary: List users
      operationId: getV1Users
      tags:
        - users
      responses:
        default:
          schema:
            type: string
          description: Successful
      security:
        - API_KEY: []
    post:
      summary: Create user
      operationId: postV1Users
      parameters:
        - in: body
          name: body
          schema:
            $ref: '#/definitions/Model 68'
      tags:
        - users
      responses:
        default:
          schema:
            type: string
          description: Successful
      security:
        - API_KEY: []
  /v1/webhooks:
    get:
      summary: List webhooks
      operationId: getV1Webhooks
      parameters:
        - type: number
          default: 50
          minimum: 1
          maximum: 100
          name: maxResults
          in: query
          required: false
        - type: number
          name: page
          in: query
          required: false
      tags:
        - webhooks
      responses:
        default:
          schema:
            type: string
          description: Successful
      security:
        - API_KEY: []
    post:
      summary: Create webhook
      operationId: postV1Webhooks
      parameters:
        - in: body
          name: body
          schema:
            $ref: '#/definitions/Model 70'
      tags:
        - webhooks
      responses:
        default:
          schema:
            type: string
          description: Successful
      security:
        - API_KEY: []
  /v1/workspaces:
    get:
      summary: List workspaces
      operationId: getV1Workspaces
      parameters:
        - type: number
          default: 50
          minimum: 1
          maximum: 100
          name: maxResults
          in: query
          required: false
        - type: number
          name: page
          in: query
          required: false
      tags:
        - workspaces
      responses:
        default:
          schema:
            type: string
          description: Successful
      security:
        - API_KEY: []
    post:
      summary: Create workspace
      operationId: postV1Workspaces
      parameters:
        - in: body
          name: body
          schema:
            $ref: '#/definitions/Model 71'
      tags:
        - workspaces
      responses:
        default:
          schema:
            type: string
          description: Successful
      security:
        - API_KEY: []
  /v1/audit-logs/events:
    get:
      summary: List subscribed events
      operationId: getV1AuditlogsEvents
      parameters:
        - type: string
          enum:
            - SURVEY_CREATED
            - SURVEY_EDITED
            - SURVEY_DELETED
            - THEME_ADDED
            - THEME_EDITED
            - THEME_DELETED
            - USER_CREATED
            - USER_DELETED
            - USER_EDITED
            - CONTACT_CREATED
            - CONTACT_UPDATED
            - CONTACT_DELETED
            - CONTACT_PROPERTY_CREATED
            - CONTACT_PROPERTY_EDITED
            - CONTACT_PROPERTY_DELETED
            - WORKSPACE_CREATED
            - WORKSPACE_DELETED
            - WORKSPACE_EDITED
            - SYNC_DEVICES
            - SURVEY_RESPONSE_IMPORT
            - SURVEY_RESPONSE_DELETION
            - SURVEY_CLOSED
            - SURVEY_RESTORED
            - SURVEY_OWNERSHIP_TRANSFER
            - FOLDER_USER_ACCESS_GRANT
            - FOLDER_USER_ACCESS_REMOVE
            - FOLDER_TEAM_ACCESS_GRANT
            - FOLDER_TEAM_ACCESS_REMOVE
            - SURVEY_MOVED
            - SURVEY_PASSWORD_CREATED
            - SURVEY_PASSWORD_DELETED
            - SURVEY_PASSWORD_EDITED
            - QUESTION_CATALOG_CREATED
            - QUESTION_CATALOG_DELETED
            - LOGIN
            - LOGOUT
          name: eventType
          in: query
        - type: number
          default: 1
          minimum: 1
          name: page
          in: query
          required: false
        - type: number
          default: 50
          minimum: 1
          maximum: 100
          name: maxResults
          in: query
          required: false
      tags:
        - audit_logs
      responses:
        default:
          schema:
            type: string
          description: Successful
      security:
        - API_KEY: []
  /v1/audit-logs/{id}:
    get:
      summary: Get audit log
      operationId: getV1AuditlogsId
      parameters:
        - type: number
          name: id
          in: path
          required: true
      tags:
        - audit_logs
      responses:
        default:
          schema:
            type: string
          description: Successful
      security:
        - API_KEY: []
  /v1/contacts/properties:
    get:
      summary: List contact properties
      operationId: getV1ContactsProperties
      tags:
        - contacts
      responses:
        default:
          schema:
            type: string
          description: Successful
      security:
        - API_KEY: []
    post:
      summary: Create contact property
      operationId: postV1ContactsProperties
      parameters:
        - in: body
          name: body
          schema:
            $ref: '#/definitions/Model 82'
      tags:
        - contacts
      responses:
        default:
          schema:
            type: string
          description: Successful
      security:
        - API_KEY: []
  /v1/contacts/{id}:
    get:
      summary: Get contact
      operationId: getV1ContactsId
      parameters:
        - type: string
          description: Custom Token generated from the App
          default: Bearer <Token>
          pattern: /Bearer [^\s]+/
          name: authorization
          in: header
          required: true
        - type: number
          description: contact id of a particular contact
          name: id
          in: path
          required: true
      tags:
        - contacts
      responses:
        '200':
          schema:
            $ref: '#/definitions/Model 24'
          description: Successful
      security:
        - API_KEY: []
    put:
      summary: Update contact
      operationId: putV1ContactsId
      parameters:
        - type: string
          description: Custom Token generated from the App
          default: Bearer <Token>
          pattern: /Bearer [^\s]+/
          name: authorization
          in: header
          required: true
        - type: number
          name: id
          in: path
          required: true
        - in: body
          name: body
          schema:
            $ref: '#/definitions/Model 197'
      tags:
        - contacts
      responses:
        '204':
          schema:
            $ref: '#/definitions/properties'
          description: No Content
      security:
        - API_KEY: []
    delete:
      summary: Delete contact
      operationId: deleteV1ContactsId
      parameters:
        - type: string
          description: Custom Token generated from the App
          default: Bearer <Token>
          pattern: /Bearer [^\s]+/
          name: authorization
          in: header
          required: true
        - type: number
          description: ID of the contact to be deleted
          name: id
          in: path
          required: true
      tags:
        - contacts
      responses:
        '204':
          schema:
            $ref: '#/definitions/properties'
          description: No Content
      security:
        - API_KEY: []
  /v1/surveys/{id}:
    get:
      summary: Get survey
      operationId: getV1SurveysId
      parameters:
        - type: number
          name: id
          in: path
          required: true
        - type: string
          name: reportShareToken
          in: query
          required: false
      tags:
        - survey
      responses:
        default:
          schema:
            type: string
          description: Successful
      security:
        - API_KEY: []
    put:
      summary: Update survey details
      operationId: putV1SurveysId
      parameters:
        - type: number
          name: id
          in: path
          required: true
        - in: body
          name: body
          schema:
            $ref: '#/definitions/Model 200'
      tags:
        - survey
      responses:
        default:
          schema:
            type: string
          description: Successful
      security:
        - API_KEY: []
  /v1/users/{id}:
    get:
      summary: Get user
      operationId: getV1UsersId
      parameters:
        - type: number
          name: id
          in: path
          required: true
      tags:
        - users
      responses:
        default:
          schema:
            type: string
          description: Successful
      security:
        - API_KEY: []
    put:
      summary: Update user
      operationId: putV1UsersId
      parameters:
        - type: number
          name: id
          in: path
          required: true
        - in: body
          name: body
          schema:
            $ref: '#/definitions/Model 201'
      tags:
        - users
      responses:
        default:
          schema:
            type: string
          description: Successful
      security:
        - API_KEY: []
    delete:
      summary: Delete user
      operationId: deleteV1UsersId
      parameters:
        - type: number
          name: id
          in: path
          required: true
      tags:
        - users
      responses:
        default:
          schema:
            type: string
          description: Successful
      security:
        - API_KEY: []
  /v1/workspaces/{id}:
    get:
      summary: Get workspace
      operationId: getV1WorkspacesId
      parameters:
        - type: number
          name: id
          in: path
          required: true
      tags:
        - workspaces
      responses:
        default:
          schema:
            type: string
          description: Successful
      security:
        - API_KEY: []
    put:
      summary: Update workspace
      operationId: putV1WorkspacesId
      parameters:
        - type: number
          name: id
          in: path
          required: true
        - in: body
          name: body
          schema:
            $ref: '#/definitions/Model 203'
      tags:
        - workspaces
      responses:
        default:
          schema:
            type: string
          description: Successful
      security:
        - API_KEY: []
    delete:
      summary: Delete workspace
      operationId: deleteV1WorkspacesId
      parameters:
        - type: number
          name: id
          in: path
          required: true
      tags:
        - workspaces
      responses:
        default:
          schema:
            type: string
          description: Successful
      security:
        - API_KEY: []
  /v1/ces/{survey_id}/responses:
    get:
      summary: List survey responses
      operationId: getV1CesSurvey_idResponses
      parameters:
        - type: number
          name: survey_id
          in: path
          required: true
        - type: string
          name: date.gte
          in: query
          required: false
        - type: string
          name: date.lte
          in: query
          required: false
        - type: number
          default: 100
          minimum: 1
          maximum: 2000
          name: maxResults
          in: query
          required: false
        - type: number
          default: 1
          minimum: 1
          name: page
          in: query
          required: false
        - type: number
          name: npsChannelId
          in: query
          required: false
        - type: string
          name: format
          in: query
          required: false
      tags:
        - ces
      responses:
        default:
          schema:
            type: string
          description: Successful
      security:
        - API_KEY: []
  /v1/ces/{survey_id}/metrics:
    get:
      summary: Get CES metrics
      operationId: getV1CesSurvey_idMetrics
      parameters:
        - type: number
          name: survey_id
          in: path
          required: true
        - type: string
          format: date
          name: date.gte
          in: query
          required: false
        - type: string
          format: date
          name: date.lte
          in: query
          required: false
      tags:
        - ces
      responses:
        default:
          schema:
            type: string
          description: Successful
      security:
        - API_KEY: []
  /v1/ces/{surveyId}/shares:
    get:
      summary: List CES channels
      operationId: getV1CesSurveyidShares
      parameters:
        - type: number
          name: surveyId
          in: path
          required: true
        - type: number
          default: 100
          minimum: 1
          maximum: 200
          name: maxResults
          in: query
          required: false
        - type: number
          minimum: 1
          name: page
          in: query
          required: false
        - type: string
          enum:
            - EMAIL
            - SMS
            - SYSTEM
            - LINK
            - INAPP
            - MOBILE_SDK
            - EMAIL_EMBED
            - QR_CODE
            - SLACK
            - TEAMS
            - WHATSAPP
            - OFFLINE
            - SPOTCHECK
          name: type
          in: query
          required: false
        - type: string
          enum:
            - BLAST
            - RECURRING
            - RELATIVE_RECURRING
            - TEST
            - LINK
            - INTERCOM
            - INAPP
            - MOBILE_SDK
            - EMAIL_EMBED
            - QR_CODE
            - WHATSAPP
            - OFFLINE
            - SPOTCHECK
          name: mode
          in: query
          required: false
      tags:
        - ces
      responses:
        default:
          schema:
            type: string
          description: Successful
      security:
        - API_KEY: []
  /v1/contactlist/{id}/contacts:
    get:
      summary: List contacts in a list
      operationId: getV1ContactlistIdContacts
      parameters:
        - type: number
          name: id
          in: path
          required: true
        - type: number
          default: 50
          minimum: 1
          maximum: 100
          name: maxResults
          in: query
          required: false
        - type: number
          name: page
          in: query
          required: false
      tags:
        - contact_list
      responses:
        default:
          schema:
            type: string
          description: Successful
      security:
        - API_KEY: []
    post:
      summary: Create/Add Contacts to a Custom Label
      operationId: postV1ContactlistIdContacts
      parameters:
        - type: string
          description: Custom Token generated from the App
          default: Bearer <Token>
          pattern: /Bearer [^\s]+/
          name: authorization
          in: header
          required: true
        - type: number
          description: Id of a contact list
          name: id
          in: path
          required: true
        - in: body
          name: body
          schema:
            type: array
            $ref: '#/definitions/Model 155'
      tags:
        - contacts
      responses:
        '200':
          schema:
            $ref: '#/definitions/Model 156'
          description: Successful
        '202':
          schema:
            $ref: '#/definitions/Model 153'
          description: Accepted
      security:
        - API_KEY: []
  /v1/contacts/{id}/shares:
    get:
      summary: Get all shares of a contact
      operationId: getV1ContactsIdShares
      parameters:
        - type: string
          description: Custom Token generated from the App
          default: Bearer <Token>
          pattern: /Bearer [^\s]+/
          name: authorization
          in: header
          required: true
        - type: number
          name: id
          in: path
          required: true
        - type: number
          name: page
          in: query
          required: false
      tags:
        - contacts
      responses:
        '200':
          schema:
            $ref: '#/definitions/Model 44'
          description: Successful
      security:
        - API_KEY: []
  /v1/csat/{survey_id}/responses:
    get:
      summary: List survey responses
      operationId: getV1CsatSurvey_idResponses
      parameters:
        - type: number
          name: survey_id
          in: path
          required: true
        - type: string
          name: date.gte
          in: query
          required: false
        - type: string
          name: date.lte
          in: query
          required: false
        - type: number
          default: 100
          minimum: 1
          maximum: 2000
          name: maxResults
          in: query
          required: false
        - type: number
          default: 1
          minimum: 1
          name: page
          in: query
          required: false
        - type: number
          name: npsChannelId
          in: query
          required: false
        - type: string
          name: format
          in: query
          required: false
      tags:
        - csat
      responses:
        default:
          schema:
            type: string
          description: Successful
      security:
        - API_KEY: []
  /v1/csat/{survey_id}/metrics:
    get:
      summary: Get csat metrics
      operationId: getV1CsatSurvey_idMetrics
      parameters:
        - type: number
          name: survey_id
          in: path
          required: true
        - type: string
          format: date
          name: date.gte
          in: query
          required: false
        - type: string
          format: date
          name: date.lte
          in: query
          required: false
      tags:
        - csat
      responses:
        default:
          schema:
            type: string
          description: Successful
      security:
        - API_KEY: []
  /v1/csat/{surveyId}/shares:
    get:
      summary: List csat channels
      operationId: getV1CsatSurveyidShares
      parameters:
        - type: number
          name: surveyId
          in: path
          required: true
        - type: number
          default: 100
          minimum: 1
          maximum: 200
          name: maxResults
          in: query
          required: false
        - type: number
          minimum: 1
          name: page
          in: query
          required: false
        - type: string
          enum:
            - EMAIL
            - SMS
            - SYSTEM
            - LINK
            - INAPP
            - MOBILE_SDK
            - EMAIL_EMBED
            - QR_CODE
            - SLACK
            - TEAMS
            - WHATSAPP
            - OFFLINE
            - SPOTCHECK
          name: type
          in: query
          required: false
        - type: string
          enum:
            - BLAST
            - RECURRING
            - RELATIVE_RECURRING
            - TEST
            - LINK
            - INTERCOM
            - INAPP
            - MOBILE_SDK
            - EMAIL_EMBED
            - QR_CODE
            - WHATSAPP
            - OFFLINE
            - SPOTCHECK
          name: mode
          in: query
          required: false
      tags:
        - csat
      responses:
        default:
          schema:
            type: string
          description: Successful
      security:
        - API_KEY: []
  /v1/nps/{surveyId}/shares:
    get:
      summary: List NPS channels
      operationId: getV1NpsSurveyidShares
      parameters:
        - type: number
          name: surveyId
          in: path
          required: true
        - type: number
          default: 100
          minimum: 1
          maximum: 200
          name: maxResults
          in: query
          required: false
        - type: number
          minimum: 1
          name: page
          in: query
          required: false
        - type: string
          enum:
            - EMAIL
            - SMS
            - SYSTEM
            - LINK
            - INAPP
            - MOBILE_SDK
            - EMAIL_EMBED
            - QR_CODE
            - SLACK
            - TEAMS
            - WHATSAPP
            - OFFLINE
            - SPOTCHECK
          name: type
          in: query
          required: false
        - type: string
          enum:
            - BLAST
            - RECURRING
            - RELATIVE_RECURRING
            - TEST
            - LINK
            - INTERCOM
            - INAPP
            - MOBILE_SDK
            - EMAIL_EMBED
            - QR_CODE
            - WHATSAPP
            - OFFLINE
            - SPOTCHECK
          name: mode
          in: query
          required: false
      tags:
        - nps
      responses:
        default:
          schema:
            type: string
          description: Successful
      security:
        - API_KEY: []
  /v1/nps/{survey_id}/metrics:
    get:
      summary: Get NPS metrics
      operationId: getV1NpsSurvey_idMetrics
      parameters:
        - type: number
          name: survey_id
          in: path
          required: true
        - type: string
          format: date
          name: date.gte
          in: query
          required: false
        - type: string
          format: date
          name: date.lte
          in: query
          required: false
      tags:
        - nps
      responses:
        default:
          schema:
            type: string
          description: Successful
      security:
        - API_KEY: []
  /v1/nps/{survey_id}/responses:
    get:
      summary: List survey responses
      operationId: getV1NpsSurvey_idResponses
      parameters:
        - type: number
          name: survey_id
          in: path
          required: true
        - type: string
          name: date.gte
          in: query
          required: false
        - type: string
          name: date.lte
          in: query
          required: false
        - type: number
          default: 100
          minimum: 1
          maximum: 2000
          name: maxResults
          in: query
          required: false
        - type: number
          default: 1
          minimum: 1
          name: page
          in: query
          required: false
        - type: number
          name: npsChannelId
          in: query
          required: false
        - type: string
          name: format
          in: query
          required: false
      tags:
        - nps
      responses:
        default:
          schema:
            type: string
          description: Successful
      security:
        - API_KEY: []
  /v1/survey/{surveyId}/integrations:
    get:
      summary: Get survey integrations
      operationId: getV1SurveySurveyidIntegrations
      tags:
        - survey
        - integrations
      responses:
        default:
          schema:
            type: string
          description: Successful
      security:
        - API_KEY: []
  /v1/survey/{surveyId}/subjects:
    get:
      summary: List subjects
      operationId: getV1SurveySurveyidSubjects
      parameters:
        - type: number
          name: surveyId
          in: path
          required: true
        - type: number
          minimum: 1
          name: pageNo
          in: query
          required: false
        - type: number
          minimum: 1
          maximum: 500
          name: pageLimit
          in: query
          required: false
        - type: string
          name: email
          in: query
          required: false
      tags:
        - employee_360
      responses:
        default:
          schema:
            type: string
          description: Successful
      security:
        - API_KEY: []
  /v1/survey/{surveyId}/approvers:
    get:
      summary: List approvers
      operationId: getV1SurveySurveyidApprovers
      parameters:
        - type: number
          name: surveyId
          in: path
          required: true
        - type: number
          minimum: 1
          name: pageNo
          in: query
          required: false
        - type: number
          minimum: 1
          maximum: 500
          name: pageLimit
          in: query
          required: false
      tags:
        - employee_360
      responses:
        default:
          schema:
            type: string
          description: Successful
      security:
        - API_KEY: []
  /v1/surveys/{id}/variables:
    get:
      summary: List survey variables
      operationId: getV1SurveysIdVariables
      parameters:
        - type: number
          name: id
          in: path
          required: true
      tags:
        - survey
      responses:
        default:
          schema:
            type: string
          description: Successful
      security:
        - API_KEY: []
    post:
      summary: Create survey variable
      operationId: postV1SurveysIdVariables
      parameters:
        - type: number
          name: id
          in: path
          required: true
        - x-alternatives:
            - $ref: '#/x-alt-definitions/Model 14'
            - $ref: '#/x-alt-definitions/Model 15'
              type: array
          in: body
          name: body
          schema:
            $ref: '#/definitions/variableSchema'
      tags:
        - survey
      responses:
        default:
          schema:
            type: string
          description: Successful
      security:
        - API_KEY: []
  /v1/surveys/{survey_id}/shares:
    get:
      summary: List all shares
      operationId: getV1SurveysSurvey_idShares
      parameters:
        - type: number
          name: survey_id
          in: path
          required: true
        - type: number
          default: 50
          minimum: 1
          maximum: 100
          name: maxResults
          in: query
          required: false
        - type: number
          name: page
          in: query
          required: false
        - type: string
          enum:
            - EMAIL
            - LINK
            - EMBED
            - QR_CODE
            - SMS
            - WHATSAPP
            - KIOSK
            - SOCIAL_GOOGLE
            - SOCIAL_TWITTER
            - SOCIAL_FACEBOOK
            - OFFLINE
            - EMAIL_EMBED
            - INAPP
            - MOBILE_SDK
            - SYSTEM
            - SLACK
            - TEAMS
            - INTERCOM
            - PORTAL
            - SPOTCHECK
          name: type
          in: query
          required: false
      tags:
        - share
      responses:
        default:
          schema:
            type: string
          description: Successful
      security:
        - API_KEY: []
  /v1/surveys/{survey_id}/submissions:
    get:
      summary: Get survey responses
      operationId: getV1SurveysSurvey_idSubmissions
      parameters:
        - type: number
          name: survey_id
          in: path
          required: true
        - type: number
          default: 50
          minimum: 1
          maximum: 100
          name: maxResults
          in: query
          required: false
        - type: number
          name: page
          in: query
          required: false
        - type: string
          format: date
          name: date.gte
          in: query
          required: false
        - type: string
          format: date
          name: date.lte
          in: query
          required: false
        - type: string
          enum:
            - started
            - completed
            - all
          name: state
          in: query
          required: false
        - type: string
          default: completedTime
          enum:
            - startTime
            - id
            - completedTime
          name: order_by
          in: query
          required: false
        - type: string
          default: DESC
          enum:
            - ASC
            - DESC
          x-convert:
            uppercase: true
          name: order
          in: query
          required: false
      tags:
        - survey
      responses:
        default:
          schema:
            type: string
          description: Successful
      security:
        - API_KEY: []
  /v1/surveys/{id}/questions:
    get:
      summary: Get survey questions
      operationId: getV1SurveysIdQuestions
      parameters:
        - type: number
          name: id
          in: path
          required: true
        - type: number
          default: 50
          minimum: 1
          maximum: 100
          name: maxResults
          in: query
          required: false
        - type: number
          name: page
          in: query
          required: false
        - type: string
          name: tagName
          in: query
          required: false
      tags:
        - survey
      responses:
        default:
          schema:
            type: string
          description: Successful
      security:
        - API_KEY: []
    post:
      operationId: postV1SurveysIdQuestions
      parameters:
        - type: number
          name: id
          in: path
          required: true
      tags:
        - public
      responses:
        default:
          schema:
            type: string
          description: Successful
      security:
        - API_KEY: []
  /v1/surveys/{id}/settings:
    get:
      summary: Get Survey settings
      operationId: getV1SurveysIdSettings
      parameters:
        - type: number
          name: id
          in: path
          required: true
      tags:
        - survey
      responses:
        default:
          schema:
            type: string
          description: Successful
      security:
        - API_KEY: []
    put:
      summary: Update Survey settings
      operationId: putV1SurveysIdSettings
      parameters:
        - type: number
          name: id
          in: path
          required: true
        - in: body
          name: body
          schema:
            $ref: '#/definitions/Model 219'
      tags:
        - survey
      responses:
        default:
          schema:
            type: string
          description: Successful
      security:
        - API_KEY: []
  /v1/surveys/{survey_id}/webhooks:
    get:
      summary: List survey webhooks
      operationId: getV1SurveysSurvey_idWebhooks
      parameters:
        - type: number
          name: survey_id
          in: path
          required: true
        - type: number
          default: 50
          minimum: 1
          maximum: 100
          name: maxResults
          in: query
          required: false
        - type: number
          name: page
          in: query
          required: false
      tags:
        - webhooks
      responses:
        default:
          schema:
            type: string
          description: Successful
      security:
        - API_KEY: []
  /v1/ces/{surveyId}/shares/{channelId}:
    get:
      summary: Get CES Channel
      operationId: getV1CesSurveyidSharesChannelid
      parameters:
        - type: number
          name: surveyId
          in: path
          required: true
        - type: number
          name: channelId
          in: path
          required: true
      tags:
        - ces
      responses:
        default:
          schema:
            type: string
          description: Successful
      security:
        - API_KEY: []
  /v1/ces/{survey_id}/responses/highEffort:
    get:
      summary: List HighEffort
      operationId: getV1CesSurvey_idResponsesHigheffort
      parameters:
        - type: number
          name: survey_id
          in: path
          required: true
        - type: string
          format: date
          name: date.gte
          in: query
          required: false
        - type: string
          format: date
          name: date.lte
          in: query
          required: false
        - type: number
          name: maxResults
          in: query
          required: false
        - type: number
          name: page
          in: query
          required: false
      tags:
        - ces
      responses:
        default:
          schema:
            type: string
          description: Successful
      security:
        - API_KEY: []
  /v1/ces/{survey_id}/responses/lowEffort:
    get:
      summary: List lowEffort
      operationId: getV1CesSurvey_idResponsesLoweffort
      parameters:
        - type: number
          name: survey_id
          in: path
          required: true
        - type: string
          format: date
          name: date.gte
          in: query
          required: false
        - type: string
          format: date
          name: date.lte
          in: query
          required: false
        - type: number
          name: maxResults
          in: query
          required: false
        - type: number
          name: page
          in: query
          required: false
      tags:
        - ces
      responses:
        default:
          schema:
            type: string
          description: Successful
      security:
        - API_KEY: []
  /v1/ces/{survey_id}/responses/neutral:
    get:
      summary: List Neutral
      operationId: getV1CesSurvey_idResponsesNeutral
      parameters:
        - type: number
          name: survey_id
          in: path
          required: true
        - type: string
          format: date
          name: date.gte
          in: query
          required: false
        - type: string
          format: date
          name: date.lte
          in: query
          required: false
        - type: number
          name: maxResults
          in: query
          required: false
        - type: number
          name: page
          in: query
          required: false
      tags:
        - ces
      responses:
        default:
          schema:
            type: string
          description: Successful
      security:
        - API_KEY: []
  /v1/ces/{survey_id}/submissions/{nps_submission_id}:
    get:
      summary: Get response of an CES survey submission
      operationId: getV1CesSurvey_idSubmissionsNps_submission_id
      parameters:
        - type: number
          name: nps_submission_id
          in: path
          required: true
        - type: number
          name: survey_id
          in: path
      tags:
        - ces
      responses:
        default:
          schema:
            type: string
          description: Successful
      security:
        - API_KEY: []
  /v1/csat/{surveyId}/shares/{channelId}:
    get:
      summary: Get CSAT Channel
      operationId: getV1CsatSurveyidSharesChannelid
      parameters:
        - type: number
          name: surveyId
          in: path
          required: true
        - type: number
          name: channelId
          in: path
          required: true
      tags:
        - csat
      responses:
        default:
          schema:
            type: string
          description: Successful
      security:
        - API_KEY: []
  /v1/csat/{survey_id}/responses/dissatisfied:
    get:
      summary: List Dissatisfied
      operationId: getV1CsatSurvey_idResponsesDissatisfied
      parameters:
        - type: number
          name: survey_id
          in: path
          required: true
        - type: string
          format: date
          name: date.gte
          in: query
          required: false
        - type: string
          format: date
          name: date.lte
          in: query
          required: false
        - type: number
          name: maxResults
          in: query
          required: false
        - type: number
          name: page
          in: query
          required: false
      tags:
        - csat
      responses:
        default:
          schema:
            type: string
          description: Successful
      security:
        - API_KEY: []
  /v1/csat/{survey_id}/responses/satisfied:
    get:
      summary: List Satisfied
      operationId: getV1CsatSurvey_idResponsesSatisfied
      parameters:
        - type: number
          name: survey_id
          in: path
          required: true
        - type: string
          format: date
          name: date.gte
          in: query
          required: false
        - type: string
          format: date
          name: date.lte
          in: query
          required: false
        - type: number
          name: maxResults
          in: query
          required: false
        - type: number
          name: page
          in: query
          required: false
      tags:
        - csat
      responses:
        default:
          schema:
            type: string
          description: Successful
      security:
        - API_KEY: []
  /v1/csat/{survey_id}/responses/neutral:
    get:
      summary: List Neutral
      operationId: getV1CsatSurvey_idResponsesNeutral
      parameters:
        - type: number
          name: survey_id
          in: path
          required: true
        - type: string
          format: date
          name: date.gte
          in: query
          required: false
        - type: string
          format: date
          name: date.lte
          in: query
          required: false
        - type: number
          name: maxResults
          in: query
          required: false
        - type: number
          name: page
          in: query
          required: false
      tags:
        - csat
      responses:
        default:
          schema:
            type: string
          description: Successful
      security:
        - API_KEY: []
  /v1/csat/{survey_id}/submissions/{nps_submission_id}:
    get:
      summary: Get response of an csat survey submission
      operationId: getV1CsatSurvey_idSubmissionsNps_submission_id
      parameters:
        - type: number
          name: nps_submission_id
          in: path
          required: true
        - type: number
          name: survey_id
          in: path
      tags:
        - csat
      responses:
        default:
          schema:
            type: string
          description: Successful
      security:
        - API_KEY: []
  /v1/nps/{survey_id}/responses/passives:
    get:
      summary: List passives
      operationId: getV1NpsSurvey_idResponsesPassives
      parameters:
        - type: number
          name: survey_id
          in: path
          required: true
        - type: string
          format: date
          name: date.gte
          in: query
          required: false
        - type: string
          format: date
          name: date.lte
          in: query
          required: false
        - type: number
          name: maxResults
          in: query
          required: false
        - type: number
          name: page
          in: query
          required: false
      tags:
        - nps
      responses:
        default:
          schema:
            type: string
          description: Successful
      security:
        - API_KEY: []
  /v1/nps/{survey_id}/responses/promoters:
    get:
      summary: List promoters
      operationId: getV1NpsSurvey_idResponsesPromoters
      parameters:
        - type: number
          name: survey_id
          in: path
          required: true
        - type: string
          format: date
          name: date.gte
          in: query
          required: false
        - type: string
          format: date
          name: date.lte
          in: query
          required: false
        - type: number
          name: maxResults
          in: query
          required: false
        - type: number
          name: page
          in: query
          required: false
      tags:
        - nps
      responses:
        default:
          schema:
            type: string
          description: Successful
      security:
        - API_KEY: []
  /v1/nps/{survey_id}/responses/detractors:
    get:
      summary: List detractors
      operationId: getV1NpsSurvey_idResponsesDetractors
      parameters:
        - type: number
          name: survey_id
          in: path
          required: true
        - type: string
          format: date
          name: date.gte
          in: query
          required: false
        - type: string
          format: date
          name: date.lte
          in: query
          required: false
        - type: number
          name: maxResults
          in: query
          required: false
        - type: number
          name: page
          in: query
          required: false
      tags:
        - nps
      responses:
        default:
          schema:
            type: string
          description: Successful
      security:
        - API_KEY: []
  /v1/nps/{surveyId}/shares/{channelId}:
    get:
      summary: Get NPS Channel
      operationId: getV1NpsSurveyidSharesChannelid
      parameters:
        - type: number
          name: surveyId
          in: path
          required: true
        - type: number
          name: channelId
          in: path
          required: true
      tags:
        - nps
      responses:
        default:
          schema:
            type: string
          description: Successful
      security:
        - API_KEY: []
  /v1/surveys/{survey_id}/shares/{share_id}:
    get:
      summary: Get share details
      operationId: getV1SurveysSurvey_idSharesShare_id
      parameters:
        - type: number
          name: survey_id
          in: path
          required: true
        - type: number
          name: share_id
          in: path
          required: true
      tags:
        - share
      responses:
        default:
          schema:
            type: string
          description: Successful
      security:
        - API_KEY: []
  /v1/surveys/{survey_id}/report/link:
    get:
      summary: Get responses report public link
      operationId: getV1SurveysSurvey_idReportLink
      parameters:
        - type: number
          name: survey_id
          in: path
          required: true
        - type: number
          name: report_id
          in: query
          required: false
      tags:
        - reports
      responses:
        default:
          schema:
            type: string
          description: Successful
      security:
        - API_KEY: []
  /v1/surveys/{survey_id}/submissions/{id}:
    get:
      summary: Get survey response
      operationId: getV1SurveysSurvey_idSubmissionsId
      parameters:
        - type: number
          name: id
          in: path
          required: true
        - type: number
          name: survey_id
          in: path
      tags:
        - survey
      responses:
        default:
          schema:
            type: string
          description: Successful
      security:
        - API_KEY: []
    delete:
      summary: Delete survey response
      operationId: deleteV1SurveysSurvey_idSubmissionsId
      parameters:
        - type: number
          name: id
          in: path
          required: true
        - type: number
          name: survey_id
          in: path
      tags:
        - survey
      responses:
        default:
          schema:
            type: string
          description: Successful
      security:
        - API_KEY: []
  /v1/ces/{surveyId}/shares/{channelId}/reminders:
    get:
      summary: List CES reminders
      operationId: getV1CesSurveyidSharesChannelidReminders
      parameters:
        - type: number
          name: surveyId
          in: path
          required: true
        - type: number
          name: channelId
          in: path
          required: true
        - type: number
          default: 1
          minimum: 1
          name: page
          in: query
          required: false
        - type: number
          default: 50
          minimum: 1
          maximum: 100
          name: maxResults
          in: query
          required: false
      tags:
        - ces
      responses:
        '404':
          schema:
            $ref: '#/definitions/Model 53'
          description: Not Found
      security:
        - API_KEY: []
    post:
      summary: Create reminder
      operationId: postV1CesSurveyidSharesChannelidReminders
      parameters:
        - type: number
          name: surveyId
          in: path
          required: true
        - type: number
          name: channelId
          in: path
          required: true
        - in: body
          name: body
          schema:
            $ref: '#/definitions/Model 143'
      tags:
        - ces
      responses:
        '404':
          schema:
            $ref: '#/definitions/Model 53'
          description: Not Found
      security:
        - API_KEY: []
  /v1/ces/{surveyId}/shares/{channelId}/triggers:
    get:
      summary: Get CES Channel triggers
      operationId: getV1CesSurveyidSharesChannelidTriggers
      parameters:
        - type: number
          name: surveyId
          in: path
          required: true
        - type: number
          name: channelId
          in: path
          required: true
        - type: number
          default: 1
          minimum: 1
          name: page
          in: query
          required: false
        - type: boolean
          name: opened
          in: query
          required: false
        - type: boolean
          name: blocked
          in: query
          required: false
        - type: boolean
          name: throttled
          in: query
          required: false
        - type: number
          default: 50
          minimum: 1
          maximum: 100
          name: maxResults
          in: query
          required: false
      tags:
        - ces
      responses:
        default:
          schema:
            type: string
          description: Successful
      security:
        - API_KEY: []
  /v1/csat/{surveyId}/shares/{channelId}/reminders:
    get:
      summary: List csat reminders
      operationId: getV1CsatSurveyidSharesChannelidReminders
      parameters:
        - type: number
          name: surveyId
          in: path
          required: true
        - type: number
          name: channelId
          in: path
          required: true
        - type: number
          default: 1
          minimum: 1
          name: page
          in: query
          required: false
        - type: number
          default: 50
          minimum: 1
          maximum: 100
          name: maxResults
          in: query
          required: false
      tags:
        - csat
      responses:
        '404':
          schema:
            $ref: '#/definitions/Model 53'
          description: Not Found
      security:
        - API_KEY: []
    post:
      summary: Create reminder
      operationId: postV1CsatSurveyidSharesChannelidReminders
      parameters:
        - type: number
          name: surveyId
          in: path
          required: true
        - type: number
          name: channelId
          in: path
          required: true
        - in: body
          name: body
          schema:
            $ref: '#/definitions/Model 143'
      tags:
        - csat
      responses:
        '404':
          schema:
            $ref: '#/definitions/Model 53'
          description: Not Found
      security:
        - API_KEY: []
  /v1/csat/{surveyId}/shares/{channelId}/triggers:
    get:
      summary: Get csat Channel triggers
      operationId: getV1CsatSurveyidSharesChannelidTriggers
      parameters:
        - type: number
          name: surveyId
          in: path
          required: true
        - type: number
          name: channelId
          in: path
          required: true
        - type: number
          default: 1
          minimum: 1
          name: page
          in: query
          required: false
        - type: boolean
          name: opened
          in: query
          required: false
        - type: boolean
          name: blocked
          in: query
          required: false
        - type: boolean
          name: throttled
          in: query
          required: false
        - type: number
          default: 50
          minimum: 1
          maximum: 100
          name: maxResults
          in: query
          required: false
      tags:
        - csat
      responses:
        default:
          schema:
            type: string
          description: Successful
      security:
        - API_KEY: []
  /v1/nps/{surveyId}/shares/{channelId}/triggers:
    get:
      summary: Get NPS Channel triggers
      operationId: getV1NpsSurveyidSharesChannelidTriggers
      parameters:
        - type: number
          name: surveyId
          in: path
          required: true
        - type: number
          name: channelId
          in: path
          required: true
        - type: number
          default: 1
          minimum: 1
          name: page
          in: query
          required: false
        - type: boolean
          name: opened
          in: query
          required: false
        - type: boolean
          name: blocked
          in: query
          required: false
        - type: boolean
          name: throttled
          in: query
          required: false
        - type: number
          default: 50
          minimum: 1
          maximum: 100
          name: maxResults
          in: query
          required: false
      tags:
        - nps
      responses:
        default:
          schema:
            type: string
          description: Successful
      security:
        - API_KEY: []
  /v1/nps/{surveyId}/shares/{channelId}/reminders:
    get:
      summary: List NPS reminders
      operationId: getV1NpsSurveyidSharesChannelidReminders
      parameters:
        - type: number
          name: surveyId
          in: path
          required: true
        - type: number
          name: channelId
          in: path
          required: true
        - type: number
          default: 1
          minimum: 1
          name: page
          in: query
          required: false
        - type: number
          default: 50
          minimum: 1
          maximum: 100
          name: maxResults
          in: query
          required: false
      tags:
        - nps
      responses:
        '404':
          schema:
            $ref: '#/definitions/Model 53'
          description: Not Found
      security:
        - API_KEY: []
    post:
      summary: Create reminder
      operationId: postV1NpsSurveyidSharesChannelidReminders
      parameters:
        - type: number
          name: surveyId
          in: path
          required: true
        - type: number
          name: channelId
          in: path
          required: true
        - in: body
          name: body
          schema:
            $ref: '#/definitions/Model 161'
      tags:
        - nps
      responses:
        '404':
          schema:
            $ref: '#/definitions/Model 53'
          description: Not Found
      security:
        - API_KEY: []
  /v1/survey/{surveyId}/subject/{subjectId}/evaluators:
    get:
      summary: List subject evaluators
      operationId: getV1SurveySurveyidSubjectSubjectidEvaluators
      parameters:
        - type: number
          name: surveyId
          in: path
          required: true
        - type: number
          name: subjectId
          in: path
          required: true
        - type: number
          minimum: 1
          name: pageNo
          in: query
          required: false
        - type: number
          minimum: 1
          maximum: 500
          name: pageLimit
          in: query
          required: false
      tags:
        - employee_360
      responses:
        default:
          schema:
            type: string
          description: Successful
      security:
        - API_KEY: []
  /v1/survey/{surveyId}/subject/{subjectId}/report:
    get:
      summary: Get subject report
      operationId: getV1SurveySurveyidSubjectSubjectidReport
      parameters:
        - type: number
          name: surveyId
          in: path
          required: true
        - type: number
          name: subjectId
          in: path
          required: true
      tags:
        - employee_360
      responses:
        default:
          schema:
            type: string
          description: Successful
      security:
        - API_KEY: []
  /v1/ces:
    post:
      summary: Creates CES Survey
      operationId: postV1Ces
      parameters:
        - in: body
          name: body
          schema:
            $ref: '#/definitions/Model 54'
      tags:
        - ces
      responses:
        default:
          schema:
            type: string
          description: Successful
      security:
        - API_KEY: []
  /v1/csat:
    post:
      summary: Creates csat Survey
      operationId: postV1Csat
      parameters:
        - in: body
          name: body
          schema:
            $ref: '#/definitions/Model 61'
      tags:
        - csat
      responses:
        default:
          schema:
            type: string
          description: Successful
      security:
        - API_KEY: []
  /v1/nps:
    post:
      summary: Creates NPS Survey
      operationId: postV1Nps
      parameters:
        - in: body
          name: body
          schema:
            $ref: '#/definitions/Model 63'
      tags:
        - nps
      responses:
        default:
          schema:
            type: string
          description: Successful
      security:
        - API_KEY: []
  /v1/signup:
    post:
      summary: Create account
      operationId: postV1Signup
      parameters:
        - in: body
          name: body
          schema:
            $ref: '#/definitions/Model 64'
      tags:
        - accounts
      responses:
        default:
          schema:
            type: string
          description: Successful
      security:
        - API_KEY: []
  /v1/audit-logs/events/subscribe:
    post:
      summary: Create subscribed event
      operationId: postV1AuditlogsEventsSubscribe
      parameters:
        - in: body
          name: body
          schema:
            $ref: '#/definitions/Model 137'
      tags:
        - audit_logs
      responses:
        default:
          schema:
            type: string
          description: Successful
      security:
        - API_KEY: []
  /v1/ces/{survey_id}/email:
    post:
      summary: Create CES Email channel
      operationId: postV1CesSurvey_idEmail
      parameters:
        - type: number
          name: survey_id
          in: path
          required: true
        - in: body
          name: body
          schema:
            $ref: '#/definitions/Model 145'
      tags:
        - ces
      responses:
        default:
          schema:
            type: string
          description: Successful
      security:
        - API_KEY: []
  /v1/ces/{survey_id}/sms:
    post:
      summary: Create SMS share
      operationId: postV1CesSurvey_idSms
      parameters:
        - type: number
          name: survey_id
          in: path
          required: true
        - in: body
          name: body
          schema:
            $ref: '#/definitions/Model 149'
      tags:
        - ces
      responses:
        default:
          schema:
            type: string
          description: Successful
      security:
        - API_KEY: []
  /v1/contactlist/active/contacts:
    post:
      summary: Create multiple contacts
      operationId: postV1ContactlistActiveContacts
      parameters:
        - type: string
          description: Custom Token generated from the App
          default: Bearer <Token>
          pattern: /Bearer [^\s]+/
          name: authorization
          in: header
          required: true
        - in: body
          name: body
          schema:
            type: array
            $ref: '#/definitions/Model 151'
      tags:
        - contacts
      responses:
        '200':
          schema:
            $ref: '#/definitions/Model 152'
          description: Successful
        '202':
          schema:
            $ref: '#/definitions/Model 153'
          description: Accepted
      security:
        - API_KEY: []
  /v1/csat/{survey_id}/email:
    post:
      summary: Create csat Email channel
      operationId: postV1CsatSurvey_idEmail
      parameters:
        - type: number
          name: survey_id
          in: path
          required: true
        - in: body
          name: body
          schema:
            $ref: '#/definitions/Model 157'
      tags:
        - csat
      responses:
        default:
          schema:
            type: string
          description: Successful
      security:
        - API_KEY: []
  /v1/csat/{survey_id}/sms:
    post:
      summary: Create SMS share
      operationId: postV1CsatSurvey_idSms
      parameters:
        - type: number
          name: survey_id
          in: path
          required: true
        - in: body
          name: body
          schema:
            $ref: '#/definitions/Model 149'
      tags:
        - csat
      responses:
        default:
          schema:
            type: string
          description: Successful
      security:
        - API_KEY: []
  /v1/kiosk/{deviceId}/submissions:
    post:
      summary: Create Kiosk Submissions
      operationId: postV1KioskDeviceidSubmissions
      parameters:
        - in: body
          name: body
          schema:
            $ref: '#/definitions/Model 159'
      tags:
        - kiosk
      responses:
        default:
          schema:
            type: string
          description: Successful
      security:
        - API_KEY: []
  /v1/nps/{survey_id}/sms:
    post:
      summary: Create SMS share
      operationId: postV1NpsSurvey_idSms
      parameters:
        - type: number
          name: survey_id
          in: path
          required: true
        - in: body
          name: body
          schema:
            $ref: '#/definitions/Model 149'
      tags:
        - nps
      responses:
        default:
          schema:
            type: string
          description: Successful
      security:
        - API_KEY: []
  /v1/nps/{survey_id}/email:
    post:
      summary: Create NPS Email channel
      operationId: postV1NpsSurvey_idEmail
      parameters:
        - type: number
          name: survey_id
          in: path
          required: true
        - in: body
          name: body
          schema:
            $ref: '#/definitions/Model 163'
      tags:
        - nps
      responses:
        default:
          schema:
            type: string
          description: Successful
      security:
        - API_KEY: []
  /v1/sections/{id}/questions:
    post:
      summary: Create question
      operationId: postV1SectionsIdQuestions
      parameters:
        - type: number
          name: id
          in: path
          required: true
      tags:
        - survey
      responses:
        default:
          schema:
            type: string
          description: Successful
      security:
        - API_KEY: []
  /v1/shares/email/{share_id}:
    post:
      summary: Create email share
      operationId: postV1SharesEmailShare_id
      parameters:
        - type: number
          name: share_id
          in: path
          required: true
        - in: body
          name: body
          schema:
            $ref: '#/definitions/Model 165'
      tags:
        - share
      responses:
        default:
          schema:
            type: string
          description: Successful
      security:
        - API_KEY: []
  /v1/survey/{surveyId}/invite:
    post:
      summary: Create invite
      operationId: postV1SurveySurveyidInvite
      parameters:
        - type: number
          name: surveyId
          in: path
          required: true
        - in: body
          name: body
          schema:
            $ref: '#/definitions/Model 170'
      tags:
        - employee_360
      responses:
        default:
          schema:
            type: string
          description: Successful
      security:
        - API_KEY: []
  /v1/surveys/{id}/clone:
    post:
      summary: Clone survey
      operationId: postV1SurveysIdClone
      parameters:
        - type: number
          name: id
          in: path
          required: true
        - in: body
          name: body
          schema:
            $ref: '#/definitions/Model 171'
      tags:
        - survey
      responses:
        default:
          schema:
            type: string
          description: Successful
      security:
        - API_KEY: []
  /v1/surveys/{id}/sections:
    post:
      summary: Create a section
      operationId: postV1SurveysIdSections
      parameters:
        - type: number
          name: id
          in: path
          required: true
        - x-alternatives:
            - $ref: '#/x-alt-definitions/Model 22'
            - $ref: '#/x-alt-definitions/Model 23'
              type: array
          in: body
          name: body
          schema:
            $ref: '#/definitions/Model 182'
      tags:
        - survey
      responses:
        default:
          schema:
            type: string
          description: Successful
      security:
        - API_KEY: []
  /v1/ces/{survey_id}/sms/{id}:
    post:
      summary: Share existing SMS Share
      operationId: postV1CesSurvey_idSmsId
      parameters:
        - type: number
          name: survey_id
          in: path
          required: true
        - type: number
          name: id
          in: path
          required: true
        - in: body
          name: body
          schema:
            $ref: '#/definitions/Model 186'
      tags:
        - ces
      responses:
        default:
          schema:
            type: string
          description: Successful
      security:
        - API_KEY: []
  /v1/ces/{survey_id}/email/{channel_id}:
    post:
      summary: Send CES channel Blast
      operationId: postV1CesSurvey_idEmailChannel_id
      parameters:
        - type: number
          name: survey_id
          in: path
          required: true
        - type: number
          name: channel_id
          in: path
          required: true
        - in: body
          name: body
          schema:
            $ref: '#/definitions/Model 187'
      tags:
        - ces
      responses:
        default:
          schema:
            type: string
          description: Successful
      security:
        - API_KEY: []
  /v1/csat/{survey_id}/sms/{id}:
    post:
      summary: Share existing SMS Share
      operationId: postV1CsatSurvey_idSmsId
      parameters:
        - type: number
          name: survey_id
          in: path
          required: true
        - type: number
          name: id
          in: path
          required: true
        - in: body
          name: body
          schema:
            $ref: '#/definitions/Model 186'
      tags:
        - csat
      responses:
        default:
          schema:
            type: string
          description: Successful
      security:
        - API_KEY: []
  /v1/csat/{survey_id}/email/{channel_id}:
    post:
      summary: Send csat channel Blast
      operationId: postV1CsatSurvey_idEmailChannel_id
      parameters:
        - type: number
          name: survey_id
          in: path
          required: true
        - type: number
          name: channel_id
          in: path
          required: true
        - in: body
          name: body
          schema:
            $ref: '#/definitions/Model 187'
      tags:
        - csat
      responses:
        default:
          schema:
            type: string
          description: Successful
      security:
        - API_KEY: []
  /v1/nps/{survey_id}/email/{channel_id}:
    post:
      summary: Send NPS channel Blast
      operationId: postV1NpsSurvey_idEmailChannel_id
      parameters:
        - type: number
          name: survey_id
          in: path
          required: true
        - type: number
          name: channel_id
          in: path
          required: true
        - in: body
          name: body
          schema:
            $ref: '#/definitions/Model 187'
      tags:
        - nps
      responses:
        default:
          schema:
            type: string
          description: Successful
      security:
        - API_KEY: []
  /v1/nps/{survey_id}/sms/{id}:
    post:
      summary: Share existing SMS Share
      operationId: postV1NpsSurvey_idSmsId
      parameters:
        - type: number
          name: survey_id
          in: path
          required: true
        - type: number
          name: id
          in: path
          required: true
        - in: body
          name: body
          schema:
            $ref: '#/definitions/Model 186'
      tags:
        - nps
      responses:
        default:
          schema:
            type: string
          description: Successful
      security:
        - API_KEY: []
  /v1/surveys/{survey_id}/submission/start:
    post:
      summary: Start submission
      operationId: postV1SurveysSurvey_idSubmissionStart
      parameters:
        - type: number
          name: survey_id
          in: path
          required: true
        - in: body
          name: body
          schema:
            $ref: '#/definitions/Model 188'
      tags:
        - submissions
      responses:
        default:
          schema:
            type: string
          description: Successful
      security:
        - API_KEY: []
  /v1/surveys/{survey_id}/share/link:
    post:
      summary: Create link share for Survey
      operationId: postV1SurveysSurvey_idShareLink
      parameters:
        - type: number
          name: survey_id
          in: path
          required: true
      tags:
        - share
      responses:
        default:
          schema:
            type: string
          description: Successful
      security:
        - API_KEY: []
  /v1/survey/{survey_id}/channels/{channel_id}/contacts/survey-link:
    post:
      summary: Unique survey link for each contact
      operationId: postV1SurveySurvey_idChannelsChannel_idContactsSurveylink
      parameters:
        - type: number
          name: survey_id
          in: path
          required: true
        - type: number
          name: channel_id
          in: path
          required: true
        - in: body
          name: body
          schema:
            $ref: '#/definitions/Model 193'
      tags:
        - share
      responses:
        default:
          schema:
            type: string
          description: Successful
      security:
        - API_KEY: []
  /v1/contactlist/{id}:
    put:
      summary: Update contact list
      operationId: putV1ContactlistId
      parameters:
        - type: number
          name: id
          in: path
          required: true
        - in: body
          name: body
          schema:
            $ref: '#/definitions/Model 55'
      tags:
        - contact_list
      responses:
        default:
          schema:
            type: string
          description: Successful
      security:
        - API_KEY: []
    delete:
      summary: Delete contact list
      operationId: deleteV1ContactlistId
      parameters:
        - type: number
          name: id
          in: path
          required: true
      tags:
        - contact_list
      responses:
        default:
          schema:
            type: string
          description: Successful
      security:
        - API_KEY: []
  /v1/webhooks/{id}:
    put:
      summary: Update webhook
      operationId: putV1WebhooksId
      parameters:
        - type: number
          name: id
          in: path
          required: true
        - in: body
          name: body
          schema:
            $ref: '#/definitions/Model 202'
      tags:
        - webhooks
      responses:
        default:
          schema:
            type: string
          description: Successful
      security:
        - API_KEY: []
    delete:
      summary: Delete webhook
      operationId: deleteV1WebhooksId
      parameters:
        - type: number
          name: id
          in: path
          required: true
      tags:
        - webhooks
      responses:
        default:
          schema:
            type: string
          description: Successful
      security:
        - API_KEY: []
  /v1/contacts/properties/{id}:
    put:
      summary: Update contact property
      operationId: putV1ContactsPropertiesId
      parameters:
        - type: number
          name: id
          in: path
          required: true
        - in: body
          name: body
          schema:
            $ref: '#/definitions/Model 218'
      tags:
        - contacts
      responses:
        default:
          schema:
            type: string
          description: Successful
      security:
        - API_KEY: []
    delete:
      summary: Delete contact property
      operationId: deleteV1ContactsPropertiesId
      parameters:
        - type: number
          name: id
          in: path
          required: true
      tags:
        - contacts
      responses:
        default:
          schema:
            type: string
          description: Successful
      security:
        - API_KEY: []
  /v1/surveys/{id}/questions/{question_id}:
    put:
      summary: Update question
      operationId: putV1SurveysIdQuestionsQuestion_id
      parameters:
        - type: number
          name: id
          in: path
          required: true
        - type: number
          name: question_id
          in: path
          required: true
        - in: body
          name: body
          schema:
            $ref: '#/definitions/Model 226'
      tags:
        - survey
      responses:
        default:
          schema:
            type: string
          description: Successful
      security:
        - API_KEY: []
    delete:
      summary: Delete question
      operationId: deleteV1SurveysIdQuestionsQuestion_id
      parameters:
        - type: number
          name: id
          in: path
          required: true
        - type: number
          name: question_id
          in: path
          required: true
      tags:
        - survey
      responses:
        default:
          schema:
            type: string
          description: Successful
      security:
        - API_KEY: []
  /v1/surveys/{id}/sections/{section_id}:
    put:
      summary: Update survey section
      operationId: putV1SurveysIdSectionsSection_id
      parameters:
        - type: number
          name: section_id
          in: path
          required: true
        - type: number
          name: id
          in: path
          required: true
        - in: body
          name: body
          schema:
            $ref: '#/definitions/Model 228'
      tags:
        - survey
      responses:
        default:
          schema:
            type: string
          description: Successful
      security:
        - API_KEY: []
    delete:
      summary: Delete a section
      operationId: deleteV1SurveysIdSectionsSection_id
      parameters:
        - type: number
          name: id
          in: path
          required: true
        - type: number
          name: section_id
          in: path
          required: true
      tags:
        - survey
      responses:
        default:
          schema:
            type: string
          description: Successful
      security:
        - API_KEY: []
  /v1/survey/{surveyId}/subject/{subjectId}/invite:
    put:
      summary: Update invite
      operationId: putV1SurveySurveyidSubjectSubjectidInvite
      parameters:
        - type: number
          name: surveyId
          in: path
          required: true
        - type: number
          name: subjectId
          in: path
          required: true
        - in: body
          name: body
          schema:
            $ref: '#/definitions/Model 229'
      tags:
        - employee_360
      responses:
        default:
          schema:
            type: string
          description: Successful
      security:
        - API_KEY: []
  /v1/survey/{surveyId}/shares/sms/{channelId}:
    put:
      summary: Update SMS share
      operationId: putV1SurveySurveyidSharesSmsChannelid
      parameters:
        - type: number
          name: surveyId
          in: path
          required: true
        - type: number
          name: channelId
          in: path
          required: true
        - in: body
          name: body
          schema:
            $ref: '#/definitions/Model 230'
      tags:
        - share
      responses:
        default:
          schema:
            type: string
          description: Successful
      security:
        - API_KEY: []
  /v1/survey/{survey_id}/submissions/{submission_id}/complete:
    put:
      summary: Complete submission
      operationId: putV1SurveySurvey_idSubmissionsSubmission_idComplete
      parameters:
        - type: number
          name: survey_id
          in: path
          required: true
        - type: number
          name: submission_id
          in: path
          required: true
      tags:
        - submissions
      responses:
        default:
          schema:
            type: string
          description: Successful
      security:
        - API_KEY: []
  /v1/delete:
    delete:
      summary: Delete account
      operationId: deleteV1Delete
      tags:
        - accounts
      responses:
        default:
          schema:
            type: string
          description: Successful
      security:
        - API_KEY: []
  /v1/submissions/{id}:
    delete:
      summary: Delete survey response
      operationId: deleteV1SubmissionsId
      parameters:
        - type: number
          name: id
          in: path
          required: true
        - type: number
          name: survey_id
          in: path
      tags:
        - survey
      responses:
        default:
          schema:
            type: string
          description: Successful
      security:
        - API_KEY: []
  /v1/audit-logs/events/{id}:
    delete:
      summary: Delete subscribed event
      operationId: deleteV1AuditlogsEventsId
      parameters:
        - type: number
          name: id
          in: path
          required: true
      tags:
        - audit_logs
      responses:
        default:
          schema:
            type: string
          description: Successful
      security:
        - API_KEY: []
  /v1/surveys/{id}/variables/{variable_id}:
    delete:
      summary: Delete survey variable
      operationId: deleteV1SurveysIdVariablesVariable_id
      parameters:
        - type: number
          name: variable_id
          in: path
          required: true
        - type: number
          name: id
          in: path
          required: true
      tags:
        - survey
      responses:
        default:
          schema:
            type: string
          description: Successful
      security:
        - API_KEY: []
  /v1/ces/{surveyId}/shares/{channelId}/reminders/{reminderId}:
    delete:
      summary: Delete CES reminder
      operationId: deleteV1CesSurveyidSharesChannelidRemindersReminderid
      parameters:
        - type: number
          name: surveyId
          in: path
          required: true
        - type: number
          name: channelId
          in: path
          required: true
        - type: number
          name: reminderId
          in: path
          required: true
      tags:
        - ces
      responses:
        '200':
          schema:
            $ref: '#/definitions/Model 238'
          description: Successful
        '404':
          schema:
            $ref: '#/definitions/Model 239'
          description: Not Found
      security:
        - API_KEY: []
  /v1/csat/{surveyId}/shares/{channelId}/reminders/{reminderId}:
    delete:
      summary: Delete csat reminder
      operationId: deleteV1CsatSurveyidSharesChannelidRemindersReminderid
      parameters:
        - type: number
          name: surveyId
          in: path
          required: true
        - type: number
          name: channelId
          in: path
          required: true
        - type: number
          name: reminderId
          in: path
          required: true
      tags:
        - csat
      responses:
        '200':
          schema:
            $ref: '#/definitions/Model 240'
          description: Successful
        '404':
          schema:
            $ref: '#/definitions/Model 239'
          description: Not Found
      security:
        - API_KEY: []
  /v1/nps/{surveyId}/shares/{channelId}/reminders/{reminderId}:
    delete:
      summary: Delete NPS reminder
      operationId: deleteV1NpsSurveyidSharesChannelidRemindersReminderid
      parameters:
        - type: number
          name: surveyId
          in: path
          required: true
        - type: number
          name: channelId
          in: path
          required: true
        - type: number
          name: reminderId
          in: path
          required: true
      tags:
        - nps
      responses:
        '200':
          schema:
            $ref: '#/definitions/Model 238'
          description: Successful
        '404':
          schema:
            $ref: '#/definitions/Model 239'
          description: Not Found
      security:
        - API_KEY: []
definitions:
  Model 1:
    type: object
    properties:
      id:
        type: number
        description: ID of the contact
      name:
        type: string
        description: Full Name of contact
        example: Jane Doe
      email:
        type: string
        description: Email of contact
        example: janedoe@surveysparrow.com
        x-format:
          email: true
      active:
        type: boolean
        description: >-
          if true, indicates the contact will actively receive email and sms
          shares
        example: true
      unsubscribed:
        type: boolean
        description: >-
          if true, indicates that the contact is unsubscribed from receiving
          emails
        example: false
      phone:
        type: string
        description: Phone number of the contact
        example: '91234567833'
      mobile:
        type: string
        description: Mobile number of the contact
        example: '1653452783'
      jobTitle:
        type: string
        description: Job Title of the contact
        example: Manager
    required:
      - id
      - active
      - unsubscribed
  contacts:
    type: array
    items:
      $ref: '#/definitions/Model 1'
  Model 2:
    type: object
    properties:
      contacts:
        $ref: '#/definitions/contacts'
        type: array
      hasNextPage:
        type: boolean
        example: 'false'
    required:
      - hasNextPage
  list:
    type: array
    description: List of all audit logs
    example:
      - object: survey
        survey:
          id: 1
          name: Untitled
        id: 8190da50-1405
        event: SURVEY_CREATED
        operation: Create
        device: COMPUTER
        ipAddress: 127.0.0.1
        time: '2023-06-26T09:40:10.018Z'
        actor:
          id: 1
          email: test@test.com
          name: test
        message: test has created a new survey Untitled
    items:
      type: string
  Model 3:
    type: object
    properties:
      has_next_page:
        type: boolean
        description: More items in the collection?
        example: true
      count:
        type: number
        description: Total count of audit logs.
        example: 10
      list:
        $ref: '#/definitions/list'
        type: array
    required:
      - count
      - list
  properties:
    type: object
  channelSchema:
    type: object
    properties:
      id:
        type: number
        description: Id of channel
        example: 1
      name:
        type: string
        description: Name of channel
        example: Email share 1
      status:
        type: string
        description: Status of the share
        example: ACTIVE
      type:
        type: string
        description: Type of channel
        example: EMAIL
      properties:
        $ref: '#/definitions/properties'
  getChannelsChannelsSchema:
    type: array
    items:
      $ref: '#/definitions/channelSchema'
  getChannelsSchema:
    type: object
    properties:
      has_next_page:
        type: boolean
        description: More items in the collection?
        example: true
      data:
        $ref: '#/definitions/getChannelsChannelsSchema'
        type: array
  contactListSchema:
    type: object
    properties:
      id:
        type: number
        example: 1
      name:
        type: string
        example: Contact List 1
      description:
        type: string
        example: Subscribed Contacts
  getContactListsContactListSchema:
    type: array
    items:
      $ref: '#/definitions/contactListSchema'
  getContactListsSchema:
    type: object
    properties:
      data:
        $ref: '#/definitions/getContactListsContactListSchema'
        type: array
  contactPropertySchema:
    type: object
    properties:
      id:
        type: number
        description: ID of contact property
        example: 1
      name:
        type: string
        description: Name of contact property
        example: date
      label:
        type: string
        description: Label of contact property
        example: Date
      type:
        type: string
        description: Type of contact property
        example: DATE
      description:
        type: string
        description: Description about contact property
        example: Date of joining field
      contact_property_group_id:
        type: number
        description: ID of contact property group, contact property belongs to
        example: 1
      group:
        type: string
        description: Name of contact property group, contact property belongs to
        example: Group name
  getcontactPropertiesSchema:
    type: array
    items:
      $ref: '#/definitions/contactPropertySchema'
  getContactPropertiesContactPropertiesSchema:
    type: object
    properties:
      data:
        $ref: '#/definitions/getcontactPropertiesSchema'
        type: array
  getContactSchema:
    type: array
    items:
      type: string
  getContactsSchema:
    type: object
    properties:
      has_next_page:
        type: boolean
        example: true
      data:
        $ref: '#/definitions/getContactSchema'
        type: array
  Model 4:
    type: object
    properties:
      id:
        type: number
      name:
        type: string
      created_at:
        type: string
        format: date
        example: '2022-03-10T12:34:00.860Z'
      updated_at:
        type: string
        format: date
        example: '2022-03-10T12:34:00.860Z'
      properties:
        $ref: '#/definitions/properties'
      is_public:
        type: boolean
  data:
    type: array
    items:
      $ref: '#/definitions/Model 4'
  emailThemeResponseSchema:
    type: object
    properties:
      data:
        $ref: '#/definitions/data'
        type: array
  expressionResponseSchema:
    type: object
    properties:
      id:
        type: number
      name:
        type: string
      representation:
        $ref: '#/definitions/getContactSchema'
        type: array
    required:
      - name
      - representation
  Model 5:
    type: array
    items:
      $ref: '#/definitions/expressionResponseSchema'
  getAllExpressionSchema:
    type: object
    properties:
      data:
        $ref: '#/definitions/Model 5'
        type: array
      has_next_page:
        type: boolean
  Model 6:
    type: object
    properties:
      code:
        type: string
        description: Language code
        example: en
      name:
        type: string
        description: Language name
        example: English
      label:
        type: string
        description: Language label
        example: eng
      flag:
        type: string
        description: Language flag
        example: GB
    required:
      - code
      - name
      - label
      - flag
  standardLanguages:
    type: array
    description: Array of languages
    items:
      $ref: '#/definitions/Model 6'
  Model 7:
    type: object
    properties:
      code:
        type: string
        description: Language code
        example: ssl
      name:
        type: string
        description: Language name
        example: SurveySparrow Language
      label:
        type: string
        description: Language label
        example: ssl
    required:
      - code
      - name
      - label
  customLanguages:
    type: array
    description: Array of custom languages
    items:
      $ref: '#/definitions/Model 7'
  Model 8:
    type: object
    properties:
      standardLanguages:
        $ref: '#/definitions/standardLanguages'
        type: array
      customLanguages:
        $ref: '#/definitions/customLanguages'
        type: array
    required:
      - standardLanguages
      - customLanguages
  Model 9:
    type: object
    properties:
      data:
        $ref: '#/definitions/Model 8'
  Model 10:
    type: object
    properties:
      error:
        type: string
        description: Error message
        example: Bad request
    required:
      - error
  Model 11:
    type: object
    properties:
      error:
        type: string
        description: Error message
        example: Payment required
    required:
      - error
  Model 12:
    type: object
    properties:
      error:
        type: string
        description: Error message
        example: Not found
    required:
      - error
  questionSchema:
    type: object
    properties:
      id:
        type: number
        example: 1
      type:
        type: string
        description: Question type
        example: TextInput
      position:
        type: string
        description: Position of question
        example: '2.000000000000000'
      hasDisplayLogic:
        type: boolean
        description: Whether the question has display logic
        example: false
      properties:
        $ref: '#/definitions/properties'
      survey_id:
        type: number
        description: Id of the Survey
        example: 2
      section_id:
        type: number
        description: Id of the section question is part of
        example: 3
      account_id:
        type: number
        description: Account Id
        example: 2
      parent_question_id:
        type: number
        description: >-
          If question is a subquestion, parent_question_id will be the Id of the
          parent question
        example: 3
  questionsQuestionSchema:
    type: array
    items:
      $ref: '#/definitions/questionSchema'
  getQuestionsSchema:
    type: object
    properties:
      has_next_page:
        type: boolean
        description: More questions in the survey
        example: true
      data:
        $ref: '#/definitions/questionsQuestionSchema'
        type: array
  reminderSchema:
    type: object
    properties:
      id:
        type: number
        description: Id of reminder
        example: 1
      subject:
        type: string
        description: Subject of reminder
        example: Your feedback matters!
      frequency:
        type: string
        description: Frequency of reminder
        example: Days
        enum:
          - Days
          - Weeks
          - Months
      type:
        type: string
        description: Type of reminder
        enum:
          - NOT_RESPONDED
          - PARTIALLY_RESPONDED
      after_days:
        type: number
      sent_count:
        type: number
        default: 0
      created_at:
        type: string
        format: date
      updated_at:
        type: string
        format: date
      survey_id:
        type: number
        description: Id of Survey
        example: 1
      account_id:
        type: number
        description: Id of Account
        example: 1
      message:
        type: string
        description: >-
          Return a message when Partial Respondents reminder type is created
          without turning on partial submissions in the survey settings
    required:
      - id
      - subject
      - frequency
      - type
      - after_days
      - sent_count
      - created_at
      - updated_at
      - survey_id
      - account_id
  Model 13:
    type: array
    items:
      $ref: '#/definitions/reminderSchema'
  getRemindersSchema:
    type: object
    properties:
      has_next_page:
        type: boolean
        description: More items in the collection?
        example: true
      data:
        $ref: '#/definitions/Model 13'
        type: array
  question_tags:
    type: array
    description: Question tags
    items:
      type: string
  Model 14:
    type: object
    properties:
      question:
        type: string
        example: How likely are you to recommend our Product to friends?
      question_tags:
        $ref: '#/definitions/question_tags'
        type: array
      question_id:
        type: number
        x-alternatives:
          - type: number
          - type: string
      skipped:
        type: boolean
        description: Is the question skipped?
        example: false
  responsesAnswersSchema:
    type: array
    items:
      $ref: '#/definitions/Model 14'
  responsesChannelSchema:
    type: object
    properties:
      name:
        type: string
        description: Name of the share
        example: Email share 1
      type:
        type: string
        description: Type of channel
        example: EMAIL
      status:
        type: string
        description: Status of channel
        example: ACTIVE
  Model 15:
    type: object
    properties:
      id:
        type: number
        description: Id of response
        example: 1
      survey_id:
        type: number
        description: Id of Survey
        example: 2
      contact_id:
        type: number
      completed:
        type: string
        description: Status of the submission
      channel_id:
        type: number
        description: Id of channel
        example: 3
      language:
        type: string
        description: Language of the response
        example: en
      completed_time:
        type: string
        format: date
        description: Time at which response completed
        example: '2022-03-03T06:19:04.416Z'
      answers:
        $ref: '#/definitions/responsesAnswersSchema'
        type: array
      channel:
        $ref: '#/definitions/responsesChannelSchema'
  responsesSchema:
    type: array
    items:
      $ref: '#/definitions/Model 15'
  getResponsesSchema:
    type: object
    properties:
      has_next_page:
        type: boolean
        example: true
      data:
        $ref: '#/definitions/responsesSchema'
        type: array
  roleSchema:
    type: object
    properties:
      id:
        type: number
        description: Role id
        example: 1
      name:
        type: string
        description: Role name
        example: ACCOUNT_OWNER
      label:
        type: string
        description: Role name
        example: Account Owner
      description:
        type: string
        description: Role description
        example: Has Permissions over Everything.
      account_id:
        type: number
        description: Account Id
        example: 2
      created_at:
        type: string
        format: date
        example: '2022-03-10T12:34:00.860Z'
      updated_at:
        type: string
        format: date
        example: '2022-03-10T12:34:00.860Z'
      deleted_at:
        type: string
        format: date
        example: '2022-03-10T12:34:00.860Z'
  rolesRoleSchema:
    type: array
    items:
      $ref: '#/definitions/roleSchema'
  getRolesSchema:
    type: object
    properties:
      data:
        $ref: '#/definitions/rolesRoleSchema'
        type: array
      has_next_page:
        type: boolean
        example: true
  teams:
    type: array
    items:
      type: number
  Model 16:
    type: object
    properties:
      id:
        type: number
        example: 1
      name:
        type: string
        example: My First Survey
      surveType:
        type: string
  surveys:
    type: array
    items:
      $ref: '#/definitions/Model 16'
  surveyFolderSchema:
    type: object
    properties:
      id:
        type: number
        example: 1
      name:
        type: string
        example: General
        maxLength: 100
      description:
        type: string
        example: The general Workspace
        maxLength: 200
      auto_created:
        type: boolean
      visibility:
        type: string
        enum:
          - ALL
          - PRIVATE
      teams:
        $ref: '#/definitions/teams'
        type: array
      surveys:
        $ref: '#/definitions/surveys'
        type: array
  Model 17:
    type: array
    items:
      $ref: '#/definitions/surveyFolderSchema'
  getSurveyFoldersResponseSchema:
    type: object
    properties:
      data:
        $ref: '#/definitions/Model 17'
        type: array
  surveySchema:
    type: object
    properties:
      id:
        type: number
        example: 1
      name:
        type: string
        example: Employee Satisfaction Survey
      archived:
        type: boolean
        example: false
      survey_type:
        type: string
        example: Conversational
      created_at:
        type: string
        format: date
        example: '2022-02-28T07:25:44.268Z'
      updated_at:
        type: string
        format: date
        example: '2022-02-28T07:25:44.268Z'
      survey_folder_id:
        type: number
        example: 10000034
      survey_folder_name:
        type: string
        example: General
  getSurveysSurveySchema:
    type: array
    items:
      $ref: '#/definitions/surveySchema'
  getSurveysSchema:
    type: object
    properties:
      has_next_page:
        type: boolean
        example: true
      data:
        $ref: '#/definitions/getSurveysSurveySchema'
        type: array
  targetSchema:
    type: object
    properties:
      targets:
        $ref: '#/definitions/getContactSchema'
        type: array
      page:
        type: number
        example: 1
      count:
        type: number
        example: 1
      has_next_page:
        type: boolean
        example: false
  getTargetsResponseSchema:
    type: object
    properties:
      data:
        $ref: '#/definitions/targetSchema'
  teamSchema:
    type: object
    properties:
      id:
        type: number
        description: Team id
        example: 1
      name:
        type: string
        description: Team name
        example: Avengers
      description:
        type: string
        description: Team description
        example: Avengers team
      type:
        type: string
        description: Type of team
        example: SURVEY
      account_id:
        type: number
        description: Account Id
        example: 2
      business_hour_id:
        type: number
      round_robin_enabled:
        type: boolean
        description: Round robin enabled
        example: true
      created_at:
        type: string
        format: date
        example: '2022-03-10T12:34:00.860Z'
      updated_at:
        type: string
        format: date
        example: '2022-03-10T12:34:00.860Z'
      deleted_at:
        type: string
        format: date
        example: '2022-03-10T12:34:00.860Z'
  teamsTeamSchema:
    type: array
    items:
      $ref: '#/definitions/teamSchema'
  getTeamsSchema:
    type: object
    properties:
      data:
        $ref: '#/definitions/teamsTeamSchema'
        type: array
      has_next_page:
        type: boolean
        example: true
  ticketField:
    type: object
    properties:
      id:
        type: number
        description: Ticket field ID
        example: 1
      name:
        type: string
        description: Ticket field name
        example: Custom field 1
      description:
        type: string
        description: Ticket field description
      internal_name:
        type: string
        description: Ticket field internal name
        example: Custom_field_1
      type:
        type: string
        description: Ticket field type
        example: Dropdown
      is_default:
        type: boolean
        example: true
      mandatory:
        type: boolean
        example: true
      options:
        $ref: '#/definitions/getContactSchema'
        type: array
      created_at:
        type: string
        format: date
        example: '2022-03-10T12:34:00.860Z'
      updated_at:
        type: string
        format: date
        example: '2022-03-10T12:34:00.860Z'
  getTicketFieldsSchema:
    type: array
    items:
      $ref: '#/definitions/ticketField'
  Model 18:
    type: object
    properties:
      data:
        $ref: '#/definitions/getTicketFieldsSchema'
        type: array
      has_next_page:
        type: boolean
        example: true
  ticketSchema:
    type: object
    properties:
      id:
        type: number
        description: Ticket id
        example: 1
      requester:
        $ref: '#/definitions/properties'
      subject:
        type: string
        description: Ticket subject
        example: Ticket 1
        maxLength: 200
      description:
        type: string
        description: Ticket description
        example: Ticket 1 description
      description_html:
        type: string
        description: Ticket description
        example: Ticket 1 description
      priority:
        $ref: '#/definitions/properties'
      status:
        $ref: '#/definitions/properties'
      custom_fields:
        $ref: '#/definitions/properties'
      source:
        $ref: '#/definitions/properties'
      agent:
        $ref: '#/definitions/properties'
      team:
        $ref: '#/definitions/properties'
      created_at:
        type: string
        format: date
        example: '2022-03-10T12:34:00.860Z'
      updated_at:
        type: string
        format: date
        example: '2022-03-10T12:34:00.860Z'
      deleted_at:
        type: string
        format: date
        example: '2022-03-10T12:34:00.860Z'
      first_response_due:
        type: string
        format: date
        example: '2022-03-11T12:34:00.860Z'
      resolution_due:
        type: string
        format: date
        example: '2022-03-11T12:34:00.860Z'
  ticketsSchema:
    type: array
    items:
      $ref: '#/definitions/ticketSchema'
  getTicketsSchema:
    type: object
    properties:
      data:
        $ref: '#/definitions/ticketsSchema'
        type: array
      has_next_page:
        type: boolean
        example: true
  userSchema:
    type: object
    properties:
      id:
        type: number
        description: User Id
        example: 1
      name:
        type: string
        description: User name
        example: Jane Doe
      email:
        type: string
        description: User email
        example: johndoe@example.com
      phone:
        type: string
        description: User phone number
        example: '+1384843'
      admin:
        type: boolean
        description: Is user an admin
        example: false
      owner:
        type: boolean
        description: Is user owner of the account
        example: true
      agency_owner:
        type: boolean
        description: Is user an agency owner
        example: false
      verified:
        type: boolean
        description: Is user account verified?
        example: true
      role_id:
        type: number
        description: Id of the user role
        example: 2
  getUsersUserSchema:
    type: array
    items:
      $ref: '#/definitions/userSchema'
  getUsersSchema:
    type: object
    properties:
      data:
        $ref: '#/definitions/getUsersUserSchema'
        type: array
      has_next_page:
        type: boolean
        example: true
  getVariableSchema:
    type: object
    properties:
      id:
        type: number
        description: Variable ID
        example: 1
      label:
        type: string
        description: Variable label
        example: Ticket ID
      name:
        type: string
        description: Unique identifier for variable
        example: ticket_id
      description:
        type: string
        description: Description for variable
        example: Freshdesk ticket id
      type:
        type: string
        description: Variable data type
        example: STRING
  Model 19:
    type: array
    items:
      $ref: '#/definitions/getVariableSchema'
  getAllVariablesSchema:
    type: object
    properties:
      data:
        $ref: '#/definitions/Model 19'
        type: array
      has_next_page:
        type: boolean
  Model 20:
    type: object
    properties:
      key:
        type: string
        example: Content-Type
        maxLength: 255
      value:
        type: string
        example: application/json
        maxLength: 255
  headers:
    type: array
    items:
      $ref: '#/definitions/Model 20'
  Model 21:
    type: object
    properties:
      payload:
        type: string
        example: |-
          {

          "key1": "value1",
          "key1":"value1"

          }
      includePartialSubmission:
        type: boolean
        example: true
        default: false
  webhookSchema:
    type: object
    properties:
      id:
        type: number
        example: 1
      name:
        type: string
        example: Sample webhook
        maxLength: 255
      url:
        type: string
        example: https://webhook.com/data
        maxLength: 1000
      eventType:
        type: string
        example: submission_completed
        maxLength: 255
      description:
        type: string
        example: This is sample webhook
        maxLength: 1000
      objectType:
        type: string
        example: survey
        maxLength: 255
      httpMethod:
        type: string
        example: POST
        maxLength: 255
      headers:
        $ref: '#/definitions/headers'
        type: array
      properties:
        $ref: '#/definitions/Model 21'
      disabled:
        type: boolean
        example: false
  getWebhooksWebhookSchema:
    type: array
    items:
      $ref: '#/definitions/webhookSchema'
  getwebhooksSchema:
    type: object
    properties:
      has_next_page:
        type: boolean
        example: true
      data:
        $ref: '#/definitions/getWebhooksWebhookSchema'
        type: array
  Model 22:
    type: object
    properties:
      id:
        type: number
        description: ID of the Label
      name:
        type: string
        description: Name of the label
    required:
      - id
      - name
  Model 23:
    type: array
    description: List of Labels the contact has to be added into
    example:
      - id: 1
        name: list1
      - id: 2
        name: list2
    items:
      $ref: '#/definitions/Model 22'
  Model 24:
    type: object
    properties:
      id:
        type: number
        description: ID of the contact
      name:
        type: string
        description: Full Name of contact
        example: Jane Doe
      email:
        type: string
        description: Email of contact
        example: janedoe@surveysparrow.com
        x-format:
          email: true
      active:
        type: boolean
        description: >-
          if true, indicates the contact will actively receive email and sms
          shares
        example: true
      unsubscribed:
        type: boolean
        description: >-
          if true, indicates that the contact is unsubscribed from receiving
          emails
        example: false
      unsubscribed_at:
        type: string
        format: date
        description: when the contact has unsubscribed
        example: '2023-08-28 12:26:56.899+05:30'
      phone:
        type: string
        description: Phone number of the contact
        example: '91234567833'
      mobile:
        type: string
        description: Mobile number of the contact
        example: '1653452783'
      jobTitle:
        type: string
        description: Job Title of the contact
        example: Manager
      list:
        $ref: '#/definitions/Model 23'
        type: array
    required:
      - id
      - active
      - unsubscribed
      - unsubscribed_at
  Model 25:
    type: object
    properties:
      id:
        type: number
        description: ID of the event
        example: 1
      event:
        type: string
        description: Name of the event
        example: SURVEY_CREATED
      url:
        type: string
        description: URL of audit webhook event
        example: https://subscribed.com/data
      http_method:
        type: string
        description: The HTTP method of the request (GET, PUT, POST, or DELETE).
        example: POST
      headers:
        $ref: '#/definitions/properties'
    required:
      - id
      - event
      - url
      - http_method
  events:
    type: array
    items:
      $ref: '#/definitions/Model 25'
  Model 26:
    type: object
    properties:
      has_next_page:
        type: boolean
        description: More items in the collection?
        example: true
      count:
        type: number
        description: Total Count of subscribed events
        example: 2
      events:
        $ref: '#/definitions/events'
        type: array
    required:
      - count
  Model 27:
    type: object
    properties:
      data:
        $ref: '#/definitions/channelSchema'
  contactListResponseSchema:
    type: object
    properties:
      data:
        $ref: '#/definitions/contactListSchema'
  getReminderSchema:
    type: object
    properties:
      data:
        $ref: '#/definitions/reminderSchema'
  appPlatformSchema:
    type: object
    properties:
      id:
        type: number
        example: 1
      data_fetch_address:
        type: string
        example: https://www.configured_platform.com
      location:
        type: string
        example: Location 1
      is_active:
        type: boolean
        example: true
      platform_id:
        type: number
        example: 1
      created_at:
        type: string
        format: date
        example: '2022-02-28T07:25:44.268Z'
      updated_at:
        type: string
        format: date
        example: '2022-02-28T07:25:44.268Z'
  getAppPlatformsAppPlatformSchema:
    type: array
    items:
      $ref: '#/definitions/appPlatformSchema'
  getAppPlatformsSchema:
    type: object
    properties:
      has_next_page:
        type: boolean
        example: true
      data:
        $ref: '#/definitions/getAppPlatformsAppPlatformSchema'
        type: array
  platformSchema:
    type: object
    properties:
      id:
        type: number
        example: 1
      label:
        type: string
        example: Agoda
      type:
        type: string
        example: SCRAPING
      logo_url:
        type: string
        example: https://www.log_url.com/agoda
  getPlatformsPlatformSchema:
    type: array
    items:
      $ref: '#/definitions/platformSchema'
  getPlatformsSchema:
    type: object
    properties:
      has_next_page:
        type: boolean
        example: true
      data:
        $ref: '#/definitions/getPlatformsPlatformSchema'
        type: array
  reviewSchema:
    type: object
    properties:
      id:
        type: number
        example: 1
      rating:
        type: number
        example: 5
      review_title:
        type: string
        example: Good Service
      review_content:
        type: string
        example: Outstanding service, consistently exceeding expectations
      review_date:
        type: string
        format: date
        example: '2022-02-28T07:25:44.268Z'
      reviewer_name:
        type: string
        example: Sam
      reviewer_photo_url:
        type: string
        example: https://www.log_url.com/agoda
      app_platform_id:
        type: number
        example: 5
  getReviewsReviewSchema:
    type: array
    items:
      $ref: '#/definitions/reviewSchema'
  getReviewsSchema:
    type: object
    properties:
      has_next_page:
        type: boolean
        example: true
      data:
        $ref: '#/definitions/getReviewsReviewSchema'
        type: array
  Model 28:
    type: object
    properties:
      data:
        $ref: '#/definitions/Model 15'
  Model 29:
    type: object
    properties:
      id:
        type: number
        description: Id of the approver
      name:
        type: string
        description: Name of the approver
      email:
        type: string
        description: Email of the approver
        x-format:
          email: true
      joined_portal:
        type: boolean
        default: false
      approvals:
        type: number
      approved:
        type: number
      declined:
        type: number
      pending:
        type: number
    required:
      - id
      - name
      - email
      - approvals
      - approved
      - declined
      - pending
  Model 30:
    type: array
    items:
      $ref: '#/definitions/Model 29'
  getApproversSchema:
    type: object
    properties:
      list:
        $ref: '#/definitions/Model 30'
        type: array
      count:
        type: number
      limit:
        type: number
        default: 50
        minimum: 1
        maximum: 100
      page:
        type: number
        minimum: 1
    required:
      - count
      - limit
      - page
  Model 31:
    type: object
    properties:
      data:
        $ref: '#/definitions/getApproversSchema'
  Model 32:
    type: object
    properties:
      id:
        type: number
        description: Id of the Relation
      name:
        type: string
        description: Name of the relation
      label:
        type: string
        description: Label of the relation
    required:
      - id
      - name
  Model 33:
    type: array
    items:
      $ref: '#/definitions/Model 32'
  getRelationsSchema:
    type: object
    properties:
      list:
        $ref: '#/definitions/Model 33'
        type: array
  Model 34:
    type: object
    properties:
      data:
        $ref: '#/definitions/getRelationsSchema'
  Model 35:
    type: object
    properties:
      self_evaluation:
        type: boolean
      self_nomination:
        type: boolean
      require_approval:
        type: boolean
  approver:
    type: object
    properties:
      id:
        type: number
        description: Id of the approver
      name:
        type: string
        description: Name of the approver
      email:
        type: string
        description: Email of the approver
        x-format:
          email: true
      joined_portal:
        type: boolean
        default: false
    required:
      - id
      - name
      - email
  Model 36:
    type: object
    properties:
      id:
        type: number
        description: Id of the approver
      name:
        type: string
        description: Name of the approver
      email:
        type: string
        description: Email of the approver
        x-format:
          email: true
      joined_portal:
        type: boolean
        default: false
      properties:
        $ref: '#/definitions/Model 35'
      approver:
        $ref: '#/definitions/approver'
    required:
      - id
      - name
      - email
  Model 37:
    type: array
    items:
      $ref: '#/definitions/Model 36'
  getSubjectsSchema:
    type: object
    properties:
      list:
        $ref: '#/definitions/Model 37'
        type: array
      count:
        type: number
      limit:
        type: number
        default: 50
        minimum: 1
        maximum: 100
      page:
        type: number
        minimum: 1
    required:
      - count
      - limit
      - page
  Model 38:
    type: object
    properties:
      data:
        $ref: '#/definitions/getSubjectsSchema'
  getSurveyFolderResponseSchema:
    type: object
    properties:
      data:
        $ref: '#/definitions/surveyFolderSchema'
  getSurveySchema:
    type: object
    properties:
      data:
        $ref: '#/definitions/surveySchema'
  getTicketFieldSchema:
    type: object
    properties:
      data:
        $ref: '#/definitions/ticketField'
  getTicketSchema:
    type: object
    properties:
      data:
        $ref: '#/definitions/ticketSchema'
  Model 39:
    type: object
    description: Response data
    properties:
      translationFile:
        type: string
        description: Signed URL for the translation file
        example: https://s3.amazonaws.com/surveysparrow/translations/123456-en.xlsx
    required:
      - translationFile
  Model 40:
    type: object
    properties:
      data:
        $ref: '#/definitions/Model 39'
    required:
      - data
  getUserSchema:
    type: object
    properties:
      data:
        $ref: '#/definitions/userSchema'
  survey:
    type: object
    description: survey details
    properties:
      id:
        type: number
        description: id of survey
        example: '1'
      name:
        type: string
        description: name of survey
        example: Test Survey
      survey_type:
        type: string
        description: type of survey
        example: ClassicForm
        enum:
          - Conversational
          - Poll
          - ClassicForm
          - Kiosk
          - OfflineApp
          - NPS
          - NPSChat
          - CES
          - CESChat
          - CSAT
          - CSATChat
          - Employee360
    required:
      - id
      - name
      - survey_type
  share:
    type: object
    description: share details
    properties:
      id:
        type: number
        description: id of share channel
        example: '1'
      name:
        type: string
        description: name of share channel
        example: Test Share
    required:
      - id
      - name
  submission:
    type: object
    description: submission details
    properties:
      id:
        type: number
        description: id of submission
        example: '1'
      state:
        type: string
        description: state of submission
        example: COMPLETED
        enum:
          - STARTED
          - COMPLETED
    required:
      - id
      - state
  Model 41:
    type: object
    properties:
      sent_date:
        type: string
        format: date
        description: Date of survey share
        example: '2020-08-24T18:25:48.699Z'
      survey:
        $ref: '#/definitions/survey'
      share:
        $ref: '#/definitions/share'
      submission:
        $ref: '#/definitions/submission'
    required:
      - sent_date
  responded:
    type: array
    description: array of responded shares
    items:
      $ref: '#/definitions/Model 41'
  Model 42:
    type: object
    description: survey details
    properties:
      id:
        type: number
        description: id of survey
        example: '1'
      name:
        type: string
        description: name of share channel
        example: Test Survey
      survey_type:
        type: string
        description: type of survey
        example: ClassicForm
        enum:
          - Conversational
          - Poll
          - ClassicForm
          - Kiosk
          - OfflineApp
          - NPS
          - NPSChat
          - CES
          - CESChat
          - CSAT
          - CSATChat
          - Employee360
    required:
      - id
      - name
      - survey_type
  Model 43:
    type: object
    properties:
      sent_date:
        type: string
        format: date
        description: Date of survey share
        example: '2020-08-24T18:25:48.699Z'
      survey:
        $ref: '#/definitions/Model 42'
      share:
        $ref: '#/definitions/share'
      submission:
        type: string
        description: submission will be null as there is no submission
    required:
      - sent_date
      - submission
  pendingResponse:
    type: array
    description: array of shares pendig response
    items:
      $ref: '#/definitions/Model 43'
  Model 44:
    type: object
    properties:
      responded:
        $ref: '#/definitions/responded'
        type: array
      pendingResponse:
        $ref: '#/definitions/pendingResponse'
        type: array
      hasNextPage:
        type: boolean
        example: 'false'
    required:
      - hasNextPage
  getAppPlatformSchema:
    type: object
    properties:
      data:
        $ref: '#/definitions/appPlatformSchema'
  getPlatformSchema:
    type: object
    properties:
      data:
        $ref: '#/definitions/platformSchema'
  getReviewSchema:
    type: object
    properties:
      data:
        $ref: '#/definitions/reviewSchema'
  JobStatusResponseSchema:
    type: object
    properties:
      status:
        type: string
        description: Current status of the job
      data:
        type: string
        description: Results of the job, if available
    required:
      - status
  Model 45:
    type: object
    properties:
      id:
        type: number
        description: Id of the approver
      name:
        type: string
        description: Name of the approver
      email:
        type: string
        description: Email of the approver
        x-format:
          email: true
      status:
        type: string
      joined_portal:
        type: boolean
        default: false
    required:
      - id
      - name
      - email
      - status
  Model 46:
    type: array
    items:
      $ref: '#/definitions/Model 45'
  getSubjectEvaluatorsSchema:
    type: object
    properties:
      list:
        $ref: '#/definitions/Model 46'
        type: array
      count:
        type: number
      limit:
        type: number
        default: 50
        minimum: 1
        maximum: 100
      page:
        type: number
        minimum: 1
    required:
      - count
      - limit
      - page
  Model 47:
    type: object
    properties:
      data:
        $ref: '#/definitions/getSubjectEvaluatorsSchema'
  Model 48:
    type: object
    properties:
      id:
        type: number
        description: Attachment id
        example: 1
      name:
        type: string
        description: Attachment name
        example: file.txt
      url:
        type: string
        description: Attachment url
        example: https://example.com/file.txt
      type:
        type: string
        description: Attachment type
        example: text/plain
  attachments:
    type: array
    description: Attachments
    items:
      $ref: '#/definitions/Model 48'
  tiketCommentSchema:
    type: object
    properties:
      id:
        type: number
        description: Comment id
        example: 1
      body:
        type: string
        description: Body of the comment
        example: Random text
      ticket_id:
        type: number
        description: Ticket id
        example: 2
      private:
        type: boolean
        description: Comment is public or private
      agent_id:
        type: number
        description: User ID
      requester_id:
        type: number
        description: Contact ID
      created_at:
        type: string
        format: date
        example: '2022-03-10T12:34:00.860Z'
      attachments:
        $ref: '#/definitions/attachments'
        type: array
  getTicketCommentsSchema:
    type: array
    items:
      $ref: '#/definitions/tiketCommentSchema'
  Model 49:
    type: object
    properties:
      data:
        $ref: '#/definitions/getTicketCommentsSchema'
        type: array
      has_next_page:
        type: boolean
        example: true
  Model 50:
    type: object
    properties:
      status:
        type: string
      result:
        $ref: '#/definitions/properties'
        x-alternatives:
          - $ref: '#/x-alt-definitions/result'
      message:
        type: string
        required:
          - message
        x-alternatives:
          - type: string
    required:
      - status
  Model 51:
    type: array
    items:
      $ref: '#/definitions/Model 50'
  Model 52:
    type: object
    properties:
      status:
        type: string
      data:
        $ref: '#/definitions/Model 51'
        type: array
    required:
      - status
      - data
  Model 53:
    type: object
    properties:
      error:
        type: string
        enum:
          - Share not found
  email:
    type: object
    properties:
      subject:
        type: string
      body:
        type: string
  followUp:
    type: object
    properties:
      default:
        type: string
      advanced:
        type: boolean
      highEffort:
        type: string
      neutral:
        type: string
      lowEffort:
        type: string
  Model 54:
    type: object
    properties:
      surveyName:
        type: string
      surveyType:
        type: string
        enum:
          - CESChat
          - CES
      email:
        $ref: '#/definitions/email'
      followUp:
        $ref: '#/definitions/followUp'
      thankYou:
        $ref: '#/definitions/followUp'
    required:
      - surveyName
  Model 55:
    type: object
    properties:
      name:
        type: string
      description:
        type: string
    required:
      - name
  Model 56:
    type: array
    description: ID of Labels the contact has to be added into ?
    example: []
    items:
      type: number
  Model 57:
    type: object
    properties:
      name:
        type: string
        description: Full Name of contact
        example: Jane Doe
      phone:
        type: string
        description: Phone number of the contact
        example: '91234567833'
      mobile:
        type: string
        description: Mobile number of the contact
        example: '1653452783'
      email:
        type: string
        description: Email of contact
        example: janedoe@surveysparrow.com
        x-format:
          email: true
        required:
          - email
        optional:
          - email
        x-alternatives:
          - type: string
            description: Email of contact
            example: janedoe@surveysparrow.com
            x-format:
              email: true
          - type: string
            description: Email of contact
            example: janedoe@surveysparrow.com
            x-format:
              email: true
      jobTitle:
        type: string
        description: Job Title of the contact
        example: Manager
      list:
        $ref: '#/definitions/Model 56'
        type: array
      contact_type:
        type: string
        description: Type of contact
        default: contact
        enum:
          - contact
          - employee
  Model 58:
    type: array
    description: >-
      ID of Labels the contact has to be added into. Should we allow id or list
      name ?
    example: []
    items:
      type: number
  Model 59:
    type: object
    properties:
      id:
        type: number
        description: ID of the contact
        example: '101'
      active:
        type: boolean
        description: >-
          if true, indicates the contact will actively receive email and sms
          shares
        example: true
      unsubscribed:
        type: boolean
        description: >-
          if true, indicates that the contact is unsubscribed from receiving
          emails
      fullName:
        type: string
        description: Full Name of contact
        example: Jane Doe
      mobile:
        type: string
        description: Mobile number of the contact
        example: '1653452783'
      email:
        type: string
        description: Email of contact
        example: janedoe@surveysparrow.com
        x-format:
          email: true
        required:
          - email
        optional:
          - email
        x-alternatives:
          - type: string
            description: Email of contact
            example: janedoe@surveysparrow.com
            x-format:
              email: true
          - type: string
            description: Email of contact
            example: janedoe@surveysparrow.com
            x-format:
              email: true
      jobTitle:
        type: string
        description: Job Title of the contact
        example: Manager
      list:
        $ref: '#/definitions/Model 58'
        type: array
    required:
      - id
      - active
      - unsubscribed
  Model 60:
    type: object
    properties:
      default:
        type: string
      advanced:
        type: boolean
      dissatisfied:
        type: string
      neutral:
        type: string
      satisfied:
        type: string
  Model 61:
    type: object
    properties:
      surveyName:
        type: string
      surveyType:
        type: string
        enum:
          - CSATChat
          - CSAT
      email:
        $ref: '#/definitions/email'
      followUp:
        $ref: '#/definitions/Model 60'
      thankYou:
        $ref: '#/definitions/Model 60'
    required:
      - surveyName
  Model 62:
    type: object
    properties:
      default:
        type: string
      advanced:
        type: boolean
      detractors:
        type: string
      passives:
        type: string
      promoters:
        type: string
  Model 63:
    type: object
    properties:
      surveyName:
        type: string
      surveyType:
        type: string
        enum:
          - NPSChat
          - NPS
      email:
        $ref: '#/definitions/email'
      followUp:
        $ref: '#/definitions/Model 62'
      thankYou:
        $ref: '#/definitions/Model 62'
    required:
      - surveyName
  user:
    type: object
    properties:
      email:
        type: string
        description: The email address of user
        minLength: 3
        maxLength: 200
        x-format:
          email: true
      name:
        type: string
        description: The name of user
        minLength: 1
        maxLength: 200
      phone:
        type: string
        description: The phone no of user
        maxLength: 200
      password:
        type: string
        description: >-
          The password of user, in case of oauth users pass a random string as
          password, it will be ignored anyway
        minLength: 5
        maxLength: 200
      strategy:
        type: string
        description: Password strategy of user
        enum:
          - password
          - google
          - linkedin
    required:
      - email
      - name
      - strategy
  Model 64:
    type: object
    properties:
      accountName:
        type: string
        description: The name of the account to be created
        minLength: 2
        maxLength: 200
      companyName:
        type: string
        description: The name of the account to be created
        minLength: 2
        maxLength: 200
      user:
        $ref: '#/definitions/user'
      timeZone:
        type: string
        minLength: 3
        maxLength: 200
      language:
        type: string
        minLength: 3
        maxLength: 255
      template:
        type: number
      ssTrackerLocation:
        type: string
      ssTrackerReferrer:
        type: string
      gSuiteDomain:
        type: string
      referral:
        type: string
      accountType:
        type: string
        description: Account creation can be from ratethemeeting
    required:
      - accountName
      - companyName
  Model 65:
    type: object
    properties:
      preAdded:
        type: boolean
      message:
        type: string
      description:
        type: string
      redirectBoolean:
        type: boolean
      redirectMultiBoolean:
        type: boolean
      redirect:
        $ref: '#/definitions/properties'
        required:
          - redirect
        optional:
          - redirect
        x-alternatives:
          - $ref: '#/x-alt-definitions/result'
          - type: string
      branding:
        type: boolean
  thankyou_json:
    type: array
    items:
      $ref: '#/definitions/Model 65'
  Model 66:
    type: object
    properties:
      name:
        type: string
        minLength: 1
        maxLength: 200
      surveyType:
        type: string
        enum:
          - ClassicForm
      workspace_id:
        type: number
      visibility:
        type: string
        default: Public
        enum:
          - Public
          - Mine
      theme_id:
        type: number
      primaryLanguage:
        type: string
      welcomeScreenYesButtonText:
        type: string
        maxLength: 250
      welcomeText:
        type: string
      welcomeDescription:
        type: string
      thankyou_json:
        $ref: '#/definitions/thankyou_json'
        type: array
    required:
      - name
      - surveyType
  Model 67:
    type: object
    properties:
      name:
        type: string
        x-convert:
          trim: true
      type:
        type: string
        description: Team type, if not provided will be "SURVEY" by default
        default: SURVEY
        enum:
          - SURVEY
          - TICKET
      userIds:
        $ref: '#/definitions/teams'
        type: array
    required:
      - name
  Model 68:
    type: object
    properties:
      name:
        type: string
        x-convert:
          trim: true
      email:
        type: string
        x-format:
          email: true
        x-convert:
          trim: true
      role_id:
        type: number
    required:
      - name
      - email
      - role_id
  Model 69:
    type: array
    items:
      $ref: '#/definitions/properties'
  Model 70:
    type: object
    properties:
      name:
        type: string
      description:
        type: string
      url:
        type: string
      eventType:
        type: string
        default: submission_completed
      objectType:
        type: string
        default: survey
      objectId:
        type: number
      surveyId:
        type: number
      httpMethod:
        type: string
        enum:
          - POST
          - GET
          - PATCH
          - PUT
          - DELETE
      headers:
        $ref: '#/definitions/Model 69'
        type: array
      type:
        type: string
        default: application
      payload:
        $ref: '#/definitions/properties'
    required:
      - url
      - httpMethod
  Model 71:
    type: object
    properties:
      teams:
        $ref: '#/definitions/teams'
        type: array
      users:
        $ref: '#/definitions/teams'
        type: array
      name:
        type: string
        x-convert:
          trim: true
      visibility:
        type: string
        enum:
          - ALL
          - PRIVATE
    required:
      - name
      - visibility
  Model 72:
    type: object
    properties:
      email:
        type: string
        description: >-
          Email of contact. Can be optional only if anonymous contact feature is
          enabled.
        maxLength: 255
        x-format:
          email: true
        optional:
          - email
          - email
        x-alternatives:
          - type: string
            description: >-
              Email of contact. Can be optional only if anonymous contact
              feature is enabled.
            maxLength: 255
            x-format:
              email: true
          - type: string
      mobile:
        type: string
        description: Mobile number in E.164 format, required when type is SMS
        required:
          - mobile
        optional:
          - mobile
        x-alternatives:
          - type: string
            description: Mobile number in E.164 format, required when type is SMS
          - type: string
      referenceId:
        type: string
        description: Reference ID of the anonymous contact
        example: '123456'
        maxLength: 255
      variables:
        $ref: '#/definitions/properties'
  Model 73:
    type: array
    minItems: 1
    maxItems: 20000
    items:
      $ref: '#/definitions/Model 72'
  contact_list_ids:
    type: array
    minItems: 1
    maxItems: 20
    items:
      type: number
  h:
    type: array
    minItems: 1
    items:
      type: number
      minimum: 0
      maximum: 23
  m:
    type: array
    minItems: 1
    items:
      type: number
      minimum: 0
      maximum: 60
  d:
    type: array
    minItems: 1
    items:
      type: string
      enum:
        - 0
        - 1
        - 2
        - 3
        - 4
        - 5
        - 6
        - 7
  config:
    type: object
    properties:
      h:
        $ref: '#/definitions/h'
        type: array
      m:
        $ref: '#/definitions/m'
        type: array
      d:
        $ref: '#/definitions/d'
        type: array
    required:
      - h
      - m
      - d
  D:
    type: array
    minItems: 1
    items:
      type: string
      enum:
        - 0
        - 1
        - 2
        - 3
        - 4
        - 5
        - 6
        - 7
        - 8
        - 9
        - 10
        - 11
        - 12
        - 13
        - 14
        - 15
        - 16
        - 17
        - 18
        - 19
        - 20
        - 21
        - 22
        - 23
        - 24
        - 25
        - 26
        - 27
        - 28
        - 29
        - 30
        - 31
  Model 74:
    type: object
    properties:
      h:
        $ref: '#/definitions/h'
        type: array
      m:
        $ref: '#/definitions/m'
        type: array
      D:
        $ref: '#/definitions/D'
        type: array
    required:
      - h
      - m
      - D
  M:
    type: array
    minItems: 1
    items:
      type: string
      enum:
        - 0
        - 1
        - 2
        - 3
        - 4
        - 5
        - 6
        - 7
        - 8
        - 9
        - 10
        - 11
        - 12
  Model 75:
    type: object
    properties:
      h:
        $ref: '#/definitions/h'
        type: array
      m:
        $ref: '#/definitions/m'
        type: array
      D:
        $ref: '#/definitions/D'
        type: array
      M:
        $ref: '#/definitions/M'
        type: array
    required:
      - h
      - m
      - D
      - M
  schedule:
    type: object
    properties:
      frequency:
        type: string
        enum:
          - WEEKLY
          - MONTHLY
          - YEARLY
      config:
        $ref: '#/definitions/config'
        x-alternatives:
          - $ref: '#/x-alt-definitions/config'
          - $ref: '#/definitions/Model 74'
            x-alternatives:
              - $ref: '#/x-alt-definitions/Model 2'
              - $ref: '#/definitions/Model 75'
                x-alternatives:
                  - $ref: '#/x-alt-definitions/Model 3'
                  - $ref: '#/x-alt-definitions/Model 4'
    required:
      - frequency
      - config
  first_nps:
    type: object
    properties:
      delay:
        type: number
        description: Delay after which first survey to be shared
        minimum: 1
        x-constraint:
          positive: true
      unit:
        type: string
        description: Unit of the delay
        enum:
          - Days
          - Months
          - Hours
      contact_property_id:
        type: number
        description: >-
          Id of the contact property, only DATE type contact properties are
          allowed
    required:
      - delay
      - unit
      - contact_property_id
  relative_schedule:
    type: object
    properties:
      first_nps:
        $ref: '#/definitions/first_nps'
      after_first_nps_schedule:
        type: string
        description: Repetition of survey sharing after first share
        enum:
          - NONE
          - EVERY_45_DAYS
          - EVERY_3_MONTHS
          - EVERY_6_MONTHS
          - EVERY_1_YEAR
    required:
      - after_first_nps_schedule
  Model 76:
    type: object
    description: Properties of the reminder
    default:
      embed_first_question: true
      custom_footer: false
    properties:
      embed_first_question:
        type: boolean
      custom_footer:
        type: boolean
      custom_footer_value:
        type: string
      preview_text:
        type: string
        description: Pre-header of the Email
    required:
      - embed_first_question
      - custom_footer
  Model 77:
    type: object
    properties:
      subject:
        type: string
        description: >-
          Subject of the reminder, both {company_name} and {survey_link}
          variables are required when channel type is SMS
      body:
        type: string
        description: >-
          Body of the reminder. Not required for SMS channel type.
          Note:Placeholders are supported for Customer Experience (CX) surveys
          only.
      type:
        type: string
        description: Type of the responders
        enum:
          - NOT_RESPONDED
          - PARTIALLY_RESPONDED
      interval:
        type: number
        description: Delay after which reminder to be sent
        minimum: 1
        x-constraint:
          positive: true
      frequency:
        type: string
        description: Unit of the delay
        enum:
          - Days
          - Weeks
          - Months
      properties:
        $ref: '#/definitions/Model 76'
    required:
      - type
      - interval
      - frequency
  reminders:
    type: array
    description: Array of reminders
    items:
      $ref: '#/definitions/Model 77'
  sms:
    type: object
    description: Only required when type is SMS
    properties:
      message:
        type: string
        description: >-
          Message of sms, both {company_name} and {survey_link} variables are
          required.
      twilio_consent_agreed:
        type: boolean
        description: For using SurveySparrow message service you need to agree the consent
      target_id:
        type: number
        description: Id of the custom target, default target will be taken if not given
  Model 78:
    type: object
    properties:
      body:
        type: string
        description: Body of the email
      from_address:
        type: string
        description: From address of the email
        x-format:
          email:
            minDomainAtoms: 2
      embed_first_question:
        type: boolean
      custom_footer:
        type: boolean
        default: false
      custom_footer_value:
        type: string
        description: Custom footer value
      show_surveysparrow_branding:
        type: boolean
        description: Set true to show SurveySparrow branding on email
      reply_to:
        type: string
        description: Reply to address of the email
        x-format:
          email:
            minDomainAtoms: 2
      preview_text:
        type: string
        description: Pre-header of the Email
    required:
      - embed_first_question
      - show_surveysparrow_branding
  Model 79:
    type: object
    properties:
      subject:
        type: string
        description: Subject of the email
      properties:
        $ref: '#/definitions/Model 78'
      theme_id:
        type: number
        description: Id of the email theme
    required:
      - subject
  link:
    type: object
    properties:
      title:
        type: string
        description: Title of the weblink channel
      description:
        type: string
        description: Description of the web link channel
      image_link:
        type: string
        description: >-
          Image link of the weblink channel, provide link for a JPEG or PNG
          image. Get best results when the image is 1200 x 630 pixels
  offline:
    type: object
    properties:
      animation_direction:
        type: string
        description: Animation Direction of the offline channel
        enum:
          - Horizontal
          - Vertical
  Model 80:
    type: object
    properties:
      type:
        type: string
        description: Type of the channel
        enum:
          - EMAIL
          - SMS
          - LINK
          - OFFLINE
      mode:
        type: string
        description: Mode of the channel, not required when type is LINK and OFFLINE
        default: BLAST
        enum:
          - BLAST
          - RECURRING
          - RELATIVE_RECURRING
      channel_id:
        type: number
        description: Deprecated, please use update channel instead
      contacts:
        $ref: '#/definitions/Model 73'
        type: array
        optional:
          - contacts
        x-alternatives:
          - $ref: '#/x-alt-definitions/contacts'
            type: array
      contact_list_ids:
        $ref: '#/definitions/contact_list_ids'
        type: array
        required:
          - contact_list_ids
        optional:
          - contact_list_ids
        x-alternatives:
          - $ref: '#/x-alt-definitions/contact_list_ids'
            type: array
          - $ref: '#/x-alt-definitions/contact_list_ids'
            type: array
      variables:
        $ref: '#/definitions/properties'
      survey_id:
        type: number
        description: Id of the survey
      name:
        type: string
        description: Name of the channel
      send_after_date:
        type: string
        format: date
        description: Timestamp at which survey should be sent
        optional:
          - send_after_date
        x-alternatives:
          - type: string
            format: date
            description: Timestamp at which survey should be sent
      send_after_days:
        type: number
        description: Number of days after which survey should be shared
        minimum: 1
        optional:
          - send_after_days
        x-alternatives:
          - type: number
            description: Number of days after which survey should be shared
            minimum: 1
      schedule:
        $ref: '#/definitions/schedule'
        required:
          - schedule
        x-alternatives:
          - $ref: '#/x-alt-definitions/schedule'
      relative_schedule:
        $ref: '#/definitions/relative_schedule'
        required:
          - relative_schedule
        x-alternatives:
          - $ref: '#/x-alt-definitions/relative_schedule'
      reminders:
        $ref: '#/definitions/reminders'
        type: array
      sms:
        $ref: '#/definitions/sms'
        required:
          - sms
        x-alternatives:
          - $ref: '#/x-alt-definitions/sms'
      email:
        $ref: '#/definitions/Model 79'
        required:
          - email
        x-alternatives:
          - $ref: '#/x-alt-definitions/email'
      link:
        $ref: '#/definitions/link'
        optional:
          - link
        x-alternatives:
          - $ref: '#/x-alt-definitions/link'
      offline:
        $ref: '#/definitions/offline'
        optional:
          - offline
        x-alternatives:
          - $ref: '#/x-alt-definitions/offline'
      ignore_throttled_contacts:
        type: boolean
        description: If set to true, survey will be shared even if throttling is met
        default: true
      accept_anonymous_response:
        type: boolean
        description: Only applicable for CX survey types
        default: false
    required:
      - type
      - survey_id
      - name
  Model 81:
    type: object
    properties:
      name:
        type: string
        maxLength: 255
      description:
        type: string
        maxLength: 1000
    required:
      - name
  Model 82:
    type: object
    properties:
      type:
        type: string
        enum:
          - NUMBER
          - DOUBLE
          - EMAIL
          - SINGLE_LINE_TEXT
          - MULTI_LINE_TEXT
          - DATE
          - URL
          - DROPDOWN
          - STRING
      label:
        type: string
        maxLength: 255
      description:
        type: string
        maxLength: 1000
      contact_property_group_id:
        type: number
    required:
      - type
      - label
  createContactPropertySchema:
    type: object
    properties:
      data:
        $ref: '#/definitions/contactPropertySchema'
  createContactSchema:
    type: object
    properties:
      full_name:
        type: string
        description: Full Name of contact
        example: Jane Doe
        maxLength: 255
      email:
        type: string
        description: >-
          Email of contact. Can be optional only if anonymous contact feature is
          enabled.
        example: janedoe@surveysparrow.com
        maxLength: 255
        x-format:
          email: true
      phone:
        type: string
        description: Phone number of the contact
        example: '91234567833'
        maxLength: 255
      mobile:
        type: string
        description: Mobile number of the contact
        example: '1653452783'
        maxLength: 255
      job_title:
        type: string
        description: Job Title of the contact
        example: Manager
        maxLength: 255
      contact_type:
        type: string
        description: Type of contact
        default: contact
        enum:
          - contact
          - employee
      referenceId:
        type: string
        description: Reference ID of the anonymous contact
        example: '123456'
        maxLength: 255
  createContactResponseSchema:
    type: object
    properties:
      full_name:
        type: string
        description: Full Name of contact
        example: Jane Doe
        maxLength: 255
      email:
        type: string
        description: Email of contact
        example: janedoe@surveysparrow.com
        x-format:
          email: true
      phone:
        type: string
        description: Phone number of the contact
        example: '91234567833'
        maxLength: 255
      mobile:
        type: string
        description: Mobile number of the contact
        example: '1653452783'
        maxLength: 255
      job_title:
        type: string
        description: Job Title of the contact
        example: Manager
        maxLength: 255
      contact_type:
        type: string
        description: Type of contact
        default: contact
        enum:
          - contact
          - employee
      referenceId:
        type: string
        description: Reference ID of the anonymous contact
        example: '123456'
        maxLength: 255
  Model 83:
    type: object
    properties:
      data:
        $ref: '#/definitions/createContactResponseSchema'
  Model 84:
    type: object
    properties:
      language_name:
        type: string
        description: >-
          The language name must be between 3 and 16 characters long and can
          only contain uppercase and lowercase letters (A-Z, a-z)
        example: SparrowLang
        minLength: 3
        maxLength: 16
        pattern: /^[A-Za-z]+$/
      language_code:
        type: string
        description: The language code must be exactly 3 lowercase letters (a-z)
        example: ssl
        minLength: 3
        maxLength: 3
        pattern: /^[a-z]+$/
    required:
      - language_name
      - language_code
  Model 85:
    type: object
    description: Response data
    properties:
      message:
        type: string
        description: Message
        example: Custom Language created successfully
    required:
      - message
  Model 86:
    type: object
    properties:
      data:
        $ref: '#/definitions/Model 85'
    required:
      - data
  tags:
    type: array
    items:
      type: string
      pattern: /^[a-zA-Z0-9 ]*$/
  Model 87:
    type: object
    properties:
      text:
        type: string
        description: Choice text
      score:
        type: number
        description: Choice score
    required:
      - text
  choices:
    type: array
    items:
      $ref: '#/definitions/Model 87'
  other_text:
    type: object
    properties:
      text:
        type: string
        description: Other option text
      score:
        type: number
        description: Other option score
  all_of_the_above_text:
    type: object
    properties:
      text:
        type: string
        description: All of the above text
  none_of_the_above_text:
    type: object
    properties:
      text:
        type: string
        description: None of the above option option text
      score:
        type: number
        description: None of the above option option score
  Model 88:
    type: object
    properties:
      coupon_code:
        type: string
        description: Coupon code
        minLength: 1
        maxLength: 50
        pattern: /^[a-zA-Z0-9_]+$/
      discount_type:
        type: string
        description: Discount type
        enum:
          - Amount
          - Percentage
      amount:
        type: number
        description: Discount amount is required when discount_type is Amount
        minimum: 1
        required:
          - amount
        x-alternatives:
          - type: number
            description: Discount amount is required when discount_type is Amount
            minimum: 1
      percentage:
        type: number
        description: Discount percentage is required when discount_type is Percentage
        minimum: 1
        maximum: 100
        required:
          - percentage
        x-alternatives:
          - type: number
            description: Discount percentage is required when discount_type is Percentage
            minimum: 1
            maximum: 100
    required:
      - coupon_code
      - discount_type
  discount_coupons:
    type: array
    minItems: 1
    items:
      $ref: '#/definitions/Model 88'
  discount:
    type: object
    properties:
      active:
        type: boolean
      discount_coupons:
        $ref: '#/definitions/discount_coupons'
        type: array
  fileTypes:
    type: array
    items:
      type: string
      default:
        - image
        - doc
      enum:
        - image
        - doc
        - video
        - audio
  Model 89:
    type: object
    properties:
      min:
        type: string
        description: label for min value
      max:
        type: string
        description: label for max value
      mid:
        type: string
        description: label for mid value
      step:
        type: number
        description: Step value for opinion scale
        enum:
          - 3
          - 4
          - 5
          - 6
          - 7
          - 8
          - 9
          - 10
          - 11
          - 12
      audio_transcription:
        type: boolean
        description: Respondents can answer by voice. Only for text input type questions
      analyze_sentiment:
        type: boolean
        description: >-
          To analyze the sentiment of the respondents. Only for text input type
          questions
      is_ranking_enabled:
        type: boolean
        description: To enable ranking in group rank question type
      can_randomise_features_list:
        type: boolean
        description: To randomize choices in group rank question
      can_repeat_feature:
        type: boolean
        description: To allow choices to repeat in a same group in group rank question
      wait:
        type: number
        description: Only for message question type in chat surveys
        enum:
          - 0
          - 1
          - 2
          - 3
          - 4
          - 5
          - 6
          - 7
          - 8
          - 9
          - 10
          - 11
          - 12
          - 13
          - 14
          - 15
      type:
        type: string
        description: >-
          Answer type for multiple choice, date time, constant sum and matrix
          questions.
        enum:
          - SINGLE_LINE
          - MULTI_LINE
          - UNLIMITED
          - EXACT
          - RANGE
          - DATETIME
          - DATE_ONLY
          - SLIDER
          - TEXT
          - DROP_DOWN
          - MULTIPLE_ANSWER
          - RATING
          - SINGLE_ANSWER
          - TEXT_INPUT
      currency:
        type: string
        description: Currency code is needed for payment question
        example: INR
        enum:
          - INR
          - USD
          - EUR
          - GBP
          - AUD
          - CAD
          - CHF
          - NOK
          - SEK
          - DKK
          - MXN
          - NZD
          - BRL
          - SGD
          - RON
          - CZK
      amount:
        type: number
        description: Amount to be paid for payment question
      expression_id:
        type: number
        description: Expression Id for payment
      variable_id:
        type: number
        description: Variable Id for payment
      discount:
        $ref: '#/definitions/discount'
      icon_array_name:
        type: string
        description: Icon type for rating
        enum:
          - RATING_STAR
          - RATING_CROWN
          - RATING_LIGHTNING
          - RATING_SMILEY
          - RATING_THUMBSUP
          - RATING_USER
      rating_scale:
        type: number
        description: >-
          Rating scale. Should be between 1-5 for rating type question. Should
          be between 3-10 for group rating question.
        minimum: 3
        maximum: 10
      slider_type:
        type: string
        description: Only allowed for slider type question
        enum:
          - smileySlider
          - lineSlider
          - trafficLightSlider
          - thermometerSlider
          - gaugeSlider
      show_progress:
        type: boolean
        description: To show slider progress value
      show_total:
        type: boolean
        description: To show total for constant sum.
      total_sum:
        type: number
        description: >-
          Defining total sum for constant sum.(total_sum must not be greater
          than 1000000)
      consent_text:
        type: string
        description: Consent text for consent question
        maxLength: 200
      show_terms_and_condition:
        type: boolean
        description: To enable terms and conditions for consent question
      symbol:
        type: string
        description: Symbol to be displayed for constant sum
        maxLength: 10
      symbol_position:
        type: string
        description: Position of symbol for constant sum
        enum:
          - PREFIX
          - SUFFIX
      segments:
        type: number
        description: >-
          Segments for slider question. Should be between 0-10 for constant sum.
          Should be between 0-5 for slider type question
        minimum: 0
        maximum: 10
      decimals:
        type: number
        description: Decimal points for slider type question
        enum:
          - 0
          - 1
          - 2
      stack_fields:
        type: boolean
        description: To stack choices/sub questions vertically
      maximum_number_of_files:
        type: number
        description: Maximum number of files allowed for file input type question
        minimum: 1
        maximum: 5
      draw_signature:
        type: boolean
        description: To enable draw option for signature type question
      type_signature:
        type: boolean
        description: To enable typing option for signature type question
      upload_signature:
        type: boolean
        description: To enable upload option for signature type question
      date_format:
        type: string
        description: Date format for datetime question
        enum:
          - MMDDYYYY
          - DDMMYYYY
          - YYYYMMDD
        x-alternatives:
          - type: string
            description: Date format for datetime question
            enum:
              - MMDDYYYY
              - DDMMYYYY
              - YYYYMMDD
      time_format:
        type: string
        description: Time format for datetime question
        enum:
          - TWENTY_FOUR_HOUR
          - TWELVE_HOUR
        x-alternatives:
          - type: string
            description: Time format for datetime question
            enum:
              - TWENTY_FOUR_HOUR
              - TWELVE_HOUR
      show_calendar:
        type: boolean
        description: Should the calendar be shown?
        x-alternatives:
          - type: boolean
            description: Should the calendar be shown?
      yes_text:
        type: string
        description: Yes text for yes or no question type
      no_text:
        type: string
        description: No text for yes or no question type
      icon_shape:
        type: string
        description: Icon for yes or no question
        enum:
          - YES_NO_ICON_TICK_CROSS
          - YES_NO_ICON_THUMBS
      start:
        type: number
        description: Starting value for opinion scale
        enum:
          - 0
          - 1
      reverse_scale:
        type: boolean
        description: Reverse scale for opinion scale
      fileTypes:
        $ref: '#/definitions/fileTypes'
        type: array
      table_layout:
        type: string
        description: Table layout matrix and bipolar type questions
        enum:
          - CONTENT_WIDTH
          - FULL_WIDTH
      minLimit:
        type: number
        description: >-
          MinLimit is required for multiple choice question with RANGE answer
          type. Optional for constant sum, number input, slider, group rank.
        required:
          - minLimit
        x-alternatives:
          - type: number
            description: >-
              MinLimit is required for multiple choice question with RANGE
              answer type. Optional for constant sum, number input, slider,
              group rank.
          - type: number
            x-alternatives:
              - type: number
      maxLimit:
        type: number
        description: >-
          MaxLimit is required for multiple choice question with RANGE answer
          type. Optional for constant sum, number input, slider, group rank.
        x-constraint:
          greater: ref:minLimit
        required:
          - maxLimit
        x-alternatives:
          - type: number
            description: >-
              MaxLimit is required for multiple choice question with RANGE
              answer type. Optional for constant sum, number input, slider,
              group rank.
            x-constraint:
              greater: ref:minLimit
          - type: number
            x-constraint:
              greater: ref:minLimit
            x-alternatives:
              - type: number
                x-constraint:
                  greater: ref:minLimit
      exactChoices:
        type: number
        description: Required for multiple choice question with Exact answer type
        required:
          - exactChoices
        x-alternatives:
          - type: number
            description: Required for multiple choice question with Exact answer type
      include_feedback_by_rating:
        type: boolean
        description: To include feedback by rating for Feedback question type
      promoter:
        type: string
        description: Promoter text for NPS feedback question type
      passive:
        type: string
        description: Passive text for NPS feedback question type
      detractor:
        type: string
        description: Detractor text for NPS feedback question type
      low_effort:
        type: string
        description: Low effort text for CES feedback question type
      neutral:
        type: string
        description: Neutral text for CES feedback question type
      high_effort:
        type: string
        description: High effort text for CES feedback question type
      satisfied:
        type: string
        description: Satisfied text for CSAT feedback question type
      dissatisfied:
        type: string
        description: Dissatisfied text for CSAT feedback question type
      translate_answers:
        type: boolean
        description: To translate answers for feedback question type
  Model 90:
    type: object
    properties:
      data:
        $ref: '#/definitions/Model 89'
  Model 91:
    type: object
    properties:
      text:
        type: string
        description: Required only for DROP_DOWN answer type in matrix question
        maxLength: 500
    required:
      - text
  Model 92:
    type: array
    items:
      $ref: '#/definitions/Model 91'
  Model 93:
    type: object
    properties:
      name:
        type: string
        description: Column name for matrix, bipolar matrix
        maxLength: 200
      choices:
        $ref: '#/definitions/Model 92'
        type: array
    required:
      - name
  column:
    type: array
    minItems: 1
    items:
      $ref: '#/definitions/Model 93'
  Model 94:
    type: object
    properties:
      name:
        type: string
        description: column name for bipolar matrix
        maxLength: 200
    required:
      - name
  Model 95:
    type: array
    minItems: 3
    items:
      $ref: '#/definitions/Model 94'
  Model 96:
    type: object
    properties:
      text:
        type: string
        description: Required only for DROP_DOWN answer type in contact form question.
        maxLength: 500
    required:
      - text
  Model 97:
    type: array
    items:
      $ref: '#/definitions/Model 96'
  Model 98:
    type: object
    properties:
      left_text:
        type: string
        description: Sub question or row text
        maxLength: 200
      right_text:
        type: string
        description: 'Right row text. Required only for bipolar matrix. '
        required:
          - right_text
        x-alternatives:
          - type: string
            description: 'Right row text. Required only for bipolar matrix. '
      required:
        type: boolean
        description: Only for questions in contact form. True by default
        x-alternatives:
          - type: boolean
            description: Only for questions in contact form. True by default
      row_type:
        type: string
        description: Sub question type for contact form. Required only for contact form.
        enum:
          - string
          - number
          - email
          - date
          - dropdown
          - PhoneNumber
        required:
          - row_type
        x-alternatives:
          - type: string
            description: >-
              Sub question type for contact form. Required only for contact
              form.
            enum:
              - string
              - number
              - email
              - date
              - dropdown
              - PhoneNumber
      choices:
        $ref: '#/definitions/Model 97'
        type: array
        x-alternatives:
          - $ref: '#/x-alt-definitions/Model 10'
            type: array
    required:
      - left_text
  row:
    type: array
    minItems: 1
    items:
      $ref: '#/definitions/Model 98'
  Model 99:
    type: object
    properties:
      join_condition:
        type: string
        default: and
        enum:
          - and
          - or
      type:
        type: string
        description: Custom variable type
        enum:
          - param
      comparator:
        type: string
        description: Condition type to check
        enum:
          - isPassed
          - isNotPassed
          - startsWith
          - endsWith
          - contains
          - equalsString
          - doesNotContain
          - notEqualTo
          - lessThanForParam
          - greaterThanForParam
      variable_id:
        type: number
        required:
          - variable_id
        x-alternatives:
          - type: number
      value:
        type: string
        description: Not required for comparators isPassed and isNotPassed
        default: ''
        required:
          - value
        x-alternatives:
          - type: string
            description: Not required for comparators isPassed and isNotPassed
            default: ''
    required:
      - type
      - comparator
  logics:
    type: array
    items:
      $ref: '#/definitions/Model 99'
  display_logic:
    type: object
    properties:
      logics:
        $ref: '#/definitions/logics'
        type: array
  question:
    type: object
    properties:
      text:
        type: string
        description: Question text
        example: How would you rate our service?
      description:
        type: string
        description: Question description
        example: Give us your feedback
      type:
        type: string
        description: Type of question
        example: TextInput
        enum:
          - FileInput
          - TextInput
          - OpinionScale
          - MultiChoice
          - BipolarMatrix
          - CameraInput
          - Consent
          - ConstantSum
          - ContactForm
          - DateTime
          - Dropdown
          - EmailInput
          - GroupRating
          - Matrix
          - Message
          - NumberInput
          - PhoneNumber
          - RankOrder
          - Rating
          - Signature
          - Slider
          - URLInput
          - YesNo
          - GroupRank
          - AudioInput
          - PaymentQuestion
          - NPSFeedback
          - CESFeedback
          - CSATFeedback
      required:
        type: boolean
        description: Is response mandatory for this question?
        example: true
      randomized:
        type: boolean
        description: Should the choices be randomized?
      tags:
        $ref: '#/definitions/tags'
        type: array
      multiple_answers:
        type: boolean
        description: Can users select multiple answers for the question?
      choices:
        $ref: '#/definitions/choices'
        type: array
      hasScore:
        type: boolean
        description: Should be set to true if individual choices has scores
      other:
        type: boolean
        description: To enable other option
      all_of_the_above:
        type: boolean
        description: >-
          To enable all of the above option. Works only if multipe_answers is
          set to true
        optional:
          - all_of_the_above
        x-alternatives:
          - type: boolean
            description: >-
              To enable all of the above option. Works only if multipe_answers
              is set to true
      none_of_the_above:
        type: boolean
        description: To enable none of the above option
      other_text:
        $ref: '#/definitions/other_text'
        optional:
          - other_text
        x-alternatives:
          - $ref: '#/x-alt-definitions/other_text'
      all_of_the_above_text:
        $ref: '#/definitions/all_of_the_above_text'
        optional:
          - all_of_the_above_text
        x-alternatives:
          - $ref: '#/x-alt-definitions/all_of_the_above_text'
      none_of_the_above_text:
        $ref: '#/definitions/none_of_the_above_text'
        optional:
          - none_of_the_above_text
        x-alternatives:
          - $ref: '#/x-alt-definitions/none_of_the_above_text'
      properties:
        $ref: '#/definitions/Model 90'
      column:
        $ref: '#/definitions/column'
        type: array
        required:
          - column
        x-alternatives:
          - $ref: '#/x-alt-definitions/column'
            type: array
          - $ref: '#/definitions/Model 95'
            type: array
            required:
              - column
            x-alternatives:
              - $ref: '#/x-alt-definitions/Model 8'
                type: array
      row:
        $ref: '#/definitions/row'
        type: array
        required:
          - row
        x-alternatives:
          - $ref: '#/x-alt-definitions/row'
            type: array
      display_logic:
        $ref: '#/definitions/display_logic'
    required:
      - text
      - type
  Model 100:
    type: object
    properties:
      survey_id:
        type: number
        description: Survey Id
        example: 1
      section_id:
        type: number
        description: Section Id
        example: 2
      question:
        $ref: '#/definitions/question'
    required:
      - survey_id
      - question
  Model 101:
    type: object
    description: Properties of the reminder
    default:
      embed_first_question: true
      custom_footer: false
    properties:
      embed_first_question:
        type: boolean
      custom_footer:
        type: boolean
      custom_footer_value:
        type: string
    required:
      - embed_first_question
      - custom_footer
  Model 102:
    type: object
    properties:
      channel_id:
        type: number
        description: Id of the channel
        example: 1
      survey_id:
        type: number
        description: Id of Survey
        example: 1
      body:
        type: string
      subject:
        type: string
      frequency:
        type: string
        enum:
          - Days
          - Weeks
          - Months
      type:
        type: string
        enum:
          - NOT_RESPONDED
          - PARTIALLY_RESPONDED
      interval:
        type: number
      properties:
        $ref: '#/definitions/Model 101'
      preview_text:
        type: string
    required:
      - channel_id
      - survey_id
      - frequency
      - type
      - interval
  Model 103:
    type: array
    description: Tags of response
    example: '["tag1", "tag2"]'
    items:
      type: string
  meta_data:
    type: object
    properties:
      os:
        type: string
        description: OS of the response
        example: macOS
        maxLength: 255
      browser:
        type: string
        description: Browser of response
        example: Chrome
        maxLength: 255
      time_zone:
        type: string
        description: Time Zone of response
        example: Asia/Calcutta
        maxLength: 255
      browser_language:
        type: string
        description: Browser Language of the response
        example: en-GB
        maxLength: 255
      date_time:
        type: string
        format: date
        description: Date and Time of submission. Should be in the ISO format
        example: '2022-11-02T11:28:55.642Z'
      tags:
        $ref: '#/definitions/Model 103'
        type: array
      ip:
        type: string
        description: Tags of response
        example: 127.0.0.1
        x-format:
          ip:
            version:
              - ipv4
              - ipv6
            cidr: optional
      device_type:
        type: string
        description: Device Type of response
        example: COMPUTER
        maxLength: 255
      language:
        type: string
        description: Language of response
        example: English
        maxLength: 255
  matrix_txt:
    type: array
    description: Matrix Answer for Text Input
    items:
      type: string
  matrix_int:
    type: array
    description: 'Matrix Answer for Rating '
    items:
      type: string
  AnswerInput:
    type: object
    properties:
      question_id:
        type: number
        description: ID of the question
        example: 1
      parent_question_id:
        type: number
        description: ID of the parent question
        example: 1
      answer:
        type: string
        description: Answer of question
      other_txt:
        type: string
        description: Other Text Answer
      matrix_txt:
        $ref: '#/definitions/matrix_txt'
        type: array
      matrix_int:
        $ref: '#/definitions/matrix_int'
        type: array
      region_code:
        type: string
        description: Region code of Answer
        maxLength: 255
      time:
        type: string
        description: Time of Answer
        maxLength: 255
      time_zone:
        type: string
        description: TimeZone of Answer
        maxLength: 255
    required:
      - question_id
      - answer
  getAnswerSchema:
    type: array
    items:
      $ref: '#/definitions/AnswerInput'
  completeRequestSchema:
    type: object
    properties:
      survey_id:
        type: number
        description: ID of the survey
        example: 1
      contact_id:
        type: number
        description: ID of the contact
        example: 2
      channel_id:
        type: number
        description: ID of the channel
        example: 3
      variables:
        $ref: '#/definitions/properties'
      trigger_workflow:
        type: boolean
        description: Should this response trigger workflow
        default: true
      meta_data:
        $ref: '#/definitions/meta_data'
      answers:
        $ref: '#/definitions/getAnswerSchema'
        type: array
    required:
      - survey_id
      - answers
  completeResponseSchema:
    type: object
    properties:
      id:
        type: number
        x-alternatives:
          - type: number
          - type: string
      state:
        type: string
        description: State of the response
        example: STARTED
      time_taken:
        type: number
        description: Time Taken of the response
        example: 5
    required:
      - id
      - state
      - time_taken
  getCompletedResponseResponse:
    type: object
    properties:
      data:
        $ref: '#/definitions/completeResponseSchema'
  Model 104:
    type: object
    properties:
      label:
        type: string
        description: Label for the section button
        example: Continue
      section_randomise:
        type: boolean
        description: Randomise the questions in the section
      single_page_view:
        type: boolean
        description: Show all questions in the section in a single page
      skip_section:
        type: boolean
        description: Skip the section
      section_intro:
        type: string
        description: >-
          Introduction text of the section in the same page? or in a seperate
          page?
        example: same
        enum:
          - same
          - separate
      required:
        type: boolean
        description: Is the section required?. Only in case of single page view
  Model 105:
    type: object
    properties:
      join_condition:
        type: string
        description: Logic operator of the Join condition
        example: and
        default: and
        enum:
          - and
          - or
      type:
        type: string
        description: Logic type
        example: param
        enum:
          - param
      comparator:
        type: string
        description: Comparator for the logic type
        example: isPassed
        enum:
          - isPassed
          - isNotPassed
          - startsWith
          - endsWith
          - contains
          - equalsString
          - doesNotContain
          - notEqualTo
          - lessThanForParam
          - greaterThanForParam
      variable_id:
        type: number
        description: Variable Id for the Logic
        required:
          - variable_id
        x-alternatives:
          - type: number
            description: Variable Id for the Logic
      value:
        type: string
        description: Value for the logic
        default: ''
    required:
      - type
      - comparator
  Model 106:
    type: array
    items:
      $ref: '#/definitions/Model 105'
  Model 107:
    type: object
    properties:
      logics:
        $ref: '#/definitions/Model 106'
        type: array
  questions:
    type: array
    items:
      $ref: '#/definitions/question'
  Model 108:
    type: object
    properties:
      name:
        type: string
        description: Name of the section
        example: Section 1
        maxLength: 10000
      description:
        type: string
        description: Description of the section
        example: Section 1 description
        maxLength: 10000
      position:
        type: number
        description: Position of the section
        example: 1
      properties:
        $ref: '#/definitions/Model 104'
      display_logic:
        $ref: '#/definitions/Model 107'
      questions:
        $ref: '#/definitions/questions'
        type: array
  sections:
    type: array
    description: Array of sections
    minItems: 1
    maxItems: 20
    items:
      $ref: '#/definitions/Model 108'
  Model 109:
    type: object
    properties:
      survey_id:
        type: number
        description: Id of Survey
        example: 12001
      sections:
        $ref: '#/definitions/sections'
        type: array
    required:
      - survey_id
      - sections
  surveyThankyouPageSchema:
    type: object
    properties:
      preAdded:
        type: boolean
      message:
        type: string
      description:
        type: string
      redirect_url:
        type: string
      branding:
        type: boolean
  surveyThankyouPageArraySchema:
    type: array
    items:
      $ref: '#/definitions/surveyThankyouPageSchema'
  limit_reset:
    type: object
    description: Reset the limit after a period of time
    properties:
      never:
        type: boolean
      frequency:
        type: string
        enum:
          - day
          - week
          - month
          - year
        required:
          - frequency
        x-alternatives:
          - type: string
            enum:
              - day
              - week
              - month
              - year
          - type: string
      value:
        type: number
        minimum: 1
        maximum: 9999999999
        required:
          - value
        x-alternatives:
          - type: number
            minimum: 1
            maximum: 9999999999
          - type: string
    required:
      - never
  submission_per_user:
    type: object
    properties:
      active:
        type: boolean
        description: Enable submission per user
      limit:
        type: number
        minimum: 1
        maximum: 9999999999
        required:
          - limit
        x-alternatives:
          - type: number
            minimum: 1
            maximum: 9999999999
          - type: number
            minimum: 1
            maximum: 9999999999
      limit_reset:
        $ref: '#/definitions/limit_reset'
    required:
      - active
  throttling:
    type: object
    properties:
      active:
        type: boolean
        description: Enable throttling
      times:
        type: number
        minimum: 1
        maximum: 9999999999
        required:
          - times
        x-alternatives:
          - type: number
            minimum: 1
            maximum: 9999999999
          - type: number
            minimum: 1
            maximum: 9999999999
      days:
        type: number
        minimum: 1
        maximum: 9999999999
        required:
          - days
        x-alternatives:
          - type: number
            minimum: 1
            maximum: 9999999999
          - type: number
            minimum: 1
            maximum: 9999999999
    required:
      - active
  dynamic_cut_off:
    type: object
    properties:
      enabled:
        type: boolean
      period:
        type: string
        enum:
          - days
          - weeks
          - months
          - years
          - hours
        required:
          - period
        optional:
          - period
        x-alternatives:
          - type: string
            enum:
              - days
              - weeks
              - months
              - years
              - hours
          - type: string
      value:
        type: number
        minimum: 1
        maximum: 999
        required:
          - value
        optional:
          - value
        x-alternatives:
          - type: number
            minimum: 1
            maximum: 999
          - type: number
    required:
      - enabled
  surveySettings:
    type: object
    properties:
      survey_randomize:
        type: boolean
        description: Randomize questions in the survey
      submission_per_user:
        $ref: '#/definitions/submission_per_user'
      throttling:
        $ref: '#/definitions/throttling'
      track_ip:
        type: boolean
        description: To Track the IP address of the user
      track_location:
        type: boolean
        description: To Track the location of the user
      edit_response:
        type: boolean
        description: To allow the user to edit the response
      copy_of_response:
        type: boolean
        description: To allow the user to send a copy of the response to themselves
      partial_submission:
        type: boolean
        description: To allow the user to submit partially
      auto_submission:
        type: boolean
        description: >-
          To allow the user to submit automatically. Only available in Chat
          Surveys
      response_limit:
        type: number
        description: Limit the number of responses this survey can get
        maximum: 1000000000
      cut_off_date:
        type: string
        format: date
        example: '2025-05-06T13:28:54.280Z'
      dynamic_cut_off:
        $ref: '#/definitions/dynamic_cut_off'
      enable_offline_support:
        type: boolean
        description: This feature is available only in ClassicForm
      password:
        type: string
        description: Password for the survey
        minLength: 5
        maxLength: 256
      disable_scroll_back:
        type: boolean
        description: To disable the scroll back option
      disable_contact_tracking:
        type: boolean
        description: To disable the contact tracking
  createSurveySchema:
    type: object
    properties:
      name:
        type: string
        example: Employee satisfaction survey
        minLength: 1
        maxLength: 200
      survey_type:
        type: string
        enum:
          - ClassicForm
          - NPS
          - NPSChat
          - Conversational
          - CES
          - CESChat
          - CSAT
          - CSATChat
      workspace_id:
        type: number
        description: >-
          "workspace" has been renamed to "survey folder". We suggest using
          survey_folder_id instead of workspace_id
      survey_folder_id:
        type: number
      visibility:
        type: string
        default: Public
        enum:
          - Public
          - Mine
      theme_id:
        type: number
      primary_language:
        type: string
      welcome_screen_button_text:
        type: string
        maxLength: 250
      welcome_text:
        type: string
      welcome_description:
        type: string
      thankyou_json:
        $ref: '#/definitions/surveyThankyouPageArraySchema'
        type: array
      settings:
        $ref: '#/definitions/surveySettings'
    required:
      - name
      - survey_type
  user_id:
    type: array
    description: Id of users who should be added to the team
    example:
      - 1
      - 2
      - 3
    maxItems: 100
    items:
      type: number
  Model 110:
    type: object
    properties:
      name:
        type: string
        description: Team name
        example: Avengers
        maxLength: 255
        x-convert:
          trim: true
      type:
        type: string
        description: Team type, if not provided will be "SURVEY" by default
        default: SURVEY
        enum:
          - SURVEY
          - TICKET
      user_id:
        $ref: '#/definitions/user_id'
        type: array
      enable_round_robin:
        type: boolean
        description: Enable round robin for the team
        example: true
        default: false
        optional:
          - enable_round_robin
        x-alternatives:
          - type: boolean
            description: Enable round robin for the team
            example: true
            default: false
    required:
      - name
  createTeamSchema:
    type: object
    properties:
      data:
        $ref: '#/definitions/teamSchema'
  child_ticket_ids:
    type: array
    description: >-
      An array of ticket IDs representing the child tickets associated with this
      ticket
    items:
      type: number
  createTicketSchema:
    type: object
    properties:
      requester_id:
        type: number
        description: Ticket requester's contact id
        example: 1
      email:
        type: string
        description: Ticket requester's contact email
        example: abc@ymail.com
      phone:
        type: string
        description: Ticket requester's contact phone
        example: + 123 23
      subject:
        type: string
        description: Ticket subject
        example: Ticket subject 1
        maxLength: 200
      description:
        type: string
        description: Ticket description
        example: Ticket description 1
      attachments:
        type: file
        description: >-
          Following file types are allowed: pdf, png, jpeg, mp3, csv, wav.
          Maximum file size allowed is 15MB.
        x-meta:
          swaggerType: file
        in: formData
      priority:
        type: number
        description: Ticket priority
        example: 2
      status:
        type: number
        description: Ticket status
        example: 3
      parent_ticket_id:
        type: number
        description: The ID of the parent ticket to which this ticket is related
        example: 12532
      child_ticket_ids:
        $ref: '#/definitions/child_ticket_ids'
        type: array
      source:
        type: number
        description: Ticket source
        example: 4
      submission_id:
        type: number
        description: Response ID
        example: 5
      nps_submission_id:
        type: number
        description: NPS Response ID
        example: 6
      assignee_id:
        type: number
        description: Ticket agent's user id
        example: 7
      team_id:
        type: number
        description: Ticket team's id
        example: 8
      custom_fields:
        $ref: '#/definitions/properties'
    required:
      - subject
      - priority
      - status
  language_codes:
    type: array
    description: Array of language codes
    example:
      - en
      - fr
    items:
      type: string
  Model 111:
    type: object
    properties:
      survey_id:
        type: number
        description: Survey ID
        example: 123456
      language_codes:
        $ref: '#/definitions/language_codes'
        type: array
      google_translate:
        type: boolean
        description: Translate using Google Translate
        example: false
        default: false
    required:
      - survey_id
      - language_codes
  Model 112:
    type: object
    properties:
      translateByGoogle:
        type: boolean
        description: Auto translate using Google Translate
        example: false
      isCustomLanguage:
        type: boolean
        description: Is custom language
        example: false
      code:
        type: string
        description: Language code
        example: en
    required:
      - translateByGoogle
      - isCustomLanguage
      - code
  languageCreated:
    type: array
    description: Array of created languages
    items:
      $ref: '#/definitions/Model 112'
  Model 113:
    type: object
    properties:
      code:
        type: string
        description: Language code
        example: en
      message:
        type: string
        description: Message
        example: Translation already exists
    required:
      - code
      - message
  languageSkipped:
    type: array
    description: Array of skipped or invalid languages
    items:
      $ref: '#/definitions/Model 113'
  Model 114:
    type: object
    description: Response data
    properties:
      languageCreated:
        $ref: '#/definitions/languageCreated'
        type: array
      languageSkipped:
        $ref: '#/definitions/languageSkipped'
        type: array
    required:
      - languageCreated
      - languageSkipped
  Model 115:
    type: object
    properties:
      data:
        $ref: '#/definitions/Model 114'
    required:
      - data
  Model 116:
    type: object
    properties:
      name:
        type: string
        maxLength: 255
        x-convert:
          trim: true
      email:
        type: string
        maxLength: 255
        x-format:
          email: true
        x-convert:
          trim: true
      role_id:
        type: number
    required:
      - name
      - email
      - role_id
  createVariablesSchema:
    type: object
    properties:
      survey_id:
        type: number
        description: Id of Survey
        example: 1
      label:
        type: string
        maxLength: 64
      name:
        type: string
        maxLength: 35
      description:
        type: string
        maxLength: 200
      type:
        type: string
        enum:
          - STRING
          - NUMBER
          - DATE
    required:
      - survey_id
      - label
      - name
      - type
  createVariableResponseSchema:
    type: object
    properties:
      data:
        $ref: '#/definitions/getVariableSchema'
  Model 117:
    type: array
    maxItems: 10
    items:
      $ref: '#/definitions/properties'
  Model 118:
    type: object
    properties:
      name:
        type: string
        maxLength: 255
      description:
        type: string
        maxLength: 1000
      url:
        type: string
        maxLength: 1000
      event_type:
        type: string
        default: submission_completed
        maxLength: 255
      object_type:
        type: string
        default: survey
        maxLength: 255
      survey_id:
        type: number
      http_method:
        type: string
        enum:
          - POST
          - GET
          - PATCH
          - PUT
          - DELETE
        maxLength: 255
      headers:
        $ref: '#/definitions/Model 117'
        type: array
      type:
        type: string
        default: application
        maxLength: 255
      payload:
        $ref: '#/definitions/properties'
      include_partial_submission:
        type: boolean
        example: true
        default: false
    required:
      - url
      - survey_id
      - http_method
  webhookResponseSchema:
    type: object
    properties:
      data:
        $ref: '#/definitions/webhookSchema'
  Model 119:
    type: object
    properties:
      name:
        type: string
        description: Name of the event
        example: SURVEY_CREATED
        enum:
          - SURVEY_CREATED
          - SURVEY_EDITED
          - SURVEY_DELETED
          - THEME_ADDED
          - THEME_EDITED
          - THEME_DELETED
          - USER_CREATED
          - USER_DELETED
          - USER_EDITED
          - CONTACT_CREATED
          - CONTACT_UPDATED
          - CONTACT_DELETED
          - CONTACT_PROPERTY_CREATED
          - CONTACT_PROPERTY_EDITED
          - CONTACT_PROPERTY_DELETED
          - WORKSPACE_CREATED
          - WORKSPACE_DELETED
          - WORKSPACE_EDITED
          - SYNC_DEVICES
          - SURVEY_RESPONSE_IMPORT
          - SURVEY_RESPONSE_DELETION
          - SURVEY_CLOSED
          - SURVEY_RESTORED
          - SURVEY_OWNERSHIP_TRANSFER
          - FOLDER_USER_ACCESS_GRANT
          - FOLDER_USER_ACCESS_REMOVE
          - FOLDER_TEAM_ACCESS_GRANT
          - FOLDER_TEAM_ACCESS_REMOVE
          - SURVEY_MOVED
          - SURVEY_PASSWORD_CREATED
          - SURVEY_PASSWORD_DELETED
          - SURVEY_PASSWORD_EDITED
          - QUESTION_CATALOG_CREATED
          - QUESTION_CATALOG_DELETED
          - LOGIN
          - LOGOUT
  Model 120:
    type: array
    description: Array of event names
    example:
      - name: SURVEY_CREATED
    items:
      $ref: '#/definitions/Model 119'
  createAuditLogEventSchema:
    type: object
    properties:
      events:
        $ref: '#/definitions/Model 120'
        type: array
      http_method:
        type: string
        description: The HTTP method for the request (GET, PUT, POST, or DELETE).
        example: POST
        enum:
          - GET
          - PUT
          - POST
          - DELETE
      url:
        type: string
        description: URL of audit webhook event
        example: https://subscribed.com/data
        x-format:
          uri: true
      headers:
        $ref: '#/definitions/properties'
    required:
      - events
      - http_method
      - url
  Model 121:
    type: object
    properties:
      id:
        type: number
        description: ID of the event
        example: 1
      event:
        type: string
        description: Name of the event
        example: SURVEY_CREATED
    required:
      - id
      - event
  Model 122:
    type: array
    items:
      $ref: '#/definitions/Model 121'
  Model 123:
    type: object
    properties:
      events:
        $ref: '#/definitions/Model 122'
        type: array
  contact_ids:
    type: array
    description: Id's of Contact
    maxItems: 100
    items:
      type: number
  contactSchema:
    type: object
    properties:
      full_name:
        type: string
        description: Full Name of contact
        example: Jane Doe
        maxLength: 255
      phone:
        type: string
        description: Phone number of the contact
        example: '91234567833'
        maxLength: 255
      mobile:
        type: string
        description: Mobile number of the contact
        example: '1653452783'
        maxLength: 255
      email:
        type: string
        description: Email of contact
        example: janedoe@surveysparrow.com
        maxLength: 255
        x-format:
          email: true
        required:
          - email
        optional:
          - email
        x-alternatives:
          - type: string
            description: Email of contact
            example: janedoe@surveysparrow.com
            maxLength: 255
            x-format:
              email: true
          - type: string
            description: Email of contact
            example: janedoe@surveysparrow.com
            maxLength: 255
            x-format:
              email: true
      job_title:
        type: string
        description: Job Title of the contact
        example: Manager
        maxLength: 255
      contact_type:
        type: string
        description: Type of the contact
        default: contact
        enum:
          - contact
          - employee
      variables:
        $ref: '#/definitions/properties'
      expires_at:
        type: string
        format: date
        description: expiry time of link in UTC
        example: '2025-05-06T13:28:54Z'
        minLength: now
  Model 124:
    type: array
    description: Array of contact objects
    minItems: 1
    maxItems: 100
    items:
      $ref: '#/definitions/contactSchema'
  Model 125:
    type: array
    description: Id's of Contact Lists
    maxItems: 100
    items:
      type: number
  createUniQueShareLinkSchema:
    type: object
    properties:
      survey_id:
        type: number
        description: Id of Survey
        example: 1
      channel_id:
        type: number
        description: Id of Channel
        example: 1
      contact_ids:
        $ref: '#/definitions/contact_ids'
        type: array
      contacts:
        $ref: '#/definitions/Model 124'
        type: array
      contact_list_ids:
        $ref: '#/definitions/Model 125'
        type: array
      short_url:
        type: boolean
        description: Create short link for the survey
        example: false
        default: false
      expires_at:
        type: string
        format: date
        description: expiry time of link in UTC
        example: '2025-05-06T13:28:54Z'
        minLength: now
      variables:
        $ref: '#/definitions/properties'
    required:
      - survey_id
      - channel_id
  Model 126:
    type: object
    properties:
      contact_id:
        type: number
        description: ID of the contact
        example: 1
      survey_link:
        type: string
        description: Survey Link
        example: https://example.surveysparrow.com/n/survey-name/unique-identifier
      short_url:
        type: string
        description: Short URL for the survey
        example: short.surveysparrow.com/DHDFYedfh
      variables:
        $ref: '#/definitions/properties'
      expires_at:
        type: string
        format: date
        description: expiry time of link in UTC
        example: '2025-05-06T13:28:54Z'
    required:
      - contact_id
  uniqueChannelUrlsSchema:
    type: array
    items:
      $ref: '#/definitions/Model 126'
  getUniQueShareLinkResponse:
    type: object
    properties:
      data:
        $ref: '#/definitions/uniqueChannelUrlsSchema'
        type: array
  Model 127:
    type: array
    description: List ids to which the contact should be added
    minItems: 1
    maxItems: 100
    items:
      type: number
  createBulkContactSchema:
    type: object
    properties:
      full_name:
        type: string
        description: Full Name of contact
        example: Jane Doe
        maxLength: 255
      email:
        type: string
        description: >-
          Email of contact. Can be optional only if anonymous contact feature is
          enabled.
        example: janedoe@surveysparrow.com
        maxLength: 255
        x-format:
          email: true
      phone:
        type: string
        description: Phone number of the contact
        example: '91234567833'
        maxLength: 255
      mobile:
        type: string
        description: Mobile number of the contact
        example: '1653452783'
        maxLength: 255
      job_title:
        type: string
        description: Job Title of the contact
        example: Manager
        maxLength: 255
      contact_type:
        type: string
        description: Type of contact
        default: contact
        enum:
          - contact
          - employee
      contact_list_ids:
        $ref: '#/definitions/Model 127'
        type: array
      referenceId:
        type: string
        description: Reference ID of the anonymous contact
        example: '123456'
        maxLength: 255
  createBulkContact:
    type: array
    minItems: 1
    maxItems: 100
    items:
      $ref: '#/definitions/createBulkContactSchema'
  Model 128:
    type: object
    properties:
      message:
        type: string
        description: The contacts have been successfully created
      token:
        type: string
        description: The token will be used for getting status of contacts
  contact:
    type: object
    description: Contact of the submission
    example:
      full_name: Jane Doe
      email: janedoe@surveysparrow.com
      phone: '91234567833'
      mobile: '1653452783'
      job_title: Manager
      contact_type: contact
    properties:
      full_name:
        type: string
        description: Full Name of contact
        example: Jane Doe
        maxLength: 255
      email:
        type: string
        description: >-
          Email of contact. Can be optional only if anonymous contact feature is
          enabled.
        example: janedoe@surveysparrow.com
        maxLength: 255
        x-format:
          email: true
      phone:
        type: string
        description: Phone number of the contact
        example: '91234567833'
        maxLength: 255
      mobile:
        type: string
        description: Mobile number of the contact
        example: '1653452783'
        maxLength: 255
      job_title:
        type: string
        description: Job Title of the contact
        example: Manager
        maxLength: 255
      contact_type:
        type: string
        description: Type of contact
        default: contact
        enum:
          - contact
          - employee
      referenceId:
        type: string
        description: Reference ID of the anonymous contact
        example: '123456'
        maxLength: 255
  ResponseMetaData:
    type: object
    properties:
      os:
        type: string
        description: OS of the response
        example: macOS
        maxLength: 255
      browser:
        type: string
        description: Browser of response
        example: Chrome
        maxLength: 255
      time_zone:
        type: string
        description: Time Zone of response
        example: Asia/Calcutta
        maxLength: 255
      browser_language:
        type: string
        description: Browser Language of the response
        example: en-GB
        maxLength: 255
      date_time:
        type: string
        format: date
        description: Date and Time of submission. Should be in the ISO format
        example: '2022-11-02T11:28:55.642Z'
  Model 129:
    type: object
    properties:
      contact_id:
        type: number
        description: ID of the contact
        example: 2
      contact:
        $ref: '#/definitions/contact'
      variables:
        $ref: '#/definitions/properties'
      trigger_workflow:
        type: boolean
        description: Should this response trigger workflow
        default: true
      channel_id:
        type: number
        description: ID of the channel
        example: 3
      meta_data:
        $ref: '#/definitions/ResponseMetaData'
      answers:
        $ref: '#/definitions/getAnswerSchema'
        type: array
    required:
      - answers
  BatchResponseInput:
    type: array
    maxItems: 200
    items:
      $ref: '#/definitions/Model 129'
  BatchImportRequestSchema:
    type: object
    properties:
      survey_id:
        type: number
        description: ID of the survey
        example: 1
      responses:
        $ref: '#/definitions/BatchResponseInput'
        type: array
    required:
      - survey_id
      - responses
  BatchImportResponseSchema:
    type: object
    properties:
      token:
        type: string
        description: Job ID for tracking the batch import process
        example: your_job_id_example
      message:
        type: string
        description: A message indicating the acceptance of the batch import request
    required:
      - token
      - message
  startResponseSchema:
    type: object
    properties:
      survey_id:
        type: number
        description: ID of the survey
        example: 1
      contact_id:
        type: number
        description: ID of the contact
        example: 2
      channel_id:
        type: number
        description: ID of the channel
        example: 3
      meta_data:
        $ref: '#/definitions/ResponseMetaData'
    required:
      - survey_id
  Model 130:
    type: object
    properties:
      id:
        type: number
        description: ID of the response
        example: 1
      state:
        type: string
        description: State of the response
        example: STARTED
      start_time:
        type: string
        description: Start Time of the response
    required:
      - id
      - state
      - start_time
  getStartResponseResponse:
    type: object
    properties:
      data:
        $ref: '#/definitions/Model 130'
  subject:
    type: object
    properties:
      full_name:
        type: string
      email:
        type: string
        x-format:
          email: true
    required:
      - full_name
      - email
  Model 131:
    type: object
    properties:
      full_name:
        type: string
      email:
        type: string
        x-format:
          email: true
      relation:
        type: string
    required:
      - full_name
      - email
      - relation
  evaluators:
    type: array
    items:
      $ref: '#/definitions/Model 131'
  Model 132:
    type: object
    properties:
      require_approval:
        type: boolean
      self_evaluation:
        type: boolean
      self_nomination:
        type: boolean
    required:
      - require_approval
      - self_evaluation
      - self_nomination
  Model 133:
    type: object
    properties:
      subject:
        $ref: '#/definitions/subject'
      evaluators:
        $ref: '#/definitions/evaluators'
        type: array
      approver:
        $ref: '#/definitions/subject'
      properties:
        $ref: '#/definitions/Model 132'
      invite_now:
        type: boolean
      schedule:
        type: string
        format: date
    required:
      - subject
      - evaluators
      - approver
      - properties
  createBulkTickets:
    type: object
    properties:
      requester_id:
        type: number
        description: Ticket requester's contact id
        example: 1
      email:
        type: string
        description: Ticket requester's contact email
        example: abc@ymail.com
      phone:
        type: string
        description: Ticket requester's contact phone
        example: + 123 23
      subject:
        type: string
        description: Ticket subject
        example: Ticket subject 1
        maxLength: 200
        required:
          - subject
          - subject
        x-alternatives:
          - type: string
            description: Ticket subject
            example: Ticket subject 1
            maxLength: 200
          - type: string
            description: Ticket subject
            example: Ticket subject 1
            maxLength: 200
      description:
        type: string
        description: Ticket description
        example: Ticket description 1
      priority:
        type: number
        description: Ticket priority
        example: 2
        required:
          - priority
          - priority
        x-alternatives:
          - type: number
            description: Ticket priority
            example: 2
          - type: number
            description: Ticket priority
            example: 2
      status:
        type: number
        description: Ticket status
        example: 3
        required:
          - status
          - status
        x-alternatives:
          - type: number
            description: Ticket status
            example: 3
          - type: number
            description: Ticket status
            example: 3
      source:
        type: number
        description: Ticket source
        example: 4
      submission_id:
        type: number
        description: Response ID
        example: 5
      nps_submission_id:
        type: number
        description: NPS Response ID
        example: 6
      assignee_id:
        type: number
        description: Ticket agent's user id
        example: 7
      team_id:
        type: number
        description: Ticket team's id
        example: 8
      custom_fields:
        $ref: '#/definitions/properties'
  createTicketInBatch:
    type: array
    minItems: 1
    maxItems: 100
    items:
      $ref: '#/definitions/createBulkTickets'
  Model 134:
    type: object
    properties:
      message:
        type: string
      token:
        type: string
    required:
      - message
      - token
  variableSchema:
    type: object
    properties:
      label:
        type: string
        maxLength: 64
      name:
        type: string
        maxLength: 35
      description:
        type: string
        maxLength: 200
      type:
        type: string
        enum:
          - STRING
          - NUMBER
          - DATE
    required:
      - label
      - name
      - type
  variables:
    type: array
    minItems: 1
    maxItems: 50
    items:
      $ref: '#/definitions/variableSchema'
  createBulkVariablesSchema:
    type: object
    properties:
      survey_id:
        type: number
        description: Id of Survey
        example: 1
      variables:
        $ref: '#/definitions/variables'
        type: array
    required:
      - survey_id
      - variables
  createVariablesVariablesSchema:
    type: array
    minItems: 1
    maxItems: 50
    items:
      $ref: '#/definitions/getVariableSchema'
  createVariablesResponseSchema:
    type: object
    properties:
      data:
        $ref: '#/definitions/createVariablesVariablesSchema'
        type: array
  Model 135:
    type: object
    properties:
      name:
        type: string
        enum:
          - SURVEY_CREATED
          - SURVEY_EDITED
          - SURVEY_DELETED
          - THEME_ADDED
          - THEME_EDITED
          - THEME_DELETED
          - USER_CREATED
          - USER_DELETED
          - USER_EDITED
          - CONTACT_CREATED
          - CONTACT_UPDATED
          - CONTACT_DELETED
          - CONTACT_PROPERTY_CREATED
          - CONTACT_PROPERTY_EDITED
          - CONTACT_PROPERTY_DELETED
          - WORKSPACE_CREATED
          - WORKSPACE_DELETED
          - WORKSPACE_EDITED
          - SYNC_DEVICES
          - SURVEY_RESPONSE_IMPORT
          - SURVEY_RESPONSE_DELETION
          - SURVEY_CLOSED
          - SURVEY_RESTORED
          - SURVEY_OWNERSHIP_TRANSFER
          - FOLDER_USER_ACCESS_GRANT
          - FOLDER_USER_ACCESS_REMOVE
          - FOLDER_TEAM_ACCESS_GRANT
          - FOLDER_TEAM_ACCESS_REMOVE
          - SURVEY_MOVED
          - SURVEY_PASSWORD_CREATED
          - SURVEY_PASSWORD_DELETED
          - SURVEY_PASSWORD_EDITED
          - QUESTION_CATALOG_CREATED
          - QUESTION_CATALOG_DELETED
          - LOGIN
          - LOGOUT
  Model 136:
    type: array
    minItems: 1
    items:
      $ref: '#/definitions/Model 135'
  Model 137:
    type: object
    properties:
      events:
        $ref: '#/definitions/Model 136'
        type: array
      httpMethod:
        type: string
        enum:
          - GET
          - PUT
          - POST
          - DELETE
      url:
        type: string
        x-format:
          uri: true
      headers:
        $ref: '#/definitions/properties'
    required:
      - events
      - httpMethod
      - url
  Model 138:
    type: object
    properties:
      email:
        type: string
        x-format:
          email: true
      variables:
        $ref: '#/definitions/properties'
    required:
      - email
  Model 139:
    type: array
    maxItems: 2000
    items:
      $ref: '#/definitions/Model 138'
  Model 140:
    type: object
    properties:
      id:
        type: number
        x-alternatives:
          - type: number
          - type: string
      label:
        type: string
    required:
      - label
  Model 141:
    type: array
    items:
      $ref: '#/definitions/Model 140'
  Model 142:
    type: object
    properties:
      body:
        type: string
      subject:
        type: string
      replyEmail:
        type: string
      fromAddress:
        type: string
  Model 143:
    type: object
    properties:
      body:
        type: string
      subject:
        type: string
      frequency:
        type: string
        enum:
          - Days
          - Weeks
          - Months
      type:
        type: string
        enum:
          - NOT_RESPONDED
          - PARTIALLY_RESPONDED
      interval:
        type: number
      properties:
        $ref: '#/definitions/Model 101'
    required:
      - frequency
      - type
      - interval
  Model 144:
    type: array
    items:
      $ref: '#/definitions/Model 143'
  Model 145:
    type: object
    properties:
      contacts:
        $ref: '#/definitions/Model 139'
        type: array
      contactLists:
        $ref: '#/definitions/getContactSchema'
        type: array
      sendNow:
        type: boolean
        default: true
      mode:
        type: string
        default: BLAST
      type:
        type: string
        default: EMAIL
      name:
        type: string
        default: Email Share
      delayed:
        type: string
        required:
          - delayed
        x-alternatives:
          - type: string
            required:
              - delayed
            x-alternatives:
              - type: string
      schedule:
        type: string
        optional:
          - schedule
        x-alternatives:
          - type: string
          - $ref: '#/x-alt-definitions/Model 13'
      customProperties:
        $ref: '#/definitions/properties'
      variables:
        $ref: '#/definitions/properties'
      questions:
        $ref: '#/definitions/Model 141'
        type: array
      meetingTime:
        type: string
      properties:
        $ref: '#/definitions/Model 142'
      embed_first_question:
        type: boolean
        default: true
      custom_footer:
        type: boolean
        default: false
      custom_footer_value:
        type: string
      ignoreThrottledContacts:
        type: boolean
        default: true
      reminders:
        $ref: '#/definitions/Model 144'
        type: array
  Model 146:
    type: object
    properties:
      mobile:
        type: string
      variables:
        $ref: '#/definitions/properties'
    required:
      - mobile
  Model 147:
    type: array
    maxItems: 2000
    items:
      $ref: '#/definitions/Model 146'
  Model 148:
    type: object
    properties:
      content:
        type: string
        maxLength: 140
      smsTargetId:
        type: number
      acceptAnonymousResponse:
        type: boolean
      twilio_consent_agreed:
        type: boolean
        description: For using surveysparrow message service you need to agree the consent.
    required:
      - content
  Model 149:
    type: object
    properties:
      contacts:
        $ref: '#/definitions/Model 147'
        type: array
      contactLists:
        $ref: '#/definitions/getContactSchema'
        type: array
      sendNow:
        type: boolean
        default: true
      mode:
        type: string
        default: BLAST
      type:
        type: string
        default: SMS
      name:
        type: string
        default: SMS Share
      delayed:
        type: string
        required:
          - delayed
        x-alternatives:
          - type: string
            required:
              - delayed
            x-alternatives:
              - type: string
      schedule:
        type: string
        optional:
          - schedule
        x-alternatives:
          - type: string
          - $ref: '#/x-alt-definitions/Model 13'
      customProperties:
        $ref: '#/definitions/properties'
      variables:
        $ref: '#/definitions/properties'
      properties:
        $ref: '#/definitions/Model 148'
      ignoreThrottledContacts:
        type: boolean
        default: true
    required:
      - properties
  Model 150:
    type: object
    properties:
      name:
        type: string
        description: Full Name of contact
        example: Jane Doe
      phone:
        type: string
        description: Phone number of the contact
        example: '91234567833'
      mobile:
        type: string
        description: Mobile number of the contact
        example: '1653452783'
      email:
        type: string
        description: Email of contact
        example: janedoe@surveysparrow.com
        x-format:
          email: true
        required:
          - email
        optional:
          - email
        x-alternatives:
          - type: string
            description: Email of contact
            example: janedoe@surveysparrow.com
            x-format:
              email: true
          - type: string
            description: Email of contact
            example: janedoe@surveysparrow.com
            x-format:
              email: true
      jobTitle:
        type: string
        description: Job Title of the contact
        example: Manager
      contact_type:
        type: string
        description: Type of contact
        default: contact
        enum:
          - contact
          - employee
  Model 151:
    type: array
    items:
      $ref: '#/definitions/Model 150'
  Model 152:
    type: object
    properties:
      status:
        type: string
        description: The contacts have been successfully created
        enum:
          - created/updated
  Model 153:
    type: object
    properties:
      status:
        type: string
        description: >-
          The contacts are under creation, please check contacts page in some
          time.
        enum:
          - pending
  Model 154:
    type: object
    properties:
      name:
        type: string
        description: Full Name of contact
        example: Jane Doe
      phone:
        type: string
        description: Phone number of the contact
        example: '91234567833'
      mobile:
        type: string
        description: Mobile number of the contact
        example: '1653452783'
      email:
        type: string
        description: Email of contact
        example: janedoe@surveysparrow.com
        x-format:
          email: true
        required:
          - email
        optional:
          - email
        x-alternatives:
          - type: string
            description: Email of contact
            example: janedoe@surveysparrow.com
            x-format:
              email: true
          - type: string
            description: Email of contact
            example: janedoe@surveysparrow.com
            x-format:
              email: true
      jobTitle:
        type: string
        description: Job Title of the contact
        example: Manager
  Model 155:
    type: array
    items:
      $ref: '#/definitions/Model 154'
  Model 156:
    type: object
    properties:
      status:
        type: string
        description: The contacts have been successfully created
        enum:
          - created
  Model 157:
    type: object
    properties:
      contacts:
        $ref: '#/definitions/Model 139'
        type: array
      contactLists:
        $ref: '#/definitions/getContactSchema'
        type: array
      sendNow:
        type: boolean
        default: true
      mode:
        type: string
        default: BLAST
      type:
        type: string
        default: EMAIL
      name:
        type: string
        default: Email Share
      delayed:
        type: string
        required:
          - delayed
        x-alternatives:
          - type: string
            required:
              - delayed
            x-alternatives:
              - type: string
      schedule:
        type: string
        optional:
          - schedule
        x-alternatives:
          - type: string
          - $ref: '#/x-alt-definitions/Model 13'
      customProperties:
        $ref: '#/definitions/properties'
      variables:
        $ref: '#/definitions/properties'
      questions:
        $ref: '#/definitions/Model 141'
        type: array
      meetingTime:
        type: string
      properties:
        $ref: '#/definitions/Model 142'
      ignoreThrottledContacts:
        type: boolean
        default: true
      reminders:
        $ref: '#/definitions/Model 144'
        type: array
      embed_first_question:
        type: boolean
        default: true
      custom_footer:
        type: boolean
        default: false
      custom_footer_value:
        type: string
  Model 158:
    type: object
    properties:
      Rating:
        type: number
        minimum: 1
        maximum: 5
  answers:
    type: array
    items:
      $ref: '#/definitions/Model 158'
  Model 159:
    type: object
    properties:
      device_id:
        type: string
      answers:
        $ref: '#/definitions/answers'
        type: array
  Model 160:
    type: object
    default:
      embed_first_question: true
      custom_footer: false
    properties:
      embed_first_question:
        type: boolean
      custom_footer:
        type: boolean
      custom_footer_value:
        type: string
    required:
      - embed_first_question
      - custom_footer
  Model 161:
    type: object
    properties:
      body:
        type: string
      subject:
        type: string
      frequency:
        type: string
        enum:
          - Days
          - Weeks
          - Months
      type:
        type: string
        enum:
          - NOT_RESPONDED
          - PARTIALLY_RESPONDED
      interval:
        type: number
      properties:
        $ref: '#/definitions/Model 160'
    required:
      - frequency
      - type
      - interval
  Model 162:
    type: array
    items:
      $ref: '#/definitions/Model 161'
  Model 163:
    type: object
    properties:
      contacts:
        $ref: '#/definitions/Model 139'
        type: array
      contactLists:
        $ref: '#/definitions/getContactSchema'
        type: array
      sendNow:
        type: boolean
        default: true
      mode:
        type: string
        default: BLAST
      type:
        type: string
        default: EMAIL
      name:
        type: string
        default: Email Share
      delayed:
        type: string
        required:
          - delayed
        x-alternatives:
          - type: string
            required:
              - delayed
            x-alternatives:
              - type: string
      schedule:
        type: string
        optional:
          - schedule
        x-alternatives:
          - type: string
          - $ref: '#/x-alt-definitions/Model 13'
      customProperties:
        $ref: '#/definitions/properties'
      variables:
        $ref: '#/definitions/properties'
      questions:
        $ref: '#/definitions/Model 141'
        type: array
      meetingTime:
        type: string
      properties:
        $ref: '#/definitions/Model 142'
      ignoreThrottledContacts:
        type: boolean
        default: true
      reminders:
        $ref: '#/definitions/Model 162'
        type: array
      embed_first_question:
        type: boolean
        default: true
      custom_footer:
        type: boolean
        default: false
      custom_footer_value:
        type: string
  Model 164:
    type: array
    minItems: 1
    maxItems: 2000
    items:
      type: string
  lists:
    type: array
    minItems: 1
    maxItems: 10
    items:
      type: string
  Model 165:
    type: object
    properties:
      contacts:
        $ref: '#/definitions/Model 164'
        type: array
      lists:
        $ref: '#/definitions/lists'
        type: array
      variables:
        $ref: '#/definitions/properties'
      customParams:
        $ref: '#/definitions/properties'
      sendLaterInDays:
        type: number
        minimum: 1
      sendLater:
        type: string
        format: date
  Model 166:
    type: object
    properties:
      fullName:
        type: string
      email:
        type: string
        x-format:
          email: true
    required:
      - fullName
      - email
  Model 167:
    type: object
    properties:
      fullName:
        type: string
      email:
        type: string
        x-format:
          email: true
      relation:
        type: string
    required:
      - fullName
      - email
      - relation
  Model 168:
    type: array
    items:
      $ref: '#/definitions/Model 167'
  Model 169:
    type: object
    properties:
      requireApproval:
        type: boolean
      selfEvaluation:
        type: boolean
      selfNomination:
        type: boolean
    required:
      - requireApproval
      - selfEvaluation
      - selfNomination
  Model 170:
    type: object
    properties:
      subject:
        $ref: '#/definitions/Model 166'
      evaluators:
        $ref: '#/definitions/Model 168'
        type: array
      approver:
        $ref: '#/definitions/Model 166'
      properties:
        $ref: '#/definitions/Model 169'
      inviteNow:
        type: boolean
      schedule:
        type: string
        format: date
    required:
      - subject
      - evaluators
      - approver
      - properties
  Model 171:
    type: object
    properties:
      surveyType:
        type: string
        enum:
          - Conversational
          - Poll
          - ClassicForm
          - Kiosk
          - OfflineApp
          - NPS
          - NPSChat
          - CES
          - CESChat
          - CSAT
          - CSATChat
          - Employee360
        x-convert:
          trim: true
      name:
        type: string
  Model 172:
    type: object
    properties:
      label:
        type: string
        default: Continue
      sectionRandomise:
        type: boolean
        default: false
  Model 173:
    type: object
    properties:
      join_condition:
        type: string
        default: and
        enum:
          - and
          - or
      type:
        type: string
        enum:
          - param
      comparator:
        type: string
        enum:
          - isPassed
          - isNotPassed
          - startsWith
          - endsWith
          - contains
          - equalsString
          - doesNotContain
          - notEqualTo
          - lessThanForParam
          - greaterThanForParam
      variable_id:
        type: number
        required:
          - variable_id
        x-alternatives:
          - type: number
      value:
        type: string
        default: ''
    required:
      - type
      - comparator
  Model 174:
    type: array
    items:
      $ref: '#/definitions/Model 173'
  displayLogic:
    type: object
    properties:
      logics:
        $ref: '#/definitions/Model 174'
        type: array
  Model 175:
    type: array
    items:
      type: string
      pattern: /^[a-zA-Z ]*$/
  Model 176:
    type: object
    properties:
      text:
        type: string
      score:
        type: number
  Model 177:
    type: array
    items:
      $ref: '#/definitions/Model 176'
  allOfTheAboveText:
    type: object
    properties:
      text:
        type: string
  Model 178:
    type: object
    properties:
      min:
        type: string
      max:
        type: string
      step:
        type: number
        enum:
          - 3
          - 4
          - 5
          - 6
          - 7
          - 8
          - 9
          - 10
      wait:
        type: number
        enum:
          - 0
          - 1
          - 2
          - 3
          - 4
          - 5
      type:
        type: string
        enum:
          - SINGLE_LINE
          - MULTI_LINE
          - UNLIMITED
          - EXACT
          - RANGE
      start:
        type: number
        enum:
          - 0
          - 1
      fileTypes:
        $ref: '#/definitions/fileTypes'
        type: array
      minLimit:
        type: number
        required:
          - minLimit
        x-alternatives:
          - type: number
      maxLimit:
        type: number
        required:
          - maxLimit
        x-alternatives:
          - type: number
      exactChoices:
        type: number
        required:
          - exactChoices
        x-alternatives:
          - type: number
  Model 179:
    type: object
    properties:
      data:
        $ref: '#/definitions/Model 178'
  Model 180:
    type: object
    default: []
    properties:
      text:
        type: string
      description:
        type: string
      required:
        type: boolean
      type:
        type: string
        enum:
          - FileInput
          - TextInput
          - OpinionScale
          - MultiChoice
      desc:
        type: string
        maxLength: 10000
      optionsStacked:
        type: boolean
      randomized:
        type: boolean
      multipleAnswers:
        type: boolean
      img:
        type: string
        maxLength: 2000
      video:
        type: string
        maxLength: 2000
      audio:
        type: string
        maxLength: 2000
      tags:
        $ref: '#/definitions/Model 175'
        type: array
      choices:
        $ref: '#/definitions/Model 177'
        type: array
      hasScore:
        type: boolean
      other:
        type: boolean
      allOfTheAbove:
        type: boolean
      noneOfTheAbove:
        type: boolean
      otherText:
        $ref: '#/definitions/Model 176'
      noneOfTheAboveText:
        $ref: '#/definitions/Model 176'
      allOfTheAboveText:
        $ref: '#/definitions/allOfTheAboveText'
      properties:
        $ref: '#/definitions/Model 179'
      displayLogic:
        $ref: '#/definitions/displayLogic'
    required:
      - text
      - type
  Model 181:
    type: array
    maxItems: 50
    items:
      $ref: '#/definitions/Model 180'
  Model 182:
    type: object
    properties:
      name:
        type: string
      description:
        type: string
      properties:
        $ref: '#/definitions/Model 172'
      displayLogic:
        $ref: '#/definitions/displayLogic'
      questions:
        $ref: '#/definitions/Model 181'
        type: array
  Model 183:
    type: object
    properties:
      survey_id:
        type: number
        description: Id of the survey
        example: 1
    required:
      - survey_id
  Model 184:
    type: object
    properties:
      survey_type:
        type: string
        description: Survey type to be Cloned.
        example: Conversational
        enum:
          - Conversational
          - ClassicForm
          - Kiosk
          - OfflineApp
          - NPS
          - NPSChat
          - CES
          - CESChat
          - CSAT
          - CSATChat
          - Employee360
        x-convert:
          trim: true
      name:
        type: string
        description: Name of the Cloned Survey
        example: Employee satisfaction survey
        minLength: 1
        maxLength: 200
  Model 185:
    type: object
    properties:
      body:
        type: string
        description: >-
          The comment body. Supports HTML formatting with <b>, <i>, <u>, <a>,
          and <br /> tags.
      attachments:
        type: file
        description: >-
          Following file types are allowed: pdf, png, jpeg, mp3, csv, wav.
          Maximum file size allowed is 15MB.
        x-meta:
          swaggerType: file
        in: formData
      private:
        type: boolean
        description: Comment visibility; true for private, false for public visibility.
        default: false
    required:
      - body
  TicketCommentSchema:
    type: object
    properties:
      data:
        $ref: '#/definitions/tiketCommentSchema'
  Model 186:
    type: object
    properties:
      contacts:
        $ref: '#/definitions/Model 147'
        type: array
      contactLists:
        $ref: '#/definitions/getContactSchema'
        type: array
      variables:
        $ref: '#/definitions/properties'
      sendLaterInDays:
        type: number
        minimum: 1
      twilio_consent_agreed:
        type: boolean
        description: For using surveysparrow message service you need to agree the consent.
  Model 187:
    type: object
    properties:
      contacts:
        $ref: '#/definitions/Model 139'
        type: array
      name:
        type: string
      contactLists:
        $ref: '#/definitions/getContactSchema'
        type: array
      sendLaterInDays:
        type: number
        minimum: 1
      customProperties:
        $ref: '#/definitions/properties'
  metaData:
    type: object
    properties:
      os:
        type: string
      browser:
        type: string
      timeZone:
        type: string
      browserLanguage:
        type: string
      date_time:
        type: string
        format: date
        description: Date and Time of submission. Should be in the ISO format
        example: '2022-11-02T11:28:55.642Z'
  Model 188:
    type: object
    properties:
      contact_id:
        type: number
      channel_id:
        type: number
      metaData:
        $ref: '#/definitions/metaData'
  Model 189:
    type: array
    minItems: 1
    maxItems: 2000
    items:
      $ref: '#/definitions/Model 138'
  Model 190:
    type: object
    properties:
      name:
        type: string
      variables:
        $ref: '#/definitions/properties'
    required:
      - name
  Model 191:
    type: array
    minItems: 1
    maxItems: 10
    items:
      $ref: '#/definitions/Model 190'
  Model 192:
    type: object
    properties:
      contacts:
        $ref: '#/definitions/Model 189'
        type: array
      lists:
        $ref: '#/definitions/Model 191'
        type: array
      variables:
        $ref: '#/definitions/properties'
      sendLaterInDays:
        type: number
        minimum: 1
      sendLater:
        type: string
        format: date
      ignoreThrottledContacts:
        type: boolean
        default: true
  contactIds:
    type: array
    maxItems: 100
    items:
      type: number
  Model 193:
    type: object
    properties:
      contactIds:
        $ref: '#/definitions/contactIds'
        type: array
      contactListIds:
        $ref: '#/definitions/teams'
        type: array
      channelType:
        type: string
        default: EMAIL
        enum:
          - EMAIL
          - EMBED
        x-convert:
          uppercase: true
  Model 194:
    type: object
    properties:
      survey_id:
        type: number
        description: Survey ID
        example: 123456
      language_code:
        type: string
        description: Language code
        example: en
      google_translate:
        type: boolean
        description: Translate using Google Translate
        example: false
        default: false
      file:
        type: file
        description: Excel file containing translations
        x-meta:
          swaggerType: file
        in: formData
    required:
      - survey_id
      - language_code
  Model 195:
    type: object
    description: Response data
    properties:
      message:
        type: string
        description: Message
        example: Translation updated successfully
    required:
      - message
  Model 196:
    type: object
    properties:
      data:
        $ref: '#/definitions/Model 195'
    required:
      - data
  Model 197:
    type: object
    properties:
      name:
        type: string
        description: Full Name of contact
        example: Jane Doe
      email:
        type: string
        description: Email of contact
        example: janedoe@surveysparrow.com
        x-format:
          email: true
      phone:
        type: string
        description: Phone number of the contact
        example: '91234567833'
      mobile:
        type: string
        description: Mobile number of the contact
        example: '1653452783'
      jobTitle:
        type: string
        description: Job Title of the contact
        example: Manager
  Model 198:
    type: object
    properties:
      preAdded:
        type: boolean
      message:
        type: string
      description:
        type: string
      redirectBoolean:
        type: boolean
      redirectMultiBoolean:
        type: boolean
      redirect:
        type: string
        required:
          - redirect
        optional:
          - redirect
        x-alternatives:
          - type: string
          - type: string
      branding:
        type: boolean
      redirectMulti:
        $ref: '#/definitions/properties'
        required:
          - redirectMulti
        optional:
          - redirectMulti
          - redirectMulti
        x-alternatives:
          - $ref: '#/x-alt-definitions/result'
          - type: string
  Model 199:
    type: array
    items:
      $ref: '#/definitions/Model 198'
  Model 200:
    type: object
    properties:
      name:
        type: string
        maxLength: 200
      workspace_id:
        type: number
      theme_id:
        type: number
      welcomeDescriptionEnabled:
        type: boolean
        default: true
      welcomeScreenYesButtonText:
        type: string
        maxLength: 250
      welcomeText:
        type: string
      welcomeDescription:
        type: string
      addThankyouPage:
        type: boolean
        default: false
      thankyou_json:
        $ref: '#/definitions/Model 199'
        type: array
        required:
          - thankyou_json
        optional:
          - thankyou_json
        x-alternatives:
          - $ref: '#/x-alt-definitions/thankyou_json'
            type: array
          - $ref: '#/x-alt-definitions/thankyou_json'
            type: array
      archived:
        type: boolean
  Model 201:
    type: object
    properties:
      name:
        type: string
        x-convert:
          trim: true
      role_id:
        type: number
  Model 202:
    type: object
    properties:
      name:
        type: string
      description:
        type: string
      url:
        type: string
      httpMethod:
        type: string
        enum:
          - POST
          - GET
          - PATCH
          - PUT
          - DELETE
      headers:
        $ref: '#/definitions/Model 69'
        type: array
      payload:
        $ref: '#/definitions/properties'
  Model 203:
    type: object
    properties:
      visibility:
        type: string
        enum:
          - ALL
          - PRIVATE
      teams:
        $ref: '#/definitions/teams'
        type: array
      users:
        $ref: '#/definitions/teams'
        type: array
      name:
        type: string
        x-convert:
          trim: true
  Model 204:
    type: object
    properties:
      survey_id:
        type: number
        description: Id of the survey
    required:
      - survey_id
  updateContactSchema:
    type: object
    properties:
      full_name:
        type: string
        description: Full Name of contact
        example: Jane Doe
        maxLength: 255
      email:
        type: string
        description: >-
          Email of contact. Can be optional only if anonymous contact feature is
          enabled.
        example: janedoe@surveysparrow.com
        maxLength: 255
        x-format:
          email: true
      phone:
        type: string
        description: Phone number of the contact
        example: '91234567833'
        maxLength: 255
      mobile:
        type: string
        description: Mobile number of the contact
        example: '1653452783'
        maxLength: 255
      job_title:
        type: string
        description: Job Title of the contact
        example: Manager
        maxLength: 255
      referenceId:
        type: string
        description: Reference ID of the anonymous contact
        example: '123456'
        maxLength: 255
  Model 205:
    type: object
    properties:
      id:
        type: number
        description: ID of the contact
        example: 1
      name:
        type: string
        description: Full Name of contact
        example: Jane Doe
      email:
        type: string
        description: Email of contact
        example: janedoe@surveysparrow.com
        x-format:
          email: true
      active:
        type: boolean
        description: >-
          if true, indicates the contact will actively receive email and sms
          shares
        example: true
      unsubscribed:
        type: boolean
        description: >-
          if true, indicates that the contact is unsubscribed from receiving
          emails
        example: false
      unsubscribed_at:
        type: string
        format: date
        description: when the contact has unsubscribed
        example: '2023-08-28 12:26:56.899+05:30'
      phone:
        type: string
        description: Phone number of the contact
        example: '9123456783'
      mobile:
        type: string
        description: Mobile number of the contact
        example: '8782828247'
      jobTitle:
        type: string
        description: Job Title of the contact
        example: Manager
      contactLists:
        $ref: '#/definitions/Model 23'
        type: array
    required:
      - id
      - active
      - unsubscribed
      - unsubscribed_at
  Model 206:
    type: object
    properties:
      data:
        $ref: '#/definitions/Model 205'
  Model 207:
    type: object
    properties:
      min:
        type: string
      max:
        type: string
      step:
        type: number
        enum:
          - 3
          - 4
          - 5
          - 6
          - 7
          - 8
          - 9
          - 10
      wait:
        type: number
        enum:
          - 0
          - 1
          - 2
          - 3
          - 4
          - 5
      type:
        type: string
      start:
        type: number
        enum:
          - 0
          - 1
      file_types:
        $ref: '#/definitions/fileTypes'
        type: array
      include_feedback_by_rating:
        type: boolean
        description: To include feedback by rating for Feedback question type
      promoter:
        type: string
        description: Promoter text for NPS feedback question type
      passive:
        type: string
        description: Passive text for NPS feedback question type
      detractor:
        type: string
        description: Detractor text for NPS feedback question type
      low_effort:
        type: string
        description: Low effort text for CES feedback question type
      neutral:
        type: string
        description: Neutral text for CES feedback question type
      high_effort:
        type: string
        description: High effort text for CES feedback question type
      satisfied:
        type: string
        description: Satisfied text for CSAT feedback question type
      dissatisfied:
        type: string
        description: Dissatisfied text for CSAT feedback question type
      translate_answers:
        type: boolean
        description: To translate answers for feedback question type
  Model 208:
    type: object
    properties:
      data:
        $ref: '#/definitions/Model 207'
  Model 209:
    type: object
    properties:
      join_condition:
        type: string
        description: Logic operator of the Join condition
        example: and
        default: and
        enum:
          - and
          - or
      type:
        type: string
        description: Logic type
        enum:
          - param
          - question
          - contact
          - channel
          - expression
          - deviceType
      comparator:
        type: string
        enum:
          - isPassed
          - isNotPassed
          - startsWith
          - endsWith
          - contains
          - equalsString
          - doesNotContain
          - notEqualTo
          - lessThanForParam
          - greaterThanForParam
        required:
          - comparator
        x-alternatives:
          - type: string
            enum:
              - isPassed
              - isNotPassed
              - startsWith
              - endsWith
              - contains
              - equalsString
              - doesNotContain
              - notEqualTo
              - lessThanForParam
              - greaterThanForParam
          - type: string
            enum:
              - isAnswered
              - isNotAnswered
              - startsWith
              - endsWith
              - contains
              - equalsString
              - doesNotContain
              - notEqualTo
              - isNotSelected
              - isSelected
              - equalToForScale
              - notEqualToForScale
              - lessThanForScale
              - greaterThanForScale
              - equalToForRating
              - notEqualToForRating
              - lessThanForRating
              - greaterThanForRating
              - equalToForNumber
              - notEqualToForNumber
              - lessThanForNumber
              - greaterThanForNumber
              - equalToForDate
              - notEqualToForDate
              - equalToForYesNo
              - notEqualToForYesNo
              - isAContactEmail
            required:
              - comparator
            x-alternatives:
              - type: string
                enum:
                  - isAnswered
                  - isNotAnswered
                  - startsWith
                  - endsWith
                  - contains
                  - equalsString
                  - doesNotContain
                  - notEqualTo
                  - isNotSelected
                  - isSelected
                  - equalToForScale
                  - notEqualToForScale
                  - lessThanForScale
                  - greaterThanForScale
                  - equalToForRating
                  - notEqualToForRating
                  - lessThanForRating
                  - greaterThanForRating
                  - equalToForNumber
                  - notEqualToForNumber
                  - lessThanForNumber
                  - greaterThanForNumber
                  - equalToForDate
                  - notEqualToForDate
                  - equalToForYesNo
                  - notEqualToForYesNo
                  - isAContactEmail
              - type: string
                enum:
                  - startsWith
                  - endsWith
                  - contains
                  - equalsString
                  - equalsForDropDown
                  - notEqualsForDropDown
                  - hasValue
                  - isEmpty
                  - doesNotContain
                  - notEqualTo
                  - equalToForNumber
                  - notEqualToForNumber
                  - lessThanForNumber
                  - greaterThanForNumber
                  - before
                  - after
                  - equalToForDate
                  - notEqualToForDate
                required:
                  - comparator
                x-alternatives:
                  - type: string
                    enum:
                      - startsWith
                      - endsWith
                      - contains
                      - equalsString
                      - equalsForDropDown
                      - notEqualsForDropDown
                      - hasValue
                      - isEmpty
                      - doesNotContain
                      - notEqualTo
                      - equalToForNumber
                      - notEqualToForNumber
                      - lessThanForNumber
                      - greaterThanForNumber
                      - before
                      - after
                      - equalToForDate
                      - notEqualToForDate
                  - type: string
                    enum:
                      - startsWith
                      - endsWith
                      - contains
                      - equalsString
                      - isChannelType
                      - isNotChannelType
                    required:
                      - comparator
                    x-alternatives:
                      - type: string
                        enum:
                          - startsWith
                          - endsWith
                          - contains
                          - equalsString
                          - isChannelType
                          - isNotChannelType
                      - type: string
                        enum:
                          - equalToForNumber
                          - notEqualToForNumber
                          - lessThanForNumber
                          - greaterThanForNumber
                          - isTrue
                          - isFalse
                        required:
                          - comparator
                        x-alternatives:
                          - type: string
                            enum:
                              - equalToForNumber
                              - notEqualToForNumber
                              - lessThanForNumber
                              - greaterThanForNumber
                              - isTrue
                              - isFalse
                          - type: string
                            enum:
                              - isDevice
                              - isNotDevice
                            required:
                              - comparator
                            x-alternatives:
                              - type: string
                                enum:
                                  - isDevice
                                  - isNotDevice
      variable_id:
        type: number
        description: Variable Id for the Logic
        required:
          - variable_id
        x-alternatives:
          - type: number
            description: Variable Id for the Logic
      question_id:
        type: number
        description: Question Id for the Logic
        required:
          - question_id
        x-alternatives:
          - type: number
            description: Question Id for the Logic
      contact:
        type: string
        description: Contact property for the Logic
        enum:
          - firstName
          - lastName
          - email
          - phone
          - mobile
          - jobTitle
          - language
        required:
          - contact
        x-alternatives:
          - type: string
            description: Contact property for the Logic
            enum:
              - firstName
              - lastName
              - email
              - phone
              - mobile
              - jobTitle
              - language
      channel:
        type: string
        description: Channel property for the Logic
        enum:
          - type
          - name
        required:
          - channel
        x-alternatives:
          - type: string
            description: Channel property for the Logic
            enum:
              - type
              - name
      expression_id:
        type: number
        description: Expression Id for the Logic
        required:
          - expression_id
        x-alternatives:
          - type: number
            description: Expression Id for the Logic
      parent_question_id:
        type: number
        description: >-
          If question is a subquestion, parent_question_id will be the Id of the
          parent question
        example: 3
      value:
        type: string
        description: Value for the logic
        default: ''
    required:
      - type
  logicsSchema:
    type: array
    items:
      $ref: '#/definitions/Model 209'
  Model 210:
    type: object
    properties:
      logics:
        $ref: '#/definitions/logicsSchema'
        type: array
  Model 211:
    type: object
    properties:
      jump_to:
        type: string
        default: Default
      redirect_url:
        type: string
        default: ''
      logics:
        $ref: '#/definitions/logicsSchema'
        type: array
  Model 212:
    type: array
    items:
      $ref: '#/definitions/Model 211'
  skip_logic:
    type: object
    properties:
      logics:
        $ref: '#/definitions/Model 212'
        type: array
  Model 213:
    type: object
    properties:
      text:
        type: string
      description:
        type: string
      required:
        type: boolean
      properties:
        $ref: '#/definitions/Model 208'
      display_logic:
        $ref: '#/definitions/Model 210'
      skip_logic:
        $ref: '#/definitions/skip_logic'
  Model 214:
    type: object
    properties:
      survey_id:
        type: number
        description: Survey Id
        example: 1
      question:
        $ref: '#/definitions/Model 213'
    required:
      - survey_id
      - question
  updateQuestionSchema:
    type: object
    properties:
      data:
        $ref: '#/definitions/questionSchema'
  updateRequestSchema:
    type: object
    properties:
      survey_id:
        type: number
        description: ID of the survey
        example: 1
      contact_id:
        type: number
        description: ID of the contact
        example: 2
      answers:
        $ref: '#/definitions/getAnswerSchema'
        type: array
    required:
      - survey_id
      - answers
  section:
    type: object
    description: Section object is required
    properties:
      name:
        type: string
        description: Name of the section
        example: Section 1
        maxLength: 10000
      description:
        type: string
        description: Description of the section
        example: Section 1 description
        maxLength: 10000
      position:
        type: number
        description: Position of the section
        example: 1
      properties:
        $ref: '#/definitions/Model 104'
      display_logic:
        $ref: '#/definitions/Model 107'
  Model 215:
    type: object
    description: Section object is required
    properties:
      survey_id:
        type: number
        description: Id of Survey
        example: 12001
      section:
        $ref: '#/definitions/section'
    required:
      - survey_id
      - section
  Model 216:
    type: array
    description: >-
      Replaces all existing child tickets with the provided IDs, if an empty
      array ([]) is provided, all child associations will be removed.
    example:
      - 1234
      - 5678
    items:
      type: number
  editTicketSchema:
    type: object
    properties:
      priority:
        type: number
        description: Ticket priority
        example: 4
      status:
        type: number
        description: Ticket status
        example: 5
      assignee_id:
        type: number
        description: Ticket agent's user id
        example: 2
      team_id:
        type: number
        description: Ticket team's id
        example: 3
      parent_ticket_id:
        type: number
        description: >-
          Links the current ticket to a parent ticket when a valid ticket ID is
          provided. Removes the parent-child relationship if null is provided.
        example: 3456
      child_ticket_ids:
        $ref: '#/definitions/Model 216'
        type: array
      custom_fields:
        $ref: '#/definitions/properties'
  Model 217:
    type: object
    properties:
      name:
        type: string
        maxLength: 255
      description:
        type: string
        maxLength: 1000
      url:
        type: string
        maxLength: 1000
      http_method:
        type: string
        enum:
          - POST
          - GET
          - PATCH
          - PUT
          - DELETE
        maxLength: 255
      headers:
        $ref: '#/definitions/Model 117'
        type: array
      payload:
        $ref: '#/definitions/properties'
      include_partial_submission:
        type: boolean
        example: true
  Model 218:
    type: object
    properties:
      type:
        type: string
        enum:
          - NUMBER
          - DOUBLE
          - EMAIL
          - SINGLE_LINE_TEXT
          - MULTI_LINE_TEXT
          - DATE
          - URL
          - DROPDOWN
          - STRING
      label:
        type: string
        maxLength: 255
      description:
        type: string
        maxLength: 1000
      contact_property_group_id:
        type: number
  Model 219:
    type: object
    properties:
      partialSubmission:
        type: boolean
      editResponse:
        type: boolean
      anonymousResponses:
        type: boolean
      submissionPerUser:
        type: number
        minimum: 1
      cutOffDate:
        type: string
        format: date
  Model 220:
    type: object
    properties:
      survey_id:
        type: number
        description: ID of the survey
        example: 1
    required:
      - survey_id
  Model 221:
    type: object
    properties:
      state:
        type: string
        description: State of the response
        example: COMPLETED
      time_taken:
        type: number
        description: Time Taken of the response
        example: 5
    required:
      - state
      - time_taken
  getCompleteResponse:
    type: object
    properties:
      data:
        $ref: '#/definitions/Model 221'
  Model 222:
    type: object
    properties:
      survey_id:
        type: number
        description: ID of the survey
        example: 1
      answers:
        $ref: '#/definitions/getAnswerSchema'
        type: array
    required:
      - survey_id
      - answers
  Model 223:
    type: object
    properties:
      evaluators:
        $ref: '#/definitions/evaluators'
        type: array
    required:
      - evaluators
  Model 224:
    type: object
    properties:
      min:
        type: string
      max:
        type: string
      step:
        type: number
        enum:
          - 3
          - 4
          - 5
          - 6
          - 7
          - 8
          - 9
          - 10
      wait:
        type: number
        enum:
          - 0
          - 1
          - 2
          - 3
          - 4
          - 5
      type:
        type: string
      start:
        type: number
        enum:
          - 0
          - 1
      fileTypes:
        $ref: '#/definitions/fileTypes'
        type: array
  Model 225:
    type: object
    properties:
      data:
        $ref: '#/definitions/Model 224'
  Model 226:
    type: object
    properties:
      text:
        type: string
      description:
        type: string
      required:
        type: boolean
      properties:
        $ref: '#/definitions/Model 225'
      displayLogic:
        $ref: '#/definitions/displayLogic'
  Model 227:
    type: object
    properties:
      label:
        type: string
      sectionRandomise:
        type: boolean
  Model 228:
    type: object
    properties:
      name:
        type: string
        maxLength: 10000
      description:
        type: string
        maxLength: 10000
      properties:
        $ref: '#/definitions/Model 227'
      displayLogic:
        $ref: '#/definitions/displayLogic'
  Model 229:
    type: object
    properties:
      evaluators:
        $ref: '#/definitions/Model 168'
        type: array
    required:
      - evaluators
  Model 230:
    type: object
    properties:
      contacts:
        $ref: '#/definitions/getContactSchema'
        type: array
      contactList:
        $ref: '#/definitions/teams'
        type: array
      message:
        type: string
        maxLength: 140
      smsTargetId:
        type: number
      variables:
        $ref: '#/definitions/properties'
      twilio_consent_agreed:
        type: boolean
        description: For using surveysparrow message service you need to agree the consent.
  Model 231:
    type: array
    items:
      $ref: '#/definitions/Model 146'
  Model 232:
    type: object
    properties:
      id:
        type: number
      variables:
        $ref: '#/definitions/properties'
    required:
      - id
  contactList:
    type: array
    items:
      $ref: '#/definitions/Model 232'
  Model 233:
    type: object
    properties:
      contacts:
        $ref: '#/definitions/Model 231'
        type: array
      contactList:
        $ref: '#/definitions/contactList'
        type: array
      message:
        type: string
        maxLength: 140
      smsTargetId:
        type: number
      variables:
        $ref: '#/definitions/properties'
      sendLaterInDays:
        type: number
        minimum: 1
      twilio_consent_agreed:
        type: boolean
        description: For using surveysparrow message service you need to agree the consent.
  Model 234:
    type: object
    properties:
      language_code:
        type: string
        description: Language code
        example: en
      survey_id:
        type: number
        description: Survey ID
        example: 123456
    required:
      - language_code
      - survey_id
  Model 235:
    type: object
    description: Response data
    properties:
      message:
        type: string
        description: Message
        example: Translation deleted successfully
    required:
      - message
  Model 236:
    type: object
    properties:
      data:
        $ref: '#/definitions/Model 235'
    required:
      - data
  Model 237:
    type: object
    properties:
      survey_id:
        type: number
        description: Id of Survey
        example: 12001
    required:
      - survey_id
  Model 238:
    type: object
    properties:
      success:
        type: boolean
        enum:
          - true
  Model 239:
    type: object
    properties:
      error:
        type: string
        enum:
          - Reminder not found
  Model 240:
    type: object
    properties:
      succsats:
        type: boolean
        enum:
          - true
  Model 241:
    type: object
    properties:
      name:
        type: string
        maxLength: 255
      description:
        type: string
        maxLength: 1000
  Model 242:
    type: object
    properties:
      name:
        type: string
        maxLength: 200
      workspace_id:
        type: number
      theme_id:
        type: number
      welcome_text:
        type: string
      thankyou_json:
        $ref: '#/definitions/surveyThankyouPageArraySchema'
        type: array
      archived:
        type: boolean
      settings:
        $ref: '#/definitions/surveySettings'
  updateVariablesSchema:
    type: object
    properties:
      data:
        $ref: '#/definitions/getSurveysSurveySchema'
        type: array
  Model 243:
    type: object
    properties:
      name:
        type: string
        description: Name of the user
        example: John Doe
        maxLength: 255
        x-convert:
          trim: true
      role_id:
        type: number
        description: User role Id
        example: 1
x-alt-definitions:
  result:
    type: object
  Model 1:
    type: object
    properties:
      email:
        type: string
        description: >-
          Email of contact. Can be optional only if anonymous contact feature is
          enabled.
        maxLength: 255
        x-format:
          email: true
        optional:
          - email
          - email
        x-alternatives:
          - type: string
            description: >-
              Email of contact. Can be optional only if anonymous contact
              feature is enabled.
            maxLength: 255
            x-format:
              email: true
          - type: string
      mobile:
        type: string
        description: Mobile number in E.164 format, required when type is SMS
        required:
          - mobile
        optional:
          - mobile
        x-alternatives:
          - type: string
            description: Mobile number in E.164 format, required when type is SMS
          - type: string
      referenceId:
        type: string
        description: Reference ID of the anonymous contact
        example: '123456'
        maxLength: 255
      variables:
        $ref: '#/x-alt-definitions/result'
  contacts:
    type: array
    minItems: 1
    maxItems: 20000
    items:
      $ref: '#/x-alt-definitions/Model 1'
  contact_list_ids:
    type: array
    minItems: 1
    maxItems: 20
    items:
      type: number
  h:
    type: array
    minItems: 1
    items:
      type: number
      minimum: 0
      maximum: 23
  m:
    type: array
    minItems: 1
    items:
      type: number
      minimum: 0
      maximum: 60
  d:
    type: array
    minItems: 1
    items:
      type: string
      enum:
        - 0
        - 1
        - 2
        - 3
        - 4
        - 5
        - 6
        - 7
  config:
    type: object
    properties:
      h:
        $ref: '#/x-alt-definitions/h'
        type: array
      m:
        $ref: '#/x-alt-definitions/m'
        type: array
      d:
        $ref: '#/x-alt-definitions/d'
        type: array
    required:
      - h
      - m
      - d
  D:
    type: array
    minItems: 1
    items:
      type: string
      enum:
        - 0
        - 1
        - 2
        - 3
        - 4
        - 5
        - 6
        - 7
        - 8
        - 9
        - 10
        - 11
        - 12
        - 13
        - 14
        - 15
        - 16
        - 17
        - 18
        - 19
        - 20
        - 21
        - 22
        - 23
        - 24
        - 25
        - 26
        - 27
        - 28
        - 29
        - 30
        - 31
  Model 2:
    type: object
    properties:
      h:
        $ref: '#/x-alt-definitions/h'
        type: array
      m:
        $ref: '#/x-alt-definitions/m'
        type: array
      D:
        $ref: '#/x-alt-definitions/D'
        type: array
    required:
      - h
      - m
      - D
  M:
    type: array
    minItems: 1
    items:
      type: string
      enum:
        - 0
        - 1
        - 2
        - 3
        - 4
        - 5
        - 6
        - 7
        - 8
        - 9
        - 10
        - 11
        - 12
  Model 3:
    type: object
    properties:
      h:
        $ref: '#/x-alt-definitions/h'
        type: array
      m:
        $ref: '#/x-alt-definitions/m'
        type: array
      D:
        $ref: '#/x-alt-definitions/D'
        type: array
      M:
        $ref: '#/x-alt-definitions/M'
        type: array
    required:
      - h
      - m
      - D
      - M
  Model 4:
    type: object
    properties:
      h:
        $ref: '#/x-alt-definitions/h'
        type: array
      m:
        $ref: '#/x-alt-definitions/m'
        type: array
      M:
        $ref: '#/x-alt-definitions/M'
        type: array
      d:
        $ref: '#/x-alt-definitions/d'
        type: array
      D:
        $ref: '#/x-alt-definitions/D'
        type: array
    required:
      - h
      - m
      - M
      - d
      - D
  schedule:
    type: object
    properties:
      frequency:
        type: string
        enum:
          - WEEKLY
          - MONTHLY
          - YEARLY
      config:
        $ref: '#/definitions/config'
        x-alternatives:
          - $ref: '#/x-alt-definitions/config'
          - $ref: '#/definitions/Model 74'
            x-alternatives:
              - $ref: '#/x-alt-definitions/Model 2'
              - $ref: '#/definitions/Model 75'
                x-alternatives:
                  - $ref: '#/x-alt-definitions/Model 3'
                  - $ref: '#/x-alt-definitions/Model 4'
    required:
      - frequency
      - config
  first_nps:
    type: object
    properties:
      delay:
        type: number
        description: Delay after which first survey to be shared
        minimum: 1
        x-constraint:
          positive: true
      unit:
        type: string
        description: Unit of the delay
        enum:
          - Days
          - Months
          - Hours
      contact_property_id:
        type: number
        description: >-
          Id of the contact property, only DATE type contact properties are
          allowed
    required:
      - delay
      - unit
      - contact_property_id
  relative_schedule:
    type: object
    properties:
      first_nps:
        $ref: '#/x-alt-definitions/first_nps'
      after_first_nps_schedule:
        type: string
        description: Repetition of survey sharing after first share
        enum:
          - NONE
          - EVERY_45_DAYS
          - EVERY_3_MONTHS
          - EVERY_6_MONTHS
          - EVERY_1_YEAR
    required:
      - after_first_nps_schedule
  sms:
    type: object
    description: Only required when type is SMS
    properties:
      message:
        type: string
        description: >-
          Message of sms, both {company_name} and {survey_link} variables are
          required.
      twilio_consent_agreed:
        type: boolean
        description: For using SurveySparrow message service you need to agree the consent
      target_id:
        type: number
        description: Id of the custom target, default target will be taken if not given
  properties:
    type: object
    properties:
      body:
        type: string
        description: Body of the email
      from_address:
        type: string
        description: From address of the email
        x-format:
          email:
            minDomainAtoms: 2
      embed_first_question:
        type: boolean
      custom_footer:
        type: boolean
        default: false
      custom_footer_value:
        type: string
        description: Custom footer value
      show_surveysparrow_branding:
        type: boolean
        description: Set true to show SurveySparrow branding on email
      reply_to:
        type: string
        description: Reply to address of the email
        x-format:
          email:
            minDomainAtoms: 2
      preview_text:
        type: string
        description: Pre-header of the Email
    required:
      - embed_first_question
      - show_surveysparrow_branding
  email:
    type: object
    properties:
      subject:
        type: string
        description: Subject of the email
      properties:
        $ref: '#/x-alt-definitions/properties'
      theme_id:
        type: number
        description: Id of the email theme
    required:
      - subject
  link:
    type: object
    properties:
      title:
        type: string
        description: Title of the weblink channel
      description:
        type: string
        description: Description of the web link channel
      image_link:
        type: string
        description: >-
          Image link of the weblink channel, provide link for a JPEG or PNG
          image. Get best results when the image is 1200 x 630 pixels
  offline:
    type: object
    properties:
      animation_direction:
        type: string
        description: Animation Direction of the offline channel
        enum:
          - Horizontal
          - Vertical
  other_text:
    type: object
    properties:
      text:
        type: string
        description: Other option text
      score:
        type: number
        description: Other option score
  all_of_the_above_text:
    type: object
    properties:
      text:
        type: string
        description: All of the above text
  none_of_the_above_text:
    type: object
    properties:
      text:
        type: string
        description: None of the above option option text
      score:
        type: number
        description: None of the above option option score
  Model 5:
    type: object
    properties:
      text:
        type: string
        description: Required only for DROP_DOWN answer type in matrix question
        maxLength: 500
    required:
      - text
  choices:
    type: array
    items:
      $ref: '#/x-alt-definitions/Model 5'
  Model 6:
    type: object
    properties:
      name:
        type: string
        description: Column name for matrix, bipolar matrix
        maxLength: 200
      choices:
        $ref: '#/x-alt-definitions/choices'
        type: array
    required:
      - name
  column:
    type: array
    minItems: 1
    items:
      $ref: '#/x-alt-definitions/Model 6'
  Model 7:
    type: object
    properties:
      name:
        type: string
        description: column name for bipolar matrix
        maxLength: 200
    required:
      - name
  Model 8:
    type: array
    minItems: 3
    items:
      $ref: '#/x-alt-definitions/Model 7'
  Model 9:
    type: object
    properties:
      text:
        type: string
        description: Required only for DROP_DOWN answer type in contact form question.
        maxLength: 500
    required:
      - text
  Model 10:
    type: array
    items:
      $ref: '#/x-alt-definitions/Model 9'
  Model 11:
    type: object
    properties:
      left_text:
        type: string
        description: Sub question or row text
        maxLength: 200
      right_text:
        type: string
        description: 'Right row text. Required only for bipolar matrix. '
        required:
          - right_text
        x-alternatives:
          - type: string
            description: 'Right row text. Required only for bipolar matrix. '
      required:
        type: boolean
        description: Only for questions in contact form. True by default
        x-alternatives:
          - type: boolean
            description: Only for questions in contact form. True by default
      row_type:
        type: string
        description: Sub question type for contact form. Required only for contact form.
        enum:
          - string
          - number
          - email
          - date
          - dropdown
          - PhoneNumber
        required:
          - row_type
        x-alternatives:
          - type: string
            description: >-
              Sub question type for contact form. Required only for contact
              form.
            enum:
              - string
              - number
              - email
              - date
              - dropdown
              - PhoneNumber
      choices:
        $ref: '#/definitions/Model 97'
        type: array
        x-alternatives:
          - $ref: '#/x-alt-definitions/Model 10'
            type: array
    required:
      - left_text
  row:
    type: array
    minItems: 1
    items:
      $ref: '#/x-alt-definitions/Model 11'
  Model 12:
    type: object
    properties:
      d:
        $ref: '#/x-alt-definitions/d'
        type: array
      M:
        $ref: '#/x-alt-definitions/M'
        type: array
      D:
        $ref: '#/x-alt-definitions/D'
        type: array
      h:
        $ref: '#/x-alt-definitions/h'
        type: array
      m:
        $ref: '#/x-alt-definitions/m'
        type: array
    required:
      - h
      - m
  Model 13:
    type: object
    properties:
      frequency:
        type: string
        enum:
          - MINUTELY
          - WEEKLY
          - MONTHLY
          - YEARLY
          - CUSTOM
          - QUARTERLY
          - DAILY
      config:
        $ref: '#/x-alt-definitions/Model 12'
    required:
      - frequency
      - config
  Model 14:
    type: object
    properties:
      label:
        type: string
        maxLength: 64
      name:
        type: string
        maxLength: 35
      description:
        type: string
        maxLength: 200
      type:
        type: string
        enum:
          - STRING
          - NUMBER
          - DATE
    required:
      - label
      - name
      - type
  Model 15:
    type: array
    minItems: 1
    maxItems: 50
    items:
      $ref: '#/x-alt-definitions/Model 14'
  Model 16:
    type: object
    properties:
      label:
        type: string
        default: Continue
      sectionRandomise:
        type: boolean
        default: false
  Model 17:
    type: object
    properties:
      join_condition:
        type: string
        default: and
        enum:
          - and
          - or
      type:
        type: string
        enum:
          - param
      comparator:
        type: string
        enum:
          - isPassed
          - isNotPassed
          - startsWith
          - endsWith
          - contains
          - equalsString
          - doesNotContain
          - notEqualTo
          - lessThanForParam
          - greaterThanForParam
      variable_id:
        type: number
        required:
          - variable_id
        x-alternatives:
          - type: number
      value:
        type: string
        default: ''
    required:
      - type
      - comparator
  logics:
    type: array
    items:
      $ref: '#/x-alt-definitions/Model 17'
  displayLogic:
    type: object
    properties:
      logics:
        $ref: '#/x-alt-definitions/logics'
        type: array
  tags:
    type: array
    items:
      type: string
      pattern: /^[a-zA-Z ]*$/
  Model 18:
    type: object
    properties:
      text:
        type: string
      score:
        type: number
  Model 19:
    type: array
    items:
      $ref: '#/x-alt-definitions/Model 18'
  allOfTheAboveText:
    type: object
    properties:
      text:
        type: string
  fileTypes:
    type: array
    items:
      type: string
      default:
        - image
        - doc
      enum:
        - image
        - doc
        - video
        - audio
  data:
    type: object
    properties:
      min:
        type: string
      max:
        type: string
      step:
        type: number
        enum:
          - 3
          - 4
          - 5
          - 6
          - 7
          - 8
          - 9
          - 10
      wait:
        type: number
        enum:
          - 0
          - 1
          - 2
          - 3
          - 4
          - 5
      type:
        type: string
        enum:
          - SINGLE_LINE
          - MULTI_LINE
          - UNLIMITED
          - EXACT
          - RANGE
      start:
        type: number
        enum:
          - 0
          - 1
      fileTypes:
        $ref: '#/x-alt-definitions/fileTypes'
        type: array
      minLimit:
        type: number
        required:
          - minLimit
        x-alternatives:
          - type: number
      maxLimit:
        type: number
        required:
          - maxLimit
        x-alternatives:
          - type: number
      exactChoices:
        type: number
        required:
          - exactChoices
        x-alternatives:
          - type: number
  Model 20:
    type: object
    properties:
      data:
        $ref: '#/x-alt-definitions/data'
  Model 21:
    type: object
    default: []
    properties:
      text:
        type: string
      description:
        type: string
      required:
        type: boolean
      type:
        type: string
        enum:
          - FileInput
          - TextInput
          - OpinionScale
          - MultiChoice
      desc:
        type: string
        maxLength: 10000
      optionsStacked:
        type: boolean
      randomized:
        type: boolean
      multipleAnswers:
        type: boolean
      img:
        type: string
        maxLength: 2000
      video:
        type: string
        maxLength: 2000
      audio:
        type: string
        maxLength: 2000
      tags:
        $ref: '#/x-alt-definitions/tags'
        type: array
      choices:
        $ref: '#/x-alt-definitions/Model 19'
        type: array
      hasScore:
        type: boolean
      other:
        type: boolean
      allOfTheAbove:
        type: boolean
      noneOfTheAbove:
        type: boolean
      otherText:
        $ref: '#/x-alt-definitions/Model 18'
      noneOfTheAboveText:
        $ref: '#/x-alt-definitions/Model 18'
      allOfTheAboveText:
        $ref: '#/x-alt-definitions/allOfTheAboveText'
      properties:
        $ref: '#/x-alt-definitions/Model 20'
      displayLogic:
        $ref: '#/x-alt-definitions/displayLogic'
    required:
      - text
      - type
  questions:
    type: array
    maxItems: 50
    items:
      $ref: '#/x-alt-definitions/Model 21'
  Model 22:
    type: object
    properties:
      name:
        type: string
      description:
        type: string
      properties:
        $ref: '#/x-alt-definitions/Model 16'
      displayLogic:
        $ref: '#/x-alt-definitions/displayLogic'
      questions:
        $ref: '#/x-alt-definitions/questions'
        type: array
  Model 23:
    type: array
    minItems: 1
    maxItems: 20
    items:
      $ref: '#/x-alt-definitions/Model 22'
  Model 24:
    type: object
    properties:
      preAdded:
        type: boolean
      message:
        type: string
      description:
        type: string
      redirectBoolean:
        type: boolean
      redirectMultiBoolean:
        type: boolean
      redirect:
        type: string
        required:
          - redirect
        optional:
          - redirect
        x-alternatives:
          - type: string
          - type: string
      branding:
        type: boolean
      redirectMulti:
        $ref: '#/definitions/properties'
        required:
          - redirectMulti
        optional:
          - redirectMulti
          - redirectMulti
        x-alternatives:
          - $ref: '#/x-alt-definitions/result'
          - type: string
  thankyou_json:
    type: array
    items:
      $ref: '#/x-alt-definitions/Model 24'
securityDefinitions:
  API_KEY:
    type: apiKey
    name: Authorization
    in: header
servers:
  - url: https://app.surveysparrow.com
  - url: https://eu-ff-app.surveysparrow.com
  - url: http://ap-mi-app.surveysparrow.com
  - url: http://me-uae-app.surveysparrow.com
  - url: http://eu-ln-app.surveysparrow.com
  - url: http://ap-sy-app.surveysparrow.com
  - url: http://ca-app.surveysparrow.com
